{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/snr/Desktop/Project/spa/imports/vue/ui/loanConfig.vue","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"/home/snr/Desktop/Project/spa/imports/vue/ui/loanConfig.vue","filename":"/home/snr/Desktop/Project/spa/imports/vue/ui/loanConfig.vue","passPerPreset":false,"envName":"development","cwd":"/home/snr/Desktop/Project/spa","root":"/home/snr/Desktop/Project/spa","generatorOpts":{"filename":"/home/snr/Desktop/Project/spa/imports/vue/ui/loanConfig.vue","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"/home/snr/Desktop/Project/spa/imports/vue/ui/loanConfig.vue"}},"code":"var compoLang;\nmodule.link(\"../../../both/i18n/lang/elem-label\", {\n  \"default\": function (v) {\n    compoLang = v;\n  }\n}, 0);\nvar Loan_ConfigReact;\nmodule.link(\"../../collection/loanConfig\", {\n  Loan_ConfigReact: function (v) {\n    Loan_ConfigReact = v;\n  }\n}, 1);\nvar Images;\nmodule.link(\"../../collection/fileImages\", {\n  Images: function (v) {\n    Images = v;\n  }\n}, 2);\nvar Manage_Module;\nmodule.link(\"../../collection/manageModule\", {\n  Manage_Module: function (v) {\n    Manage_Module = v;\n  }\n}, 3);\nmodule.exportDefault({\n  meteor: {\n    langSession: function () {\n      return Session.get('lang') || \"en\";\n    },\n    disabledRemove: function () {\n      return Session.get(\"canRemove\");\n    },\n    disabledUpdate: function () {\n      return Session.get(\"canUpdate\");\n    },\n    newRe: function () {\n      var vm = this;\n      Loan_ConfigReact.find({}).fetch();\n      vm.queryData(vm.searchData, vm.skip, vm.currentSize + vm.skip);\n    },\n    isCoffee: function () {\n      var ma = Manage_Module.findOne();\n\n      if (ma && ma.feature) {\n        return ma.feature.indexOf(\"Coffee\") > -1 ? true : false;\n      }\n\n      return false;\n    }\n  },\n  mounted: function () {\n    this.$jQuery('body').off();\n  },\n  data: function () {\n    return {\n      dialogImageUrl: \"\",\n      dialogVisible: false,\n      loanConfigData: [],\n      loading: false,\n      isloadingImage: false,\n      searchData: '',\n      isSearching: false,\n      currentPage: 1,\n      currentSize: 10,\n      count: 0,\n      dialogAddLoanConfig: false,\n      dialogUpdateLoanConfig: false,\n      loanConfigForm: {\n        methodType: \"\",\n        description: \"\",\n        _id: \"\"\n      },\n      rules: {\n        name: [{\n          required: true,\n          message: 'Please input name',\n          trigger: 'blur'\n        }],\n        code: [{\n          required: true,\n          message: 'Please input code',\n          trigger: 'blur'\n        }]\n      },\n      // Options\n      subConfigDataOption: [],\n      skip: 0,\n      thumbImgCroppa: null,\n      imgUrl: \"\",\n      imgUrlUpdate: \"\"\n    };\n  },\n  watch: {\n    currentSize: function (val) {\n      this.isSearching = true;\n      this.skip = (this.currentPage - 1) * val;\n      this.queryData(this.searchData, this.skip, val + this.skip);\n    },\n    currentPage: function (val) {\n      this.isSearching = true;\n      this.skip = (val - 1) * this.currentSize;\n      this.queryData(this.searchData, this.skip, this.currentSize + this.skip);\n    },\n    searchData: function (val) {\n      this.isSearching = true;\n      this.skip = (this.currentPage - 1) * this.currentSize;\n      this.queryData(val, this.skip, this.currentSize + this.skip);\n    },\n    'thumbImgCroppa.loading': function (val) {\n      if (!val) {\n        this.generateThumbImgUrl();\n      }\n    }\n  },\n  methods: {\n    handleSizeChange: function (val) {\n      this.currentSize = val;\n    },\n    handleCurrentChange: function (val) {\n      this.currentPage = val;\n    },\n    queryData: _.debounce(function (val, skip, limit) {\n      var _this = this;\n\n      Meteor.call('queryLoanConfig', {\n        q: val,\n        filter: this.filter,\n        options: {\n          skip: skip || 0,\n          limit: limit || 10\n        }\n      }, function (err, result) {\n        if (!err) {\n          _this.loanConfigData = result.content;\n          _this.count = result.countLoanConfig;\n        }\n\n        _this.isSearching = false;\n      });\n    }, 300),\n    saveLoanConfig: function (event) {\n      event.preventDefault();\n      var vm = this;\n      this.$refs[\"loanConfigFormAdd\"].validate(function (valid) {\n        if (valid) {\n          var imageId = \"\";\n          var imagePath = \"\";\n\n          if (vm.thumbImgCroppa && vm.thumbImgCroppa.hasImage() && vm.imgUrl) {\n            var upload = Images.insert({\n              file: vm.imgUrl,\n              streams: 'dynamic',\n              chunkSize: 'dynamic'\n            }, false);\n            upload.on('start', function (error, result) {\n              if (error) {\n                console.log(error.message);\n              }\n            });\n            upload.on('end', function (error, fileObj) {\n              if (error) {\n                console.log(error.message);\n              } else {\n                imageId = fileObj._id;\n                imagePath = fileObj._downloadRoute + \"/\" + fileObj._collectionName + \"/\" + fileObj._id + \"/original/\" + fileObj._id + fileObj.extensionWithDot;\n                var loanConfigDoc = {\n                  code: vm.loanConfigForm.code,\n                  name: vm.loanConfigForm.name,\n                  khName: vm.loanConfigForm.khName,\n                  subConfigOf: vm.loanConfigForm.subConfigOf,\n                  description: vm.loanConfigForm.description,\n                  imageId: imageId,\n                  imagePath: imagePath\n                };\n                Meteor.call(\"insertLoanConfig\", loanConfigDoc, function (err, result) {\n                  if (!err) {\n                    vm.$message({\n                      duration: 1000,\n                      message: \"Save Successfully!\",\n                      type: 'success'\n                    });\n                    vm.dialogAddLoanConfig = false;\n                    vm.parentLoanConfigOption();\n                    vm.$refs[\"loanConfigFormAdd\"].resetFields();\n                    /*if (vm.imgUrl) {\n                        const storageRef = storagePath.fileImage(fileImage, Meteor.userId(), result, \"config\");\n                        let uploadTask = storageRef\n                            .child(\"fileImage\")\n                            .putString(vm.imgUrl, \"data_url\");\n                        uploadTask.on(\n                            \"state_changed\",\n                            function (snapshot) {\n                                // Observe state change events such as progress, pause, and resume\n                                // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n                                let progress =\n                                    snapshot.bytesTransferred / snapshot.totalBytes * 100;\n                                console.log(\"Upload is \" + progress + \"% done\");\n                                switch (snapshot.state) {\n                                    case firebase.storageState.PAUSED: // or 'paused'\n                                        console.log(\"Upload is paused\");\n                                        break;\n                                    case firebase.storageState.RUNNING: // or 'running'\n                                        console.log(\"Upload is running \" + progress);\n                                        break;\n                                }\n                            },\n                            function (error) {\n                                /!*setTimeout(() => {\n                                    loading.close();\n                                }, 1000)*!/\n                            },\n                            function () {\n                                uploadTask.snapshot.ref.getDownloadURL()\n                                    .then(url => {\n                                        console.log(url);\n                                        /!*Meteor.call('sch_updateStudentImageURlById', result, url, (err, re) => {\n                                            if (err) {\n                                                console.log(err.message);\n                                            } else {\n                                                vm.thumbImgCroppa = null;\n                                            }\n                                        });*!/\n                                    }).catch(err => console.log(err));\n                            });\n                    }*/\n                  } else {\n                    vm.$message({\n                      duration: 1000,\n                      message: err.message,\n                      type: 'error'\n                    });\n                  }\n                });\n              }\n            });\n            upload.start(); //let fsFile = new FS.File(vm.thumbImgCroppa.getChosenFile());\n\n            /*vm.thumbImgCroppa.generateBlob((result) => {\n                let reader = new FileReader();\n                reader.onload = function (event) {\n                    let buffer = new Unit8Array(reader.result);\n                    Files.insert({data: buffer});\n                }\n                 reader.readAsArrayBuffer(result);\n            });*/\n\n            /*fsFile = new FS.File(vm.thumbImgCroppa.getChosenFile());\n            console.log(fsFile);\n            ConfigImage.insert(fsFile, function (err, result) {\n                if (err) {\n                    throw new Meteor.Error(err);\n                } else {\n                    let imageLoc = '/cfs/files/configImage' + result._id;\n                    console.log(imageLoc);\n                }\n            })*/\n\n            /*vm.thumbImgCroppa.generateBlob((blob) => {\n                let fd = new FormData();\n                fd.append('file', blob, \"fileName.jpg\");\n                console.log(fd);\n                ConfigImage.insert(fd, function (err, result) {\n                    if (err) {\n                        throw new Meteor.Error(err);\n                    } else {\n                        let imageLoc = '/cfs/files/configImage' + result._id;\n                        console.log(imageLoc);\n                    }\n                })\n              })*/\n\n            /*fsFile = new FS.File(myfi);\n            console.log(fsFile);\n            ConfigImage.insert(fsFile, function (err, result) {\n                if (err) {\n                    throw new Meteor.Error(err);\n                } else {\n                    let imageLoc = '/cfs/files/configImage' + result._id;\n                    console.log(imageLoc);\n                }\n            })*/\n          } else {\n            var loanConfigDoc = {\n              code: vm.loanConfigForm.code,\n              name: vm.loanConfigForm.name,\n              khName: vm.loanConfigForm.khName,\n              subConfigOf: vm.loanConfigForm.subConfigOf,\n              description: vm.loanConfigForm.description\n            };\n            Meteor.call(\"insertLoanConfig\", loanConfigDoc, function (err, result) {\n              if (!err) {\n                vm.$message({\n                  duration: 1000,\n                  message: \"Save Successfully!\",\n                  type: 'success'\n                });\n                vm.dialogAddLoanConfig = false;\n                vm.parentLoanConfigOption();\n                vm.$refs[\"loanConfigFormAdd\"].resetFields();\n                /*if (vm.imgUrl) {\n                const storageRef = storagePath.fileImage(fileImage, Meteor.userId(), result, \"config\");\n                let uploadTask = storageRef\n                    .child(\"fileImage\")\n                    .putString(vm.imgUrl, \"data_url\");\n                uploadTask.on(\n                    \"state_changed\",\n                    function (snapshot) {\n                        // Observe state change events such as progress, pause, and resume\n                        // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n                        let progress =\n                            snapshot.bytesTransferred / snapshot.totalBytes * 100;\n                        console.log(\"Upload is \" + progress + \"% done\");\n                        switch (snapshot.state) {\n                            case firebase.storageState.PAUSED: // or 'paused'\n                                console.log(\"Upload is paused\");\n                                break;\n                            case firebase.storageState.RUNNING: // or 'running'\n                                console.log(\"Upload is running \" + progress);\n                                break;\n                        }\n                    },\n                    function (error) {\n                        /!*setTimeout(() => {\n                            loading.close();\n                        }, 1000)*!/\n                    },\n                    function () {\n                        uploadTask.snapshot.ref.getDownloadURL()\n                            .then(url => {\n                                console.log(url);\n                                /!*Meteor.call('sch_updateStudentImageURlById', result, url, (err, re) => {\n                                    if (err) {\n                                        console.log(err.message);\n                                    } else {\n                                        vm.thumbImgCroppa = null;\n                                    }\n                                });*!/\n                            }).catch(err => console.log(err));\n                    });\n                }*/\n              } else {\n                vm.$message({\n                  duration: 1000,\n                  message: err.message,\n                  type: 'error'\n                });\n              }\n            });\n          }\n        }\n      });\n    },\n    updateLoanConfig: function () {\n      var vm = this;\n      this.$refs[\"loanConfigFormUpdate\"].validate(function (valid) {\n        if (valid) {\n          if (vm.thumbImgCroppa && vm.thumbImgCroppa.hasImage() && vm.imgUrl) {\n            var upload = Images.insert({\n              file: vm.imgUrl,\n              streams: 'dynamic',\n              chunkSize: 'dynamic'\n            }, false);\n            upload.on('start', function (error, result) {\n              if (error) {\n                console.log(error.message);\n              }\n            });\n            upload.on('end', function (error, fileObj) {\n              if (error) {\n                console.log(error.message);\n              } else {\n                var imageId = fileObj._id;\n                var imagePath = fileObj._downloadRoute + \"/\" + fileObj._collectionName + \"/\" + fileObj._id + \"/original/\" + fileObj._id + fileObj.extensionWithDot;\n                var loanConfigDoc = {\n                  _id: vm.loanConfigForm._id,\n                  code: vm.loanConfigForm.code,\n                  name: vm.loanConfigForm.name,\n                  khName: vm.loanConfigForm.khName,\n                  subConfigOf: vm.loanConfigForm.subConfigOf,\n                  description: vm.loanConfigForm.description,\n                  imageId: imageId,\n                  imagePath: imagePath\n                };\n                Meteor.call(\"updateLoanConfig\", loanConfigDoc, function (err, result) {\n                  if (!err) {\n                    vm.$message({\n                      duration: 1000,\n                      message: \"\\n                        Update\\n                        Successfully\\n                        !\",\n                      type: 'success'\n                    });\n                    vm.dialogUpdateLoanConfig = false;\n                    vm.parentLoanConfigOption();\n                    vm.$refs[\"loanConfigFormUpdate\"].resetFields();\n                  } else {\n                    vm.$message({\n                      duration: 1000,\n                      message: \"\\n                        Update\\n                        Failed\\n                        !\",\n                      type: 'error'\n                    });\n                  }\n                });\n              }\n            });\n            upload.start();\n          } else {\n            var loanConfigDoc = {\n              _id: vm.loanConfigForm._id,\n              code: vm.loanConfigForm.code,\n              name: vm.loanConfigForm.name,\n              khName: vm.loanConfigForm.khName,\n              subConfigOf: vm.loanConfigForm.subConfigOf,\n              description: vm.loanConfigForm.description\n            };\n            Meteor.call(\"updateLoanConfig\", loanConfigDoc, function (err, result) {\n              if (!err) {\n                vm.$message({\n                  duration: 1000,\n                  message: \"\\n                        Update\\n                        Successfully\\n                        !\",\n                  type: 'success'\n                });\n                vm.dialogUpdateLoanConfig = false;\n                vm.parentLoanConfigOption();\n                vm.$refs[\"loanConfigFormUpdate\"].resetFields();\n              } else {\n                vm.$message({\n                  duration: 1000,\n                  message: \"\\n                        Update\\n                        Failed\\n                        !\",\n                  type: 'error'\n                });\n              }\n            });\n          }\n        }\n      });\n    },\n    removeLoanConfig: function (index, row, rows) {\n      var _this2 = this;\n\n      var vm = this;\n      this.$confirm('This will permanently delete the file. Continue?', 'Warning', {\n        confirmButtonText: 'OK',\n        cancelButtonText: 'Cancel',\n        type: 'warning'\n      }).then(function () {\n        Meteor.call(\"removeLoanConfig\", row._id, row.imageId, function (err, result) {\n          if (!err) {\n            rows.splice(index, 1);\n            vm.$message({\n              message: \"\\n                        \\u179B\\u17BB\\u1794 \" + row.code + \" : \" + row.name + \" \\u1794\\u17B6\\u1793\\u1787\\u17C4\\u1782\\u1787\\u17D0\\u1799\",\n              type: 'success'\n            });\n            vm.parentLoanConfigOption();\n          } else {\n            vm.$message({\n              type: 'error',\n              message: 'Delete Failed'\n            });\n          }\n        });\n      }).catch(function () {\n        _this2.$message({\n          type: 'info',\n          message: 'Delete canceled'\n        });\n      });\n    },\n    findLoanConfigById: function (doc) {\n      var _this3 = this;\n\n      var vm = this;\n      vm.loanConfigForm = {};\n      Meteor.call(\"queryLoanConfigById\", doc.row._id, function (err, result) {\n        if (result) {\n          vm.loanConfigForm._id = result._id;\n\n          if (result.subConfigOf == undefined || result.subConfigOf == \"\") {\n            result.subConfigOf = \"\";\n          }\n\n          vm.loanConfigForm = result;\n          vm.imgUrlUpdate = result.imagePath || \"\";\n\n          _this3.parentLoanConfigOption();\n        }\n      });\n    },\n    cancel: function () {\n      this.$message({\n        type: 'info',\n        message: 'Canceled'\n      });\n    },\n    resetForm: function () {\n      this.imgUrlUpdate = \"\";\n      this.thumbImgCroppa = null;\n      this.loanConfigForm._id = \"\";\n      this.parentLoanConfigOption();\n\n      if (this.$refs[\"loanConfigFormAdd\"]) {\n        this.$refs[\"loanConfigFormAdd\"].resetFields();\n      }\n\n      if (this.$refs[\"loanConfigFormUpdate\"]) {\n        this.$refs[\"loanConfigFormUpdate\"].resetFields();\n      }\n    },\n    generateThumbImgUrl: function () {\n      this.isloadingImage = true;\n      var url = this.thumbImgCroppa && this.thumbImgCroppa.getChosenFile();\n      this.isloadingImage = false; // let url = this.thumbImgCroppa && this.thumbImgCroppa.generateDataUrl();\n\n      if (!url) {\n        return;\n      }\n\n      this.imgUrl = url;\n    },\n    handleThumbImgCroppaZoom: function () {\n      this.generateThumbImgUrl();\n    },\n    handleThumbImgCroppaMove: function () {\n      this.generateThumbImgUrl();\n    },\n    handleThumbImgRemove: function () {\n      this.imgUrl = null;\n    },\n    handlePictureCardPreview: function (url) {\n      this.dialogImageUrl = url;\n      this.dialogVisible = true;\n    }\n  },\n  created: function () {\n    this.isSearching = true;\n    this.parentLoanConfigOption();\n    this.queryData();\n    Meteor.subscribe('Loan_ConfigReact');\n  },\n  computed: {\n    langConfig: function () {\n      var _this4 = this;\n\n      var data = compoLang.filter(function (config) {\n        return config.lang === _this4.langSession;\n      })[0]['config'];\n      return data;\n    }\n  }\n});","map":{"version":3,"sources":["/home/snr/Desktop/Project/spa/imports/vue/ui/loanConfig.vue"],"names":["compoLang","module","link","v","Loan_ConfigReact","Images","Manage_Module","exportDefault","meteor","langSession","Session","get","disabledRemove","disabledUpdate","newRe","vm","find","fetch","queryData","searchData","skip","currentSize","isCoffee","ma","findOne","feature","indexOf","mounted","$jQuery","off","data","dialogImageUrl","dialogVisible","loanConfigData","loading","isloadingImage","isSearching","currentPage","count","dialogAddLoanConfig","dialogUpdateLoanConfig","loanConfigForm","methodType","description","_id","rules","name","required","message","trigger","code","subConfigDataOption","thumbImgCroppa","imgUrl","imgUrlUpdate","watch","val","generateThumbImgUrl","methods","handleSizeChange","handleCurrentChange","_","debounce","limit","Meteor","call","q","filter","options","err","result","content","countLoanConfig","saveLoanConfig","event","preventDefault","$refs","validate","valid","imageId","imagePath","hasImage","upload","insert","file","streams","chunkSize","on","error","console","log","fileObj","_downloadRoute","_collectionName","extensionWithDot","loanConfigDoc","khName","subConfigOf","$message","duration","type","parentLoanConfigOption","resetFields","start","updateLoanConfig","removeLoanConfig","index","row","rows","$confirm","confirmButtonText","cancelButtonText","then","splice","catch","findLoanConfigById","doc","undefined","cancel","resetForm","url","getChosenFile","handleThumbImgCroppaZoom","handleThumbImgCroppaMove","handleThumbImgRemove","handlePictureCardPreview","created","subscribe","computed","langConfig","config","lang"],"mappings":"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","sourcesContent":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n    import compoLang from '../../../both/i18n/lang/elem-label'\n    import {Loan_ConfigReact} from \"../../collection/loanConfig\";\n    import {Images} from \"../../collection/fileImages\";\n    import {Manage_Module} from \"../../collection/manageModule\";\n\n\n    export default {\n        meteor: {\n            langSession() {\n                return Session.get('lang') || \"en\";\n            },\n            disabledRemove() {\n                return Session.get(\"canRemove\");\n            },\n            disabledUpdate() {\n                return Session.get(\"canUpdate\");\n            },\n            newRe() {\n                let vm = this;\n                Loan_ConfigReact.find({}).fetch();\n                vm.queryData(vm.searchData, vm.skip, vm.currentSize + vm.skip);\n            },\n            isCoffee() {\n                let ma = Manage_Module.findOne();\n                if (ma && ma.feature) {\n                    return (ma.feature.indexOf(\"Coffee\") > -1 ? true : false);\n                }\n\n                return false;\n            }\n\n        },\n        mounted() {\n            this.$jQuery('body').off();\n\n        },\n        data() {\n            return {\n                dialogImageUrl: \"\",\n                dialogVisible: false,\n                loanConfigData: [],\n                loading: false,\n                isloadingImage: false,\n                searchData: '',\n                isSearching: false,\n                currentPage: 1,\n                currentSize: 10,\n                count: 0,\n                dialogAddLoanConfig: false,\n                dialogUpdateLoanConfig: false,\n\n                loanConfigForm: {\n                    methodType: \"\",\n                    description: \"\",\n                    _id: \"\"\n                },\n                rules: {\n                    name: [{required: true, message: 'Please input name', trigger: 'blur'}],\n                    code: [{required: true, message: 'Please input code', trigger: 'blur'}],\n                },\n                // Options\n                subConfigDataOption: [],\n                skip: 0,\n                thumbImgCroppa: null,\n                imgUrl: \"\",\n                imgUrlUpdate: \"\"\n            }\n        },\n        watch: {\n            currentSize(val) {\n                this.isSearching = true;\n                this.skip = (this.currentPage - 1) * val;\n                this.queryData(this.searchData, this.skip, val + this.skip);\n            },\n            currentPage(val) {\n                this.isSearching = true;\n                this.skip = (val - 1) * this.currentSize;\n                this.queryData(this.searchData, this.skip, this.currentSize + this.skip);\n            },\n            searchData(val) {\n                this.isSearching = true;\n                this.skip = (this.currentPage - 1) * this.currentSize;\n                this.queryData(val, this.skip, this.currentSize + this.skip);\n            },\n            'thumbImgCroppa.loading'(val) {\n                if (!val) {\n                    this.generateThumbImgUrl();\n                }\n            }\n        },\n        methods: {\n            handleSizeChange(val) {\n                this.currentSize = val;\n            },\n            handleCurrentChange(val) {\n                this.currentPage = val;\n            },\n\n            queryData: _.debounce(function (val, skip, limit) {\n                Meteor.call('queryLoanConfig', {\n                    q: val,\n                    filter: this.filter,\n                    options: {skip: skip || 0, limit: limit || 10}\n                }, (err, result) => {\n                    if (!err) {\n                        this.loanConfigData = result.content;\n                        this.count = result.countLoanConfig;\n                    }\n                    this.isSearching = false;\n                });\n            }, 300),\n            saveLoanConfig(event) {\n                event.preventDefault();\n\n                let vm = this;\n                this.$refs[\"loanConfigFormAdd\"].validate((valid) => {\n                        if (valid) {\n                            let imageId = \"\";\n                            let imagePath = \"\";\n                            if (vm.thumbImgCroppa && vm.thumbImgCroppa.hasImage() && vm.imgUrl) {\n                                const upload = Images.insert({\n                                    file: vm.imgUrl,\n                                    streams: 'dynamic',\n                                    chunkSize: 'dynamic'\n                                }, false);\n\n                                upload.on('start', function (error, result) {\n                                    if (error) {\n                                        console.log(error.message);\n                                    }\n                                })\n\n                                upload.on('end', function (error, fileObj) {\n                                    if (error) {\n                                        console.log(error.message);\n                                    } else {\n                                        imageId = fileObj._id;\n                                        imagePath = fileObj._downloadRoute + \"/\" + fileObj._collectionName + \"/\" + fileObj._id + \"/original/\" + fileObj._id + fileObj.extensionWithDot;\n\n                                        let loanConfigDoc = {\n                                            code: vm.loanConfigForm.code,\n                                            name: vm.loanConfigForm.name,\n                                            khName: vm.loanConfigForm.khName,\n                                            subConfigOf: vm.loanConfigForm.subConfigOf,\n                                            description: vm.loanConfigForm.description,\n                                            imageId: imageId,\n                                            imagePath: imagePath,\n                                        };\n                                        Meteor.call(\"insertLoanConfig\", loanConfigDoc, (err, result) => {\n                                            if (!err) {\n                                                vm.$message({\n                                                    duration: 1000,\n                                                    message: `Save Successfully!`,\n                                                    type: 'success'\n                                                });\n                                                vm.dialogAddLoanConfig = false;\n                                                vm.parentLoanConfigOption();\n                                                vm.$refs[\"loanConfigFormAdd\"].resetFields();\n\n                                                /*if (vm.imgUrl) {\n                                                    const storageRef = storagePath.fileImage(fileImage, Meteor.userId(), result, \"config\");\n                                                    let uploadTask = storageRef\n                                                        .child(\"fileImage\")\n                                                        .putString(vm.imgUrl, \"data_url\");\n                                                    uploadTask.on(\n                                                        \"state_changed\",\n                                                        function (snapshot) {\n                                                            // Observe state change events such as progress, pause, and resume\n                                                            // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n                                                            let progress =\n                                                                snapshot.bytesTransferred / snapshot.totalBytes * 100;\n                                                            console.log(\"Upload is \" + progress + \"% done\");\n                                                            switch (snapshot.state) {\n                                                                case firebase.storageState.PAUSED: // or 'paused'\n                                                                    console.log(\"Upload is paused\");\n                                                                    break;\n                                                                case firebase.storageState.RUNNING: // or 'running'\n                                                                    console.log(\"Upload is running \" + progress);\n                                                                    break;\n                                                            }\n                                                        },\n                                                        function (error) {\n                                                            /!*setTimeout(() => {\n                                                                loading.close();\n                                                            }, 1000)*!/\n                                                        },\n                                                        function () {\n                                                            uploadTask.snapshot.ref.getDownloadURL()\n                                                                .then(url => {\n                                                                    console.log(url);\n                                                                    /!*Meteor.call('sch_updateStudentImageURlById', result, url, (err, re) => {\n                                                                        if (err) {\n                                                                            console.log(err.message);\n                                                                        } else {\n                                                                            vm.thumbImgCroppa = null;\n                                                                        }\n                                                                    });*!/\n                                                                }).catch(err => console.log(err));\n                                                        });\n                                                }*/\n\n\n                                            } else {\n                                                vm.$message({\n                                                    duration: 1000,\n                                                    message: err.message,\n                                                    type: 'error'\n                                                });\n                                            }\n                                        })\n\n                                    }\n                                })\n\n                                upload.start();\n\n                                //let fsFile = new FS.File(vm.thumbImgCroppa.getChosenFile());\n                                /*vm.thumbImgCroppa.generateBlob((result) => {\n                                    let reader = new FileReader();\n                                    reader.onload = function (event) {\n                                        let buffer = new Unit8Array(reader.result);\n                                        Files.insert({data: buffer});\n                                    }\n\n                                    reader.readAsArrayBuffer(result);\n                                });*/\n\n\n                                /*fsFile = new FS.File(vm.thumbImgCroppa.getChosenFile());\n                                console.log(fsFile);\n                                ConfigImage.insert(fsFile, function (err, result) {\n                                    if (err) {\n                                        throw new Meteor.Error(err);\n                                    } else {\n                                        let imageLoc = '/cfs/files/configImage' + result._id;\n                                        console.log(imageLoc);\n                                    }\n                                })*/\n                                /*vm.thumbImgCroppa.generateBlob((blob) => {\n                                    let fd = new FormData();\n                                    fd.append('file', blob, \"fileName.jpg\");\n                                    console.log(fd);\n                                    ConfigImage.insert(fd, function (err, result) {\n                                        if (err) {\n                                            throw new Meteor.Error(err);\n                                        } else {\n                                            let imageLoc = '/cfs/files/configImage' + result._id;\n                                            console.log(imageLoc);\n                                        }\n                                    })\n\n\n                                })*/\n\n                                /*fsFile = new FS.File(myfi);\n                                console.log(fsFile);\n                                ConfigImage.insert(fsFile, function (err, result) {\n                                    if (err) {\n                                        throw new Meteor.Error(err);\n                                    } else {\n                                        let imageLoc = '/cfs/files/configImage' + result._id;\n                                        console.log(imageLoc);\n                                    }\n                                })*/\n\n\n                            } else {\n                                let loanConfigDoc = {\n                                    code: vm.loanConfigForm.code,\n                                    name: vm.loanConfigForm.name,\n                                    khName: vm.loanConfigForm.khName,\n                                    subConfigOf: vm.loanConfigForm.subConfigOf,\n                                    description: vm.loanConfigForm.description\n                                };\n                                Meteor.call(\"insertLoanConfig\", loanConfigDoc, (err, result) => {\n                                    if (!err) {\n                                        vm.$message({\n                                            duration: 1000,\n                                            message: `Save Successfully!`,\n                                            type: 'success'\n                                        });\n                                        vm.dialogAddLoanConfig = false;\n                                        vm.parentLoanConfigOption();\n                                        vm.$refs[\"loanConfigFormAdd\"].resetFields();\n\n\n                                        /*if (vm.imgUrl) {\n                                        const storageRef = storagePath.fileImage(fileImage, Meteor.userId(), result, \"config\");\n                                        let uploadTask = storageRef\n                                            .child(\"fileImage\")\n                                            .putString(vm.imgUrl, \"data_url\");\n                                        uploadTask.on(\n                                            \"state_changed\",\n                                            function (snapshot) {\n                                                // Observe state change events such as progress, pause, and resume\n                                                // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n                                                let progress =\n                                                    snapshot.bytesTransferred / snapshot.totalBytes * 100;\n                                                console.log(\"Upload is \" + progress + \"% done\");\n                                                switch (snapshot.state) {\n                                                    case firebase.storageState.PAUSED: // or 'paused'\n                                                        console.log(\"Upload is paused\");\n                                                        break;\n                                                    case firebase.storageState.RUNNING: // or 'running'\n                                                        console.log(\"Upload is running \" + progress);\n                                                        break;\n                                                }\n                                            },\n                                            function (error) {\n                                                /!*setTimeout(() => {\n                                                    loading.close();\n                                                }, 1000)*!/\n                                            },\n                                            function () {\n                                                uploadTask.snapshot.ref.getDownloadURL()\n                                                    .then(url => {\n                                                        console.log(url);\n                                                        /!*Meteor.call('sch_updateStudentImageURlById', result, url, (err, re) => {\n                                                            if (err) {\n                                                                console.log(err.message);\n                                                            } else {\n                                                                vm.thumbImgCroppa = null;\n                                                            }\n                                                        });*!/\n                                                    }).catch(err => console.log(err));\n                                            });\n                                    }*/\n\n\n                                    } else {\n                                        vm.$message({\n                                            duration: 1000,\n                                            message: err.message,\n                                            type: 'error'\n                                        });\n                                    }\n                                })\n                            }\n                        }\n                    }\n                )\n\n            },\n            updateLoanConfig() {\n                let vm = this;\n                this.$refs[\"loanConfigFormUpdate\"].validate((valid) => {\n                    if (valid) {\n                        if (vm.thumbImgCroppa && vm.thumbImgCroppa.hasImage() && vm.imgUrl) {\n                            const upload = Images.insert({\n                                file: vm.imgUrl,\n                                streams: 'dynamic',\n                                chunkSize: 'dynamic'\n                            }, false);\n\n                            upload.on('start', function (error, result) {\n                                if (error) {\n                                    console.log(error.message);\n                                }\n                            })\n\n                            upload.on('end', function (error, fileObj) {\n                                if (error) {\n                                    console.log(error.message);\n                                } else {\n                                    let imageId = fileObj._id;\n                                    let imagePath = fileObj._downloadRoute + \"/\" + fileObj._collectionName + \"/\" + fileObj._id + \"/original/\" + fileObj._id + fileObj.extensionWithDot;\n\n                                    let loanConfigDoc = {\n                                        _id: vm.loanConfigForm._id,\n                                        code: vm.loanConfigForm.code,\n                                        name: vm.loanConfigForm.name,\n                                        khName: vm.loanConfigForm.khName,\n                                        subConfigOf: vm.loanConfigForm.subConfigOf,\n                                        description: vm.loanConfigForm.description,\n                                        imageId: imageId,\n                                        imagePath: imagePath\n                                    };\n\n                                    Meteor.call(\"updateLoanConfig\", loanConfigDoc, (err, result) => {\n                                        if (!err) {\n                                            vm.$message({\n                                                duration: 1000,\n                                                message: `\n                        Update\n                        Successfully\n                        !`,\n                                                type: 'success'\n                                            });\n                                            vm.dialogUpdateLoanConfig = false;\n                                            vm.parentLoanConfigOption();\n                                            vm.$refs[\"loanConfigFormUpdate\"].resetFields();\n                                        } else {\n                                            vm.$message({\n                                                duration: 1000,\n                                                message: `\n                        Update\n                        Failed\n                        !`,\n                                                type: 'error'\n                                            });\n                                        }\n                                    })\n\n                                }\n                            })\n\n                            upload.start();\n\n                        } else {\n\n\n                            let loanConfigDoc = {\n                                _id: vm.loanConfigForm._id,\n                                code: vm.loanConfigForm.code,\n                                name: vm.loanConfigForm.name,\n                                khName: vm.loanConfigForm.khName,\n                                subConfigOf: vm.loanConfigForm.subConfigOf,\n                                description: vm.loanConfigForm.description,\n                            };\n\n                            Meteor.call(\"updateLoanConfig\", loanConfigDoc, (err, result) => {\n                                if (!err) {\n                                    vm.$message({\n                                        duration: 1000,\n                                        message: `\n                        Update\n                        Successfully\n                        !`,\n                                        type: 'success'\n                                    });\n                                    vm.dialogUpdateLoanConfig = false;\n                                    vm.parentLoanConfigOption();\n                                    vm.$refs[\"loanConfigFormUpdate\"].resetFields();\n                                } else {\n                                    vm.$message({\n                                        duration: 1000,\n                                        message: `\n                        Update\n                        Failed\n                        !`,\n                                        type: 'error'\n                                    });\n                                }\n                            })\n                        }\n                    }\n                })\n\n            },\n            removeLoanConfig(index, row, rows) {\n                let vm = this;\n                this.$confirm('This will permanently delete the file. Continue?', 'Warning', {\n                    confirmButtonText: 'OK',\n                    cancelButtonText: 'Cancel',\n                    type: 'warning'\n                }).then(() => {\n                    Meteor.call(\"removeLoanConfig\", row._id, row.imageId, (err, result) => {\n                        if (!err) {\n                            rows.splice(index, 1);\n\n                            vm.$message({\n                                message: `\n                        លុប ${row.code} : ${row.name} បានជោគជ័យ`,\n                                type: 'success'\n                            });\n\n                            vm.parentLoanConfigOption();\n                        } else {\n                            vm.$message({\n                                type: 'error',\n                                message: 'Delete Failed'\n                            });\n                        }\n\n                    })\n\n                }).catch(() => {\n                    this.$message({\n                        type: 'info',\n                        message: 'Delete canceled'\n                    });\n                });\n\n\n            },\n            findLoanConfigById(doc) {\n                let vm = this;\n                vm.loanConfigForm = {};\n\n                Meteor.call(\"queryLoanConfigById\", doc.row._id, (err, result) => {\n                    if (result) {\n                        vm.loanConfigForm._id = result._id;\n                        if (result.subConfigOf == undefined || result.subConfigOf == \"\") {\n                            result.subConfigOf = \"\";\n                        }\n                        vm.loanConfigForm = result;\n                        vm.imgUrlUpdate = result.imagePath || \"\";\n                        this.parentLoanConfigOption();\n                    }\n                })\n            },\n            cancel() {\n                this.$message({\n                    type: 'info',\n                    message: 'Canceled'\n                });\n            },\n            resetForm() {\n                this.imgUrlUpdate = \"\";\n                this.thumbImgCroppa = null;\n\n                this.loanConfigForm._id = \"\";\n                this.parentLoanConfigOption();\n                if (this.$refs[\"loanConfigFormAdd\"]) {\n                    this.$refs[\"loanConfigFormAdd\"].resetFields();\n                }\n\n                if (this.$refs[\"loanConfigFormUpdate\"]) {\n                    this.$refs[\"loanConfigFormUpdate\"].resetFields();\n                }\n\n            },\n            generateThumbImgUrl: function () {\n                this.isloadingImage = true;\n                let url = this.thumbImgCroppa && this.thumbImgCroppa.getChosenFile();\n                this.isloadingImage = false;\n                // let url = this.thumbImgCroppa && this.thumbImgCroppa.generateDataUrl();\n                if (!url) {\n                    return\n                }\n                this.imgUrl = url\n            },\n            handleThumbImgCroppaZoom() {\n                this.generateThumbImgUrl();\n            },\n            handleThumbImgCroppaMove() {\n                this.generateThumbImgUrl();\n            },\n            handleThumbImgRemove() {\n                this.imgUrl = null\n            },\n            handlePictureCardPreview(url) {\n                this.dialogImageUrl = url;\n                this.dialogVisible = true;\n            }\n        },\n        created() {\n            this.isSearching = true;\n            this.parentLoanConfigOption();\n            this.queryData();\n            Meteor.subscribe('Loan_ConfigReact');\n\n        },\n        computed: {\n            langConfig() {\n                let data = compoLang.filter(config => config.lang === this.langSession)[0]['config'];\n                return data;\n            }\n        }\n    }\n"]},"sourceType":"script","hash":"8b94390342beb808c301a3dc5f72a80a4cbe149a"}
