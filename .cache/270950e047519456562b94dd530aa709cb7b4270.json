{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/snr/Desktop/Project/spa/imports/vue/ui/posCustomer.vue","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"/home/snr/Desktop/Project/spa/imports/vue/ui/posCustomer.vue","filename":"/home/snr/Desktop/Project/spa/imports/vue/ui/posCustomer.vue","passPerPreset":false,"envName":"development","cwd":"/home/snr/Desktop/Project/spa","root":"/home/snr/Desktop/Project/spa","generatorOpts":{"filename":"/home/snr/Desktop/Project/spa/imports/vue/ui/posCustomer.vue","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"/home/snr/Desktop/Project/spa/imports/vue/ui/posCustomer.vue"}},"code":"var compoLang;\nmodule.link(\"../../../both/i18n/lang/elem-label\", {\n  \"default\": function (v) {\n    compoLang = v;\n  }\n}, 0);\nvar Pos_CustomerReact;\nmodule.link(\"../../collection/posCustomer\", {\n  Pos_CustomerReact: function (v) {\n    Pos_CustomerReact = v;\n  }\n}, 1);\nmodule.exportDefault({\n  meteor: {\n    langSession: function () {\n      return Session.get('lang') || \"en\";\n    },\n    disabledRemove: function () {\n      return Session.get(\"canRemove\");\n    },\n    disabledUpdate: function () {\n      return Session.get(\"canUpdate\");\n    },\n    newRe: function () {\n      var vm = this;\n      Pos_CustomerReact.find({}).fetch();\n      vm.queryData(vm.searchData, vm.skip, vm.currentSize + vm.skip);\n    }\n  },\n  mounted: function () {\n    this.$jQuery('body').off();\n  },\n  data: function () {\n    return {\n      newLoading: true,\n      langSession: null,\n      posCustomerData: [],\n      loading: false,\n      searchData: '',\n      isSearching: false,\n      currentPage: 1,\n      currentSize: 10,\n      count: 0,\n      dialogAddPosCustomer: false,\n      dialogUpdatePosCustomer: false,\n      posCustomerForm: {\n        name: \"\",\n        khName: \"\",\n        address: \"\",\n        email: \"\",\n        phoneNumber: \"\",\n        termId: \"\",\n        openingBalance: \"\",\n        note: \"\",\n        dob: \"\",\n        nationId: \"\",\n        _id: \"\"\n      },\n      rules: {\n        name: [{\n          required: true,\n          message: 'Please input name',\n          trigger: 'blur'\n        }],\n        termId: [{\n          required: true,\n          type: 'string',\n          message: 'Please choose customer',\n          trigger: 'change'\n        }]\n      },\n      termDataOption: [],\n      skip: 0\n    };\n  },\n  watch: {\n    currentSize: function (val) {\n      this.isSearching = true;\n      this.skip = (this.currentPage - 1) * val;\n      this.queryData(this.searchData, this.skip, val + this.skip);\n    },\n    currentPage: function (val) {\n      this.isSearching = true;\n      this.skip = (val - 1) * this.currentSize;\n      this.queryData(this.searchData, this.skip, this.currentSize + this.skip);\n    },\n    searchData: function (val) {\n      this.isSearching = true;\n      this.skip = (this.currentPage - 1) * this.currentSize;\n      this.queryData(val, this.skip, this.currentSize + this.skip);\n    }\n  },\n  methods: {\n    handleSizeChange: function (val) {\n      this.currentSize = val;\n    },\n    handleCurrentChange: function (val) {\n      this.currentPage = val;\n    },\n    queryData: _.debounce(function (val, skip, limit) {\n      var _this = this;\n\n      this.newLoading = true;\n      Meteor.call('queryPosCustomer', {\n        q: val,\n        filter: this.filter,\n        rolesArea: Session.get('area'),\n        options: {\n          skip: skip || 0,\n          limit: limit || 10\n        }\n      }, function (err, result) {\n        if (!err) {\n          _this.posCustomerData = result.content;\n          _this.count = result.countPosCustomer;\n        }\n\n        _this.isSearching = false;\n        _this.newLoading = false;\n      });\n    }, 300),\n    posTermOption: function () {\n      var _this2 = this;\n\n      var selector = {};\n      Meteor.call('queryPosTermOption', selector, this.posCustomerForm._id, function (err, result) {\n        _this2.termDataOption = result;\n      });\n    },\n    savePosCustomer: function (event) {\n      var _this3 = this;\n\n      event.preventDefault();\n      var vm = this;\n      this.$refs[\"posCustomerFormAdd\"].validate(function (valid) {\n        if (valid) {\n          var posCustomerDoc = {\n            name: vm.posCustomerForm.name,\n            khName: vm.posCustomerForm.khName,\n            address: vm.posCustomerForm.address,\n            email: vm.posCustomerForm.email,\n            phoneNumber: vm.posCustomerForm.phoneNumber,\n            termId: vm.posCustomerForm.termId,\n            openingBalance: vm.posCustomerForm.openingBalance,\n            note: vm.posCustomerForm.note,\n            dob: vm.posCustomerForm.dob,\n            nationId: vm.posCustomerForm.nationId,\n            rolesArea: Session.get('area')\n          };\n          Meteor.call(\"insertPosCustomer\", posCustomerDoc, function (err, result) {\n            if (!err) {\n              vm.$message({\n                duration: 1000,\n                message: _this3.langConfig['saveSuccess'],\n                type: 'success'\n              });\n              vm.dialogAddPosCustomer = false;\n              vm.$refs[\"posCustomerForm\"].resetFields();\n            } else {\n              vm.$message({\n                duration: 1000,\n                message: err.message,\n                type: 'error'\n              });\n            }\n          });\n        }\n      });\n    },\n    updatePosCustomer: function () {\n      var _this4 = this;\n\n      var vm = this;\n      this.$refs[\"posCustomerFormUpdate\"].validate(function (valid) {\n        if (valid) {\n          var posCustomerDoc = {\n            _id: vm.posCustomerForm._id,\n            name: vm.posCustomerForm.name,\n            khName: vm.posCustomerForm.khName,\n            address: vm.posCustomerForm.address,\n            email: vm.posCustomerForm.email,\n            phoneNumber: vm.posCustomerForm.phoneNumber,\n            termId: vm.posCustomerForm.termId,\n            openingBalance: vm.posCustomerForm.openingBalance,\n            note: vm.posCustomerForm.note,\n            dob: vm.posCustomerForm.dob,\n            nationId: vm.posCustomerForm.nationId,\n            rolesArea: Session.get('area')\n          };\n          Meteor.call(\"updatePosCustomer\", posCustomerDoc, function (err, result) {\n            if (!err) {\n              vm.$message({\n                duration: 1000,\n                message: _this4.langConfig['updateSuccess'],\n                type: 'success'\n              });\n              vm.dialogUpdatePosCustomer = false;\n              vm.$refs[\"posCustomerForm\"].resetFields();\n            } else {\n              vm.$message({\n                duration: 1000,\n                message: _this4.langConfig['updateFail'],\n                type: 'error'\n              });\n            }\n          });\n        }\n      });\n    },\n    removePosCustomer: function (index, row, rows) {\n      var _this5 = this;\n\n      var vm = this;\n\n      if (row.invoiceNumber <= 0) {\n        this.$confirm(this.langConfig['message'], this.langConfig['warning'], {\n          confirmButtonText: 'OK',\n          cancelButtonText: 'Cancel',\n          type: 'warning'\n        }).then(function () {\n          Meteor.call(\"removePosCustomer\", row._id, function (err, result) {\n            if (!err) {\n              rows.splice(index, 1);\n              vm.$message({\n                message: \"\" + row.name + _this5.langConfig['removeSuccess'],\n                type: 'success'\n              });\n            } else {\n              vm.$message({\n                type: 'error',\n                message: _this5.langConfig['removeFail']\n              });\n            }\n          });\n        }).catch(function () {\n          _this5.$message({\n            type: 'info',\n            message: _this5.langConfig['cancel']\n          });\n        });\n      } else {\n        this.$message({\n          type: 'error',\n          message: this.langConfig['messageInovice'] + \" \" + row.invoiceNumber\n        });\n      }\n    },\n    findPosCustomerById: function (doc) {\n      var vm = this;\n      vm.posCustomerForm = {};\n      Meteor.call(\"queryPosCustomerById\", doc.row._id, function (err, result) {\n        if (result) {\n          vm.posCustomerForm._id = result._id;\n          vm.posCustomerForm = result;\n        }\n      });\n    },\n    cancel: function () {\n      this.$message({\n        type: 'info',\n        message: this.langConfig['cancel']\n      });\n    },\n    resetForm: function () {\n      this.posCustomerForm._id = \"\";\n\n      if (this.$refs[\"posCustomerFormAdd\"]) {\n        this.$refs[\"posCustomerFormAdd\"].resetFields();\n      }\n\n      if (this.$refs[\"posCustomerFormUpdate\"]) {\n        this.$refs[\"posCustomerFormUpdate\"].resetFields();\n      }\n    }\n  },\n  created: function () {\n    this.isSearching = true;\n    this.posTermOption();\n    this.queryData();\n    Meteor.subscribe('Pos_CustomerReact');\n  },\n  computed: {\n    langConfig: function () {\n      var _this6 = this;\n\n      var data = compoLang.filter(function (config) {\n        return config.lang === _this6.langSession;\n      })[0]['customer'];\n      return data;\n    }\n  }\n});","map":{"version":3,"sources":["/home/snr/Desktop/Project/spa/imports/vue/ui/posCustomer.vue"],"names":["compoLang","module","link","v","Pos_CustomerReact","exportDefault","meteor","langSession","Session","get","disabledRemove","disabledUpdate","newRe","vm","find","fetch","queryData","searchData","skip","currentSize","mounted","$jQuery","off","data","newLoading","posCustomerData","loading","isSearching","currentPage","count","dialogAddPosCustomer","dialogUpdatePosCustomer","posCustomerForm","name","khName","address","email","phoneNumber","termId","openingBalance","note","dob","nationId","_id","rules","required","message","trigger","type","termDataOption","watch","val","methods","handleSizeChange","handleCurrentChange","_","debounce","limit","Meteor","call","q","filter","rolesArea","options","err","result","content","countPosCustomer","posTermOption","selector","savePosCustomer","event","preventDefault","$refs","validate","valid","posCustomerDoc","$message","duration","langConfig","resetFields","updatePosCustomer","removePosCustomer","index","row","rows","invoiceNumber","$confirm","confirmButtonText","cancelButtonText","then","splice","catch","findPosCustomerById","doc","cancel","resetForm","created","subscribe","computed","config","lang"],"mappings":"AAAA,IAAIA,SAAJ;AAAcC,MAAM,CAACC,IAAP,CAAY,oCAAZ,EAAiD;AAAA,uBAASC,CAAT,EAAW;AAACH,IAAAA,SAAS,GAACG,CAAV;AAAY;AAAxB,CAAjD,EAA2E,CAA3E;AAA8E,IAAIC,iBAAJ;AAAsBH,MAAM,CAACC,IAAP,CAAY,8BAAZ,EAA2C;AAACE,EAAAA,iBAAD,YAAmBD,CAAnB,EAAqB;AAACC,IAAAA,iBAAiB,GAACD,CAAlB;AAAoB;AAA1C,CAA3C,EAAuF,CAAvF;AAAlHF,MAAM,CAACI,aAAP,CAuRmB;AACXC,EAAAA,MAAM,EAAE;AACJC,IAAAA,WADI,cACU;AACV,aAAOC,OAAO,CAACC,GAAR,CAAY,MAAZ,KAAuB,IAA9B;AACH,KAHG;AAIJC,IAAAA,cAJI,cAIa;AACb,aAAOF,OAAO,CAACC,GAAR,CAAY,WAAZ,CAAP;AACH,KANG;AAOJE,IAAAA,cAPI,cAOa;AACb,aAAOH,OAAO,CAACC,GAAR,CAAY,WAAZ,CAAP;AACH,KATG;AAUJG,IAAAA,KAVI,cAUI;AACJ,UAAIC,EAAE,GAAG,IAAT;AACAT,MAAAA,iBAAiB,CAACU,IAAlB,CAAuB,EAAvB,EAA2BC,KAA3B;AACAF,MAAAA,EAAE,CAACG,SAAH,CAAaH,EAAE,CAACI,UAAhB,EAA4BJ,EAAE,CAACK,IAA/B,EAAqCL,EAAE,CAACM,WAAH,GAAiBN,EAAE,CAACK,IAAzD;AACH;AAdG,GADG;AAiBXE,EAAAA,OAjBW,cAiBD;AACN,SAAKC,OAAL,CAAa,MAAb,EAAqBC,GAArB;AAEH,GApBU;AAqBXC,EAAAA,IArBW,cAqBJ;AACH,WAAO;AACHC,MAAAA,UAAU,EAAE,IADT;AAEHjB,MAAAA,WAAW,EAAE,IAFV;AAGHkB,MAAAA,eAAe,EAAE,EAHd;AAIHC,MAAAA,OAAO,EAAE,KAJN;AAKHT,MAAAA,UAAU,EAAE,EALT;AAMHU,MAAAA,WAAW,EAAE,KANV;AAOHC,MAAAA,WAAW,EAAE,CAPV;AAQHT,MAAAA,WAAW,EAAE,EARV;AASHU,MAAAA,KAAK,EAAE,CATJ;AAUHC,MAAAA,oBAAoB,EAAE,KAVnB;AAWHC,MAAAA,uBAAuB,EAAE,KAXtB;AAaHC,MAAAA,eAAe,EAAE;AACbC,QAAAA,IAAI,EAAE,EADO;AAEbC,QAAAA,MAAM,EAAE,EAFK;AAGbC,QAAAA,OAAO,EAAE,EAHI;AAIbC,QAAAA,KAAK,EAAE,EAJM;AAKbC,QAAAA,WAAW,EAAE,EALA;AAMbC,QAAAA,MAAM,EAAE,EANK;AAObC,QAAAA,cAAc,EAAE,EAPH;AAQbC,QAAAA,IAAI,EAAE,EARO;AASbC,QAAAA,GAAG,EAAE,EATQ;AAUbC,QAAAA,QAAQ,EAAE,EAVG;AAWbC,QAAAA,GAAG,EAAE;AAXQ,OAbd;AA0BHC,MAAAA,KAAK,EAAE;AACHX,QAAAA,IAAI,EAAE,CAAC;AAACY,UAAAA,QAAQ,EAAE,IAAX;AAAiBC,UAAAA,OAAO,EAAE,mBAA1B;AAA+CC,UAAAA,OAAO,EAAE;AAAxD,SAAD,CADH;AAEHT,QAAAA,MAAM,EAAE,CAAC;AACLO,UAAAA,QAAQ,EAAE,IADL;AAELG,UAAAA,IAAI,EAAE,QAFD;AAGLF,UAAAA,OAAO,EAAE,wBAHJ;AAILC,UAAAA,OAAO,EAAE;AAJJ,SAAD;AAFL,OA1BJ;AAoCHE,MAAAA,cAAc,EAAE,EApCb;AAqCH/B,MAAAA,IAAI,EAAE;AArCH,KAAP;AAuCH,GA7DU;AA8DXgC,EAAAA,KAAK,EAAE;AACH/B,IAAAA,WADG,YACSgC,GADT,EACc;AACb,WAAKxB,WAAL,GAAmB,IAAnB;AACA,WAAKT,IAAL,GAAY,CAAC,KAAKU,WAAL,GAAmB,CAApB,IAAyBuB,GAArC;AACA,WAAKnC,SAAL,CAAe,KAAKC,UAApB,EAAgC,KAAKC,IAArC,EAA2CiC,GAAG,GAAG,KAAKjC,IAAtD;AACH,KALE;AAMHU,IAAAA,WANG,YAMSuB,GANT,EAMc;AACb,WAAKxB,WAAL,GAAmB,IAAnB;AACA,WAAKT,IAAL,GAAY,CAACiC,GAAG,GAAG,CAAP,IAAY,KAAKhC,WAA7B;AACA,WAAKH,SAAL,CAAe,KAAKC,UAApB,EAAgC,KAAKC,IAArC,EAA2C,KAAKC,WAAL,GAAmB,KAAKD,IAAnE;AACH,KAVE;AAWHD,IAAAA,UAXG,YAWQkC,GAXR,EAWa;AACZ,WAAKxB,WAAL,GAAmB,IAAnB;AACA,WAAKT,IAAL,GAAY,CAAC,KAAKU,WAAL,GAAmB,CAApB,IAAyB,KAAKT,WAA1C;AACA,WAAKH,SAAL,CAAemC,GAAf,EAAoB,KAAKjC,IAAzB,EAA+B,KAAKC,WAAL,GAAmB,KAAKD,IAAvD;AACH;AAfE,GA9DI;AA+EXkC,EAAAA,OAAO,EAAE;AACLC,IAAAA,gBADK,YACYF,GADZ,EACiB;AAClB,WAAKhC,WAAL,GAAmBgC,GAAnB;AACH,KAHI;AAILG,IAAAA,mBAJK,YAIeH,GAJf,EAIoB;AACrB,WAAKvB,WAAL,GAAmBuB,GAAnB;AACH,KANI;AAOLnC,IAAAA,SAAS,EAAEuC,CAAC,CAACC,QAAF,CAAW,UAAUL,GAAV,EAAejC,IAAf,EAAqBuC,KAArB,EAA4B;AAAA;;AAC9C,WAAKjC,UAAL,GAAkB,IAAlB;AACAkC,MAAAA,MAAM,CAACC,IAAP,CAAY,kBAAZ,EAAgC;AAC5BC,QAAAA,CAAC,EAAET,GADyB;AAE5BU,QAAAA,MAAM,EAAE,KAAKA,MAFe;AAG5BC,QAAAA,SAAS,EAAEtD,OAAO,CAACC,GAAR,CAAY,MAAZ,CAHiB;AAI5BsD,QAAAA,OAAO,EAAE;AAAC7C,UAAAA,IAAI,EAAEA,IAAI,IAAI,CAAf;AAAkBuC,UAAAA,KAAK,EAAEA,KAAK,IAAI;AAAlC;AAJmB,OAAhC,EAKG,UAACO,GAAD,EAAMC,MAAN,EAAiB;AAChB,YAAI,CAACD,GAAL,EAAU;AACN,UAAA,KAAI,CAACvC,eAAL,GAAuBwC,MAAM,CAACC,OAA9B;AACA,UAAA,KAAI,CAACrC,KAAL,GAAaoC,MAAM,CAACE,gBAApB;AACH;;AACD,QAAA,KAAI,CAACxC,WAAL,GAAmB,KAAnB;AACA,QAAA,KAAI,CAACH,UAAL,GAAkB,KAAlB;AACH,OAZD;AAaH,KAfU,EAeR,GAfQ,CAPN;AAuBL4C,IAAAA,aAvBK,cAuBW;AAAA;;AACZ,UAAIC,QAAQ,GAAG,EAAf;AACAX,MAAAA,MAAM,CAACC,IAAP,CAAY,oBAAZ,EAAkCU,QAAlC,EAA4C,KAAKrC,eAAL,CAAqBW,GAAjE,EAAsE,UAACqB,GAAD,EAAMC,MAAN,EAAiB;AACnF,QAAA,MAAI,CAAChB,cAAL,GAAsBgB,MAAtB;AACH,OAFD;AAGH,KA5BI;AA6BLK,IAAAA,eA7BK,YA6BWC,KA7BX,EA6BkB;AAAA;;AACnBA,MAAAA,KAAK,CAACC,cAAN;AAEA,UAAI3D,EAAE,GAAG,IAAT;AACA,WAAK4D,KAAL,CAAW,oBAAX,EAAiCC,QAAjC,CAA0C,UAACC,KAAD,EAAW;AACjD,YAAIA,KAAJ,EAAW;AACP,cAAIC,cAAc,GAAG;AACjB3C,YAAAA,IAAI,EAAEpB,EAAE,CAACmB,eAAH,CAAmBC,IADR;AAEjBC,YAAAA,MAAM,EAAErB,EAAE,CAACmB,eAAH,CAAmBE,MAFV;AAGjBC,YAAAA,OAAO,EAAEtB,EAAE,CAACmB,eAAH,CAAmBG,OAHX;AAIjBC,YAAAA,KAAK,EAAEvB,EAAE,CAACmB,eAAH,CAAmBI,KAJT;AAKjBC,YAAAA,WAAW,EAAExB,EAAE,CAACmB,eAAH,CAAmBK,WALf;AAMjBC,YAAAA,MAAM,EAAEzB,EAAE,CAACmB,eAAH,CAAmBM,MANV;AAOjBC,YAAAA,cAAc,EAAE1B,EAAE,CAACmB,eAAH,CAAmBO,cAPlB;AAQjBC,YAAAA,IAAI,EAAE3B,EAAE,CAACmB,eAAH,CAAmBQ,IARR;AASjBC,YAAAA,GAAG,EAAE5B,EAAE,CAACmB,eAAH,CAAmBS,GATP;AAUjBC,YAAAA,QAAQ,EAAE7B,EAAE,CAACmB,eAAH,CAAmBU,QAVZ;AAWjBoB,YAAAA,SAAS,EAAEtD,OAAO,CAACC,GAAR,CAAY,MAAZ;AAXM,WAArB;AAcAiD,UAAAA,MAAM,CAACC,IAAP,CAAY,mBAAZ,EAAiCiB,cAAjC,EAAiD,UAACZ,GAAD,EAAMC,MAAN,EAAiB;AAC9D,gBAAI,CAACD,GAAL,EAAU;AACNnD,cAAAA,EAAE,CAACgE,QAAH,CAAY;AACRC,gBAAAA,QAAQ,EAAE,IADF;AAERhC,gBAAAA,OAAO,EAAE,MAAI,CAACiC,UAAL,CAAgB,aAAhB,CAFD;AAGR/B,gBAAAA,IAAI,EAAE;AAHE,eAAZ;AAKAnC,cAAAA,EAAE,CAACiB,oBAAH,GAA0B,KAA1B;AAEAjB,cAAAA,EAAE,CAAC4D,KAAH,CAAS,iBAAT,EAA4BO,WAA5B;AACH,aATD,MASO;AACHnE,cAAAA,EAAE,CAACgE,QAAH,CAAY;AACRC,gBAAAA,QAAQ,EAAE,IADF;AAERhC,gBAAAA,OAAO,EAAEkB,GAAG,CAAClB,OAFL;AAGRE,gBAAAA,IAAI,EAAE;AAHE,eAAZ;AAKH;AACJ,WAjBD;AAkBH;AACJ,OAnCD;AAqCH,KAtEI;AAuELiC,IAAAA,iBAvEK,cAuEe;AAAA;;AAChB,UAAIpE,EAAE,GAAG,IAAT;AACA,WAAK4D,KAAL,CAAW,uBAAX,EAAoCC,QAApC,CAA6C,UAACC,KAAD,EAAW;AACpD,YAAIA,KAAJ,EAAW;AACP,cAAIC,cAAc,GAAG;AACjBjC,YAAAA,GAAG,EAAE9B,EAAE,CAACmB,eAAH,CAAmBW,GADP;AAEjBV,YAAAA,IAAI,EAAEpB,EAAE,CAACmB,eAAH,CAAmBC,IAFR;AAGjBC,YAAAA,MAAM,EAAErB,EAAE,CAACmB,eAAH,CAAmBE,MAHV;AAIjBC,YAAAA,OAAO,EAAEtB,EAAE,CAACmB,eAAH,CAAmBG,OAJX;AAKjBC,YAAAA,KAAK,EAAEvB,EAAE,CAACmB,eAAH,CAAmBI,KALT;AAMjBC,YAAAA,WAAW,EAAExB,EAAE,CAACmB,eAAH,CAAmBK,WANf;AAOjBC,YAAAA,MAAM,EAAEzB,EAAE,CAACmB,eAAH,CAAmBM,MAPV;AAQjBC,YAAAA,cAAc,EAAE1B,EAAE,CAACmB,eAAH,CAAmBO,cARlB;AASjBC,YAAAA,IAAI,EAAE3B,EAAE,CAACmB,eAAH,CAAmBQ,IATR;AAUjBC,YAAAA,GAAG,EAAE5B,EAAE,CAACmB,eAAH,CAAmBS,GAVP;AAWjBC,YAAAA,QAAQ,EAAE7B,EAAE,CAACmB,eAAH,CAAmBU,QAXZ;AAYjBoB,YAAAA,SAAS,EAAEtD,OAAO,CAACC,GAAR,CAAY,MAAZ;AAZM,WAArB;AAeAiD,UAAAA,MAAM,CAACC,IAAP,CAAY,mBAAZ,EAAiCiB,cAAjC,EAAiD,UAACZ,GAAD,EAAMC,MAAN,EAAiB;AAC9D,gBAAI,CAACD,GAAL,EAAU;AACNnD,cAAAA,EAAE,CAACgE,QAAH,CAAY;AACRC,gBAAAA,QAAQ,EAAE,IADF;AAERhC,gBAAAA,OAAO,EAAE,MAAI,CAACiC,UAAL,CAAgB,eAAhB,CAFD;AAGR/B,gBAAAA,IAAI,EAAE;AAHE,eAAZ;AAKAnC,cAAAA,EAAE,CAACkB,uBAAH,GAA6B,KAA7B;AAEAlB,cAAAA,EAAE,CAAC4D,KAAH,CAAS,iBAAT,EAA4BO,WAA5B;AACH,aATD,MASO;AACHnE,cAAAA,EAAE,CAACgE,QAAH,CAAY;AACRC,gBAAAA,QAAQ,EAAE,IADF;AAERhC,gBAAAA,OAAO,EAAE,MAAI,CAACiC,UAAL,CAAgB,YAAhB,CAFD;AAGR/B,gBAAAA,IAAI,EAAE;AAHE,eAAZ;AAKH;AACJ,WAjBD;AAkBH;AACJ,OApCD;AAsCH,KA/GI;AAgHLkC,IAAAA,iBAhHK,YAgHaC,KAhHb,EAgHoBC,GAhHpB,EAgHyBC,IAhHzB,EAgH+B;AAAA;;AAChC,UAAIxE,EAAE,GAAG,IAAT;;AACA,UAAIuE,GAAG,CAACE,aAAJ,IAAqB,CAAzB,EAA4B;AACxB,aAAKC,QAAL,CAAc,KAAKR,UAAL,CAAgB,SAAhB,CAAd,EAA0C,KAAKA,UAAL,CAAgB,SAAhB,CAA1C,EAAsE;AAClES,UAAAA,iBAAiB,EAAE,IAD+C;AAElEC,UAAAA,gBAAgB,EAAE,QAFgD;AAGlEzC,UAAAA,IAAI,EAAE;AAH4D,SAAtE,EAIG0C,IAJH,CAIQ,YAAM;AACVhC,UAAAA,MAAM,CAACC,IAAP,CAAY,mBAAZ,EAAiCyB,GAAG,CAACzC,GAArC,EAA0C,UAACqB,GAAD,EAAMC,MAAN,EAAiB;AACvD,gBAAI,CAACD,GAAL,EAAU;AACNqB,cAAAA,IAAI,CAACM,MAAL,CAAYR,KAAZ,EAAmB,CAAnB;AAEAtE,cAAAA,EAAE,CAACgE,QAAH,CAAY;AACR/B,gBAAAA,OAAO,EAAE,KAAGsC,GAAG,CAACnD,IAAP,GAAgB,MAAI,CAAC8C,UAAL,CAAgB,eAAhB,CADjB;AAER/B,gBAAAA,IAAI,EAAE;AAFE,eAAZ;AAMH,aATD,MASO;AACHnC,cAAAA,EAAE,CAACgE,QAAH,CAAY;AACR7B,gBAAAA,IAAI,EAAE,OADE;AAERF,gBAAAA,OAAO,EAAE,MAAI,CAACiC,UAAL,CAAgB,YAAhB;AAFD,eAAZ;AAIH;AAEJ,WAjBD;AAmBH,SAxBD,EAwBGa,KAxBH,CAwBS,YAAM;AACX,UAAA,MAAI,CAACf,QAAL,CAAc;AACV7B,YAAAA,IAAI,EAAE,MADI;AAEVF,YAAAA,OAAO,EAAE,MAAI,CAACiC,UAAL,CAAgB,QAAhB;AAFC,WAAd;AAIH,SA7BD;AA8BH,OA/BD,MA+BO;AACH,aAAKF,QAAL,CAAc;AACV7B,UAAAA,IAAI,EAAE,OADI;AAEVF,UAAAA,OAAO,EAAE,KAAKiC,UAAL,CAAgB,gBAAhB,IAAoC,GAApC,GAA0CK,GAAG,CAACE;AAF7C,SAAd;AAIH;AAGJ,KAzJI;AA0JLO,IAAAA,mBA1JK,YA0JeC,GA1Jf,EA0JoB;AACrB,UAAIjF,EAAE,GAAG,IAAT;AACAA,MAAAA,EAAE,CAACmB,eAAH,GAAqB,EAArB;AAEA0B,MAAAA,MAAM,CAACC,IAAP,CAAY,sBAAZ,EAAoCmC,GAAG,CAACV,GAAJ,CAAQzC,GAA5C,EAAiD,UAACqB,GAAD,EAAMC,MAAN,EAAiB;AAC9D,YAAIA,MAAJ,EAAY;AACRpD,UAAAA,EAAE,CAACmB,eAAH,CAAmBW,GAAnB,GAAyBsB,MAAM,CAACtB,GAAhC;AACA9B,UAAAA,EAAE,CAACmB,eAAH,GAAqBiC,MAArB;AACH;AACJ,OALD;AAMH,KApKI;AAqKL8B,IAAAA,MArKK,cAqKI;AACL,WAAKlB,QAAL,CAAc;AACV7B,QAAAA,IAAI,EAAE,MADI;AAEVF,QAAAA,OAAO,EAAE,KAAKiC,UAAL,CAAgB,QAAhB;AAFC,OAAd;AAIH,KA1KI;AA2KLiB,IAAAA,SA3KK,cA2KO;AACR,WAAKhE,eAAL,CAAqBW,GAArB,GAA2B,EAA3B;;AACA,UAAI,KAAK8B,KAAL,CAAW,oBAAX,CAAJ,EAAsC;AAClC,aAAKA,KAAL,CAAW,oBAAX,EAAiCO,WAAjC;AACH;;AAED,UAAI,KAAKP,KAAL,CAAW,uBAAX,CAAJ,EAAyC;AACrC,aAAKA,KAAL,CAAW,uBAAX,EAAoCO,WAApC;AACH;AAEJ;AArLI,GA/EE;AAsQXiB,EAAAA,OAtQW,cAsQD;AACN,SAAKtE,WAAL,GAAmB,IAAnB;AACA,SAAKyC,aAAL;AACA,SAAKpD,SAAL;AACA0C,IAAAA,MAAM,CAACwC,SAAP,CAAiB,mBAAjB;AAEH,GA5QU;AA6QXC,EAAAA,QAAQ,EAAE;AACNpB,IAAAA,UADM,cACO;AAAA;;AACT,UAAIxD,IAAI,GAAGvB,SAAS,CAAC6D,MAAV,CAAiB,UAAAuC,MAAM;AAAA,eAAIA,MAAM,CAACC,IAAP,KAAgB,MAAI,CAAC9F,WAAzB;AAAA,OAAvB,EAA6D,CAA7D,EAAgE,UAAhE,CAAX;AACA,aAAOgB,IAAP;AACH;AAJK;AA7QC,CAvRnB","sourcesContent":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n    import compoLang from '../../../both/i18n/lang/elem-label'\n    import {Pos_CustomerReact} from \"../../collection/posCustomer\";\n\n    export default {\n        meteor: {\n            langSession() {\n                return Session.get('lang') || \"en\";\n            },\n            disabledRemove() {\n                return Session.get(\"canRemove\");\n            },\n            disabledUpdate() {\n                return Session.get(\"canUpdate\");\n            },\n            newRe() {\n                let vm = this;\n                Pos_CustomerReact.find({}).fetch();\n                vm.queryData(vm.searchData, vm.skip, vm.currentSize + vm.skip);\n            }\n        },\n        mounted() {\n            this.$jQuery('body').off();\n\n        },\n        data() {\n            return {\n                newLoading: true,\n                langSession: null,\n                posCustomerData: [],\n                loading: false,\n                searchData: '',\n                isSearching: false,\n                currentPage: 1,\n                currentSize: 10,\n                count: 0,\n                dialogAddPosCustomer: false,\n                dialogUpdatePosCustomer: false,\n\n                posCustomerForm: {\n                    name: \"\",\n                    khName: \"\",\n                    address: \"\",\n                    email: \"\",\n                    phoneNumber: \"\",\n                    termId: \"\",\n                    openingBalance: \"\",\n                    note: \"\",\n                    dob: \"\",\n                    nationId: \"\",\n                    _id: \"\"\n                },\n                rules: {\n                    name: [{required: true, message: 'Please input name', trigger: 'blur'}],\n                    termId: [{\n                        required: true,\n                        type: 'string',\n                        message: 'Please choose customer',\n                        trigger: 'change'\n                    }],\n\n                },\n                termDataOption: [],\n                skip: 0\n            }\n        },\n        watch: {\n            currentSize(val) {\n                this.isSearching = true;\n                this.skip = (this.currentPage - 1) * val;\n                this.queryData(this.searchData, this.skip, val + this.skip);\n            },\n            currentPage(val) {\n                this.isSearching = true;\n                this.skip = (val - 1) * this.currentSize;\n                this.queryData(this.searchData, this.skip, this.currentSize + this.skip);\n            },\n            searchData(val) {\n                this.isSearching = true;\n                this.skip = (this.currentPage - 1) * this.currentSize;\n                this.queryData(val, this.skip, this.currentSize + this.skip);\n            }\n        },\n        methods: {\n            handleSizeChange(val) {\n                this.currentSize = val;\n            },\n            handleCurrentChange(val) {\n                this.currentPage = val;\n            },\n            queryData: _.debounce(function (val, skip, limit) {\n                this.newLoading = true;\n                Meteor.call('queryPosCustomer', {\n                    q: val,\n                    filter: this.filter,\n                    rolesArea: Session.get('area'),\n                    options: {skip: skip || 0, limit: limit || 10}\n                }, (err, result) => {\n                    if (!err) {\n                        this.posCustomerData = result.content;\n                        this.count = result.countPosCustomer;\n                    }\n                    this.isSearching = false;\n                    this.newLoading = false;\n                });\n            }, 300),\n            posTermOption() {\n                let selector = {};\n                Meteor.call('queryPosTermOption', selector, this.posCustomerForm._id, (err, result) => {\n                    this.termDataOption = result;\n                })\n            },\n            savePosCustomer(event) {\n                event.preventDefault();\n\n                let vm = this;\n                this.$refs[\"posCustomerFormAdd\"].validate((valid) => {\n                    if (valid) {\n                        let posCustomerDoc = {\n                            name: vm.posCustomerForm.name,\n                            khName: vm.posCustomerForm.khName,\n                            address: vm.posCustomerForm.address,\n                            email: vm.posCustomerForm.email,\n                            phoneNumber: vm.posCustomerForm.phoneNumber,\n                            termId: vm.posCustomerForm.termId,\n                            openingBalance: vm.posCustomerForm.openingBalance,\n                            note: vm.posCustomerForm.note,\n                            dob: vm.posCustomerForm.dob,\n                            nationId: vm.posCustomerForm.nationId,\n                            rolesArea: Session.get('area')\n                        };\n\n                        Meteor.call(\"insertPosCustomer\", posCustomerDoc, (err, result) => {\n                            if (!err) {\n                                vm.$message({\n                                    duration: 1000,\n                                    message: this.langConfig['saveSuccess'],\n                                    type: 'success'\n                                });\n                                vm.dialogAddPosCustomer = false;\n\n                                vm.$refs[\"posCustomerForm\"].resetFields();\n                            } else {\n                                vm.$message({\n                                    duration: 1000,\n                                    message: err.message,\n                                    type: 'error'\n                                });\n                            }\n                        })\n                    }\n                })\n\n            },\n            updatePosCustomer() {\n                let vm = this;\n                this.$refs[\"posCustomerFormUpdate\"].validate((valid) => {\n                    if (valid) {\n                        let posCustomerDoc = {\n                            _id: vm.posCustomerForm._id,\n                            name: vm.posCustomerForm.name,\n                            khName: vm.posCustomerForm.khName,\n                            address: vm.posCustomerForm.address,\n                            email: vm.posCustomerForm.email,\n                            phoneNumber: vm.posCustomerForm.phoneNumber,\n                            termId: vm.posCustomerForm.termId,\n                            openingBalance: vm.posCustomerForm.openingBalance,\n                            note: vm.posCustomerForm.note,\n                            dob: vm.posCustomerForm.dob,\n                            nationId: vm.posCustomerForm.nationId,\n                            rolesArea: Session.get('area')\n                        };\n\n                        Meteor.call(\"updatePosCustomer\", posCustomerDoc, (err, result) => {\n                            if (!err) {\n                                vm.$message({\n                                    duration: 1000,\n                                    message: this.langConfig['updateSuccess'],\n                                    type: 'success'\n                                });\n                                vm.dialogUpdatePosCustomer = false;\n\n                                vm.$refs[\"posCustomerForm\"].resetFields();\n                            } else {\n                                vm.$message({\n                                    duration: 1000,\n                                    message: this.langConfig['updateFail'],\n                                    type: 'error'\n                                });\n                            }\n                        })\n                    }\n                })\n\n            },\n            removePosCustomer(index, row, rows) {\n                let vm = this;\n                if (row.invoiceNumber <= 0) {\n                    this.$confirm(this.langConfig['message'], this.langConfig['warning'], {\n                        confirmButtonText: 'OK',\n                        cancelButtonText: 'Cancel',\n                        type: 'warning'\n                    }).then(() => {\n                        Meteor.call(\"removePosCustomer\", row._id, (err, result) => {\n                            if (!err) {\n                                rows.splice(index, 1);\n\n                                vm.$message({\n                                    message: `${row.name}` + this.langConfig['removeSuccess'],\n                                    type: 'success'\n                                });\n\n\n                            } else {\n                                vm.$message({\n                                    type: 'error',\n                                    message: this.langConfig['removeFail']\n                                });\n                            }\n\n                        })\n\n                    }).catch(() => {\n                        this.$message({\n                            type: 'info',\n                            message: this.langConfig['cancel']\n                        });\n                    });\n                } else {\n                    this.$message({\n                        type: 'error',\n                        message: this.langConfig['messageInovice'] + \" \" + row.invoiceNumber\n                    });\n                }\n\n\n            },\n            findPosCustomerById(doc) {\n                let vm = this;\n                vm.posCustomerForm = {};\n\n                Meteor.call(\"queryPosCustomerById\", doc.row._id, (err, result) => {\n                    if (result) {\n                        vm.posCustomerForm._id = result._id;\n                        vm.posCustomerForm = result;\n                    }\n                })\n            },\n            cancel() {\n                this.$message({\n                    type: 'info',\n                    message: this.langConfig['cancel']\n                });\n            },\n            resetForm() {\n                this.posCustomerForm._id = \"\";\n                if (this.$refs[\"posCustomerFormAdd\"]) {\n                    this.$refs[\"posCustomerFormAdd\"].resetFields();\n                }\n\n                if (this.$refs[\"posCustomerFormUpdate\"]) {\n                    this.$refs[\"posCustomerFormUpdate\"].resetFields();\n                }\n\n            }\n        },\n        created() {\n            this.isSearching = true;\n            this.posTermOption();\n            this.queryData();\n            Meteor.subscribe('Pos_CustomerReact');\n\n        },\n        computed: {\n            langConfig() {\n                let data = compoLang.filter(config => config.lang === this.langSession)[0]['customer'];\n                return data;\n            }\n        }\n    }\n"]},"sourceType":"script","hash":"270950e047519456562b94dd530aa709cb7b4270"}
