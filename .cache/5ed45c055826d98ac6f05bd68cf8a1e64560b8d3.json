{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/snr/Desktop/Project/spa/imports/vue/ui/schRegister.vue","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"/home/snr/Desktop/Project/spa/imports/vue/ui/schRegister.vue","filename":"/home/snr/Desktop/Project/spa/imports/vue/ui/schRegister.vue","passPerPreset":false,"envName":"development","cwd":"/home/snr/Desktop/Project/spa","root":"/home/snr/Desktop/Project/spa","generatorOpts":{"filename":"/home/snr/Desktop/Project/spa/imports/vue/ui/schRegister.vue","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"/home/snr/Desktop/Project/spa/imports/vue/ui/schRegister.vue"}},"code":"var compoLang;\nmodule.link(\"../../../both/i18n/lang/elem-label-sch\", {\n  \"default\": function (v) {\n    compoLang = v;\n  }\n}, 0);\nvar Sch_RegisterReact;\nmodule.link(\"../../collection/schRegister\", {\n  Sch_RegisterReact: function (v) {\n    Sch_RegisterReact = v;\n  }\n}, 1);\nmodule.exportDefault({\n  meteor: {\n    langSession: function () {\n      return Session.get('lang') || \"en\";\n    },\n    disabledRemove: function () {\n      return Session.get(\"canRemove\");\n    },\n    disabledUpdate: function () {\n      return Session.get(\"canUpdate\");\n    },\n    newRe: function () {\n      var vm = this;\n      Sch_RegisterReact.find({}).fetch();\n      vm.queryData(vm.searchData, vm.skip, vm.currentSize + vm.skip);\n    }\n  },\n  mounted: function () {\n    this.$jQuery('body').off();\n  },\n  data: function () {\n    return {\n      ref: \"\",\n      fullscreen: true,\n      dialoginputTranscript: false,\n      disableUpdateField: false,\n      schRegisterData: [],\n      loading: false,\n      searchData: '',\n      isSearching: false,\n      currentPage: 1,\n      currentSize: 10,\n      count: 0,\n      dialogAddSchRegister: false,\n      dialogUpdateSchRegister: false,\n      dialogUpdateSchRegisterToClass: false,\n      studentList: [],\n      levelList: [],\n      programList: [],\n      classList: [],\n      majorList: [],\n      promotionList: [],\n      subjectList: [],\n      loadingCurriculumn: true,\n      yearList: [{\n        label: \"1\",\n        value: 1\n      }, {\n        label: \"2\",\n        value: 2\n      }, {\n        label: \"3\",\n        value: 3\n      }, {\n        label: \"4\",\n        value: 4\n      }],\n      schRegisterForm: {\n        studentId: \"\",\n        levelId: \"\",\n        majorId: \"\",\n        programId: \"\",\n        promotionId: \"\",\n        term: \"\",\n        classId: \"\",\n        registerDate: \"\",\n        startClassDate: \"\",\n        _id: \"\",\n        note: \"\"\n      },\n      inputTranscriptForm: {\n        majorId: \"\",\n        curiculumnId: \"\",\n        culumnSemester1: [],\n        culumnSemester2: [],\n        studentName: \"\",\n        studentId: \"\",\n        registerId: \"\",\n        requiredCredit: 0,\n        transcriptId: \"\",\n        isCompleted: false\n      },\n      termList: [],\n      rules: {\n        curiculumnId: [{\n          required: true,\n          type: 'string',\n          message: 'Please choose Curriculumn',\n          trigger: 'change'\n        }],\n        registerDate: [{\n          type: 'date',\n          required: true,\n          message: 'Please input Register Date',\n          trigger: 'blur'\n        }],\n        studentId: [{\n          required: true,\n          type: \"string\",\n          message: 'Please choose Student',\n          trigger: 'change'\n        }],\n        levelId: [{\n          required: true,\n          type: \"string\",\n          message: 'Please choose Level',\n          trigger: 'change'\n        }],\n        promotionId: [{\n          required: true,\n          type: \"string\",\n          message: 'Please choose Promotion',\n          trigger: 'change'\n        }],\n        majorId: [{\n          required: true,\n          type: \"string\",\n          message: 'Please choose Major',\n          trigger: 'change'\n        }],\n        term: [{\n          required: true,\n          type: \"number\",\n          message: 'Please choose term',\n          trigger: 'change'\n        }],\n        programId: [{\n          required: true,\n          type: \"string\",\n          message: 'Please choose Program',\n          trigger: 'change'\n        }]\n      },\n      culumnData1: [{\n        year: \"\",\n        subjectId: \"\",\n        credit: 0,\n        score: 0,\n        grade: \"Un Range\",\n        gradePoint: 0,\n        ind: 1,\n        sem: 1\n      }],\n      culumnData2: [{\n        year: \"\",\n        subjectId: \"\",\n        credit: 0,\n        score: 0,\n        grade: \"Un Range\",\n        gradePoint: 0,\n        ind: 1,\n        sem: 2\n      }],\n      stateExam: [{\n        subjectId: \"\",\n        score: 0,\n        grade: \"Un Range\",\n        gradePoint: 0\n      }],\n      curiculumnList: [],\n      mentionRange: [],\n      disabledCuriculumn: false,\n      skip: 0\n    };\n  },\n  watch: {\n    currentSize: function (val) {\n      this.isSearching = true;\n      this.skip = (this.currentPage - 1) * val;\n      this.queryData(this.searchData, this.skip, val + this.skip);\n    },\n    currentPage: function (val) {\n      this.isSearching = true;\n      this.skip = (val - 1) * this.currentSize;\n      this.queryData(this.searchData, this.skip, this.currentSize + this.skip);\n    },\n    searchData: function (val) {\n      this.isSearching = true;\n      this.skip = (this.currentPage - 1) * this.currentSize;\n      this.queryData(val, this.skip, this.currentSize + this.skip);\n    },\n    \"schRegisterForm.programId\": function (val) {\n      this.majorOpt(val);\n\n      if (this.ref !== \"schRegisterFormUpdate\") {\n        this.schRegisterForm.majorId = \"\";\n      }\n    },\n    \"schRegisterForm.majorId\": function (val) {\n      this.levelOpt(val);\n\n      if (this.ref !== \"schRegisterFormUpdate\") {\n        this.schRegisterForm.levelId = \"\";\n        this.ciriculumnOpt(val);\n      }\n    },\n    \"inputTranscriptForm.curiculumnId\": function (val) {\n      if (this.inputTranscriptForm.transcriptId === \"\") {\n        this.findCuriculumnById(val);\n      }\n    },\n    \"schRegisterForm.levelId\": function (val) {\n      var vm = this;\n\n      if (val) {\n        Meteor.call(\"querySchLevelById\", val, function (err, result) {\n          if (result) {\n            vm.termList = [];\n\n            for (var i = 1; i <= result.term; i++) {\n              if (result.term % i === 0) {\n                vm.termList.push({\n                  label: i + \" months\",\n                  value: i\n                });\n              }\n            }\n          }\n        });\n      } else {\n        vm.termList = [];\n      }\n    },\n    \"schRegisterForm.classId\": function (val) {\n      var vm = this;\n      Meteor.call(\"querySchClassById\", val, function (err, result) {\n        if (result) {\n          if (vm.schRegisterForm.startClassDate === \"\" || vm.schRegisterForm.startClassDate === undefined) {\n            vm.schRegisterForm.startClassDate = result.classDate;\n          }\n        }\n      });\n    }\n  },\n  methods: {\n    handleSizeChange: function (val) {\n      this.currentSize = val;\n    },\n    handleCurrentChange: function (val) {\n      this.currentPage = val;\n    },\n    queryData: _.debounce(function (val, skip, limit) {\n      var _this = this;\n\n      Meteor.call('querySchRegister', {\n        q: val,\n        filter: this.filter,\n        options: {\n          skip: skip || 0,\n          limit: limit || 10\n        }\n      }, function (err, result) {\n        if (!err) {\n          _this.schRegisterData = result.content;\n          _this.count = result.countSchRegister;\n        }\n\n        _this.isSearching = false;\n      });\n    }, 300),\n    indexMethod: function (index) {\n      return index + 1;\n    },\n    fetchUser: function () {\n      var _this2 = this;\n\n      Meteor.call(\"queryUserOption\", function (err, result) {\n        _this2.applyUserOption = result;\n      });\n    },\n    programOpt: function () {\n      var _this3 = this;\n\n      var selector = {};\n      Meteor.call(\"queryProgramOption\", selector, function (err, result) {\n        _this3.programList = result;\n      });\n    },\n    majorOpt: function (val) {\n      var _this4 = this;\n\n      var selector = {};\n\n      if (val) {\n        selector.programId = val;\n      }\n\n      Meteor.call(\"queryMajorOption\", selector, function (err, result) {\n        _this4.majorList = result;\n      });\n    },\n    promotionOpt: function () {\n      var _this5 = this;\n\n      var selector = {};\n      Meteor.call(\"queryPromotionOption\", selector, function (err, result) {\n        _this5.promotionList = result;\n      });\n    },\n    classOpt: function (val) {\n      var _this6 = this;\n\n      var selector = {};\n\n      if (val) {\n        selector.levelId = val;\n      }\n\n      Meteor.call(\"queryClassOption\", selector, function (err, result) {\n        _this6.classList = result;\n      });\n    },\n    levelOpt: function (val) {\n      var _this7 = this;\n\n      var selector = {};\n      selector.majorId = val;\n      Meteor.call(\"queryLevelOption\", selector, function (err, result) {\n        _this7.levelList = result;\n      });\n    },\n    ciriculumnOpt: function (val) {\n      var _this8 = this;\n\n      var selector = {};\n      selector.majorId = val;\n      Meteor.call('queryCiriculumnOption', selector, function (err, result) {\n        _this8.curiculumnList = result;\n      });\n    },\n    studentOpt: function (query) {\n      var vm = this;\n\n      if (!!query) {\n        //vm.loading = true;\n        setTimeout(function () {\n          //vm.loading = false;\n          Meteor.call('querySchStudentOption', query, function (err, result) {\n            if (!err) {\n              vm.studentList = result;\n            } else {\n              console.log(err.message);\n            }\n          });\n        }, 200);\n      } else {\n        Meteor.call('querySchStudentOption', \"\", function (err, result) {\n          if (!err) {\n            vm.studentList = result;\n          } else {\n            console.log(err.message);\n          }\n        });\n      }\n    },\n    saveSchRegister: function (event) {\n      event.preventDefault();\n      var vm = this;\n      this.$refs[\"schRegisterFormAdd\"].validate(function (valid) {\n        if (valid) {\n          var schRegisterDoc = {\n            studentId: vm.schRegisterForm.studentId,\n            levelId: vm.schRegisterForm.levelId,\n            programId: vm.schRegisterForm.programId,\n            majorId: vm.schRegisterForm.majorId,\n            promotionId: vm.schRegisterForm.promotionId,\n            term: vm.schRegisterForm.term,\n            note: vm.schRegisterForm.note,\n            registerDate: vm.schRegisterForm.registerDate,\n            registerDateName: moment(vm.schRegisterForm.registerDate).format(\"DD/MM/YYYY\"),\n            rolesArea: Session.get('area')\n          };\n          Meteor.call(\"insertSchRegister\", schRegisterDoc, function (err, result) {\n            if (!err) {\n              vm.$message({\n                duration: 1000,\n                message: \"Save Successfully!\",\n                type: 'success'\n              });\n              vm.dialogAddSchRegister = false;\n              vm.$refs[\"schRegisterFormAdd\"].resetFields();\n            } else {\n              vm.$message({\n                duration: 1000,\n                message: err.message,\n                type: 'error'\n              });\n            }\n          });\n        }\n      });\n    },\n    updateSchRegister: function () {\n      var vm = this;\n      this.$refs[\"schRegisterFormUpdate\"].validate(function (valid) {\n        if (valid) {\n          var schRegisterDoc = {\n            _id: vm.schRegisterForm._id,\n            studentId: vm.schRegisterForm.studentId,\n            levelId: vm.schRegisterForm.levelId,\n            programId: vm.schRegisterForm.programId,\n            majorId: vm.schRegisterForm.majorId,\n            promotionId: vm.schRegisterForm.promotionId,\n            term: vm.schRegisterForm.term,\n            registerDate: vm.schRegisterForm.registerDate,\n            registerDateName: moment(vm.schRegisterForm.registerDate).format(\"DD/MM/YYYY\"),\n            classId: vm.schRegisterForm.classId,\n            note: vm.schRegisterForm.note,\n            startClassDate: vm.schRegisterForm.startClassDate,\n            rolesArea: Session.get('area')\n          };\n          Meteor.call(\"updateSchRegister\", schRegisterDoc, function (err, result) {\n            if (!err) {\n              vm.$message({\n                duration: 1000,\n                message: \"\\n                        Update\\n                        Successfully\\n                        !\",\n                type: 'success'\n              });\n              vm.dialogUpdateSchRegister = false;\n              vm.dialogUpdateSchRegisterToClass = false;\n              vm.$refs[\"schRegisterFormUpdate\"].resetFields();\n            } else {\n              vm.$message({\n                duration: 1000,\n                message: \"\\n                        Update\\n                        Failed\\n                        !\",\n                type: 'error'\n              });\n            }\n          });\n        }\n      });\n    },\n    removeSchRegister: function (index, row, rows) {\n      var _this9 = this;\n\n      var vm = this;\n      this.$confirm('This will permanently delete the Item. Continue?', 'Warning', {\n        confirmButtonText: 'OK',\n        cancelButtonText: 'Cancel',\n        type: 'warning'\n      }).then(function () {\n        Meteor.call(\"removeSchRegister\", row._id, function (err, result) {\n          if (!err) {\n            rows.splice(index, 1);\n            vm.$message({\n              message: \"\\n                        \\u179B\\u17BB\\u1794 \\u1794\\u17B6\\u1793\\u1787\\u17C4\\u1782\\u1787\\u17D0\\u1799\",\n              type: 'success'\n            });\n          } else {\n            vm.$message({\n              type: 'error',\n              message: 'Delete Fialed'\n            });\n          }\n        });\n      }).catch(function () {\n        _this9.$message({\n          type: 'info',\n          message: 'Delete canceled'\n        });\n      });\n    },\n    findSchRegisterById: function (doc) {\n      var vm = this;\n      vm.schRegisterForm = {};\n      Meteor.call(\"querySchRegisterById\", doc.row._id, function (err, result) {\n        if (result) {\n          vm.schRegisterForm._id = result._id;\n          vm.schRegisterForm = result;\n          vm.disableUpdateField = result.classId !== undefined ? true : false;\n        }\n      });\n    },\n    cancel: function () {\n      this.$message({\n        type: 'info',\n        message: 'Canceled'\n      });\n    },\n    resetForm: function () {\n      this.schRegisterForm._id = \"\";\n\n      if (this.$refs[\"schRegisterFormAdd\"]) {\n        this.$refs[\"schRegisterFormAdd\"].resetFields();\n      }\n\n      if (this.$refs[\"schRegisterFormUpdate\"]) {\n        this.$refs[\"schRegisterFormUpdate\"].resetFields();\n      }\n\n      this.inputTranscriptForm = {};\n      this.inputTranscriptForm = {\n        majorId: \"\",\n        curiculumnId: \"\",\n        culumnSemester1: [],\n        culumnSemester2: [],\n        studentName: \"\",\n        studentId: \"\",\n        requiredCredit: \"\",\n        transcriptId: \"\",\n        isCompleted: false\n      };\n      this.culumnData1 = [{\n        year: \"\",\n        subjectId: \"\",\n        credit: 0,\n        score: 0,\n        grade: \"Un Range\",\n        ind: 1,\n        sem: 1\n      }];\n      this.culumnData2 = [{\n        year: \"\",\n        subjectId: \"\",\n        credit: 0,\n        score: 0,\n        grade: \"Un Range\",\n        ind: 1,\n        sem: 2\n      }];\n      this.stateExam = [{\n        subjectId: \"\",\n        score: 0,\n        grade: \"Un Range\"\n      }];\n    },\n    popupSchRegisterAdd: function () {\n      this.ref = \"schRegisterFormAdd\";\n      this.resetForm();\n      this.studentOpt();\n      this.programOpt();\n      this.promotionOpt();\n    },\n    popupSchRegisterUpdate: function (row) {\n      this.ref = \"schRegisterFormUpdate\";\n      this.resetForm();\n      this.studentOpt(row.studentDoc._id);\n      this.levelOpt();\n      this.majorOpt();\n      this.programOpt();\n      this.promotionOpt();\n    },\n    popupSchRegisterUpdateToClass: function (doc) {\n      this.ref = \"schRegisterFormUpdate\";\n      this.resetForm();\n      this.studentOpt();\n      this.programOpt();\n      this.majorOpt();\n      this.levelOpt();\n      this.promotionOpt();\n      this.classOpt(doc.levelId);\n    },\n    findCuriculumnById: function (id) {\n      var vm = this;\n      vm.inputTranscriptForm.isCompleted = false;\n      vm.loadingCurriculumn = true;\n      Meteor.call(\"querySchCiriculumnById\", id, function (err, result) {\n        if (result) {\n          var i = 1;\n          var j = 1;\n          var cul1Dif = 0;\n          var cul2Dif = 0;\n          vm.inputTranscriptForm.requiredCredit = result.requiredCredit;\n          vm.inputTranscriptForm.isCompleted = false;\n          result.culumnSemester1.map(function (obj) {\n            if (cul1Dif !== obj.year) {\n              i = 1;\n            }\n\n            obj.score = 0;\n            obj.grade = \"Un Range\";\n            obj.gradePoint = 0;\n            obj.ind = i;\n            obj.sem = 1;\n            cul1Dif = obj.year;\n            i++;\n            return obj;\n          });\n          vm.culumnData1 = result.culumnSemester1;\n          result.culumnSemester2.map(function (obj) {\n            if (cul2Dif !== obj.year) {\n              j = 1;\n            }\n\n            obj.score = 0;\n            obj.grade = \"Un Range\";\n            obj.gradePoint = 0;\n            obj.ind = j;\n            obj.sem = 2;\n            cul2Dif = obj.year;\n            j++;\n            return obj;\n          });\n          vm.culumnData2 = result.culumnSemester2;\n          vm.loadingCurriculumn = false;\n        } else {\n          vm.loadingCurriculumn = false;\n        }\n      });\n    },\n    saveTranscript: function () {\n      var _this10 = this;\n\n      var vm = this;\n      this.$refs[\"inputTranscriptForm\"].validate(function (valid) {\n        if (valid) {\n          var data = {};\n          data.studentId = vm.inputTranscriptForm.studentId;\n          data.majorId = vm.inputTranscriptForm.majorId;\n          data.registerId = vm.inputTranscriptForm.registerId;\n          data.curiculumnId = vm.inputTranscriptForm.curiculumnId;\n          data.culumnSemester1 = vm.culumnData1;\n          data.culumnSemester2 = vm.culumnData2;\n          var stateList = [];\n\n          _this10.stateExam.map(function (obj) {\n            if (obj.subjectId) {\n              stateList.push(obj);\n            }\n          });\n\n          data.state = stateList;\n          data.requiredCredit = vm.inputTranscriptForm.requiredCredit;\n          data.isCompleted = vm.inputTranscriptForm.isCompleted;\n          data.rolesArea = Session.get('area');\n          Meteor.call(\"inputTranscript\", data, function (err, result) {\n            if (result !== false) {\n              vm.$message({\n                duration: 1000,\n                message: _this10.langConfig['saveSuccess'],\n                type: 'success'\n              });\n              vm.dialoginputTranscript = false;\n              vm.$refs[\"inputTranscriptForm\"].resetFields();\n              vm.resetForm();\n            } else {\n              vm.$message({\n                duration: 1000,\n                message: err.message,\n                type: 'error'\n              });\n            }\n          });\n        }\n      });\n    },\n    removeCulumn1: function (index, row) {\n      row.grade = \"Un Range\";\n      row.gradePoint = 0;\n      row.score = 0;\n      this.culumnData1[index] = row;\n      this.$message({\n        message: \"\\u179B\\u17BB\\u1794 \\u1794\\u17B6\\u1793\\u1787\\u17C4\\u1782\\u1787\\u17D0\\u1799\",\n        type: 'success'\n      });\n    },\n    handleAddCulumn1: function () {\n      this.culumnData1.push({\n        year: \"\",\n        subjectId: \"\",\n        credit: 0,\n        grade: \"Un Range\",\n        gradePoint: 0,\n        ind: 1,\n        sem: 1\n      });\n    },\n    handleEditCulumn1: function (index, row) {\n      var gradeDoc = this.getMentionByScore(row.score);\n      row.grade = gradeDoc.grade;\n      row.gradePoint = gradeDoc.gradePoint;\n      this.culumnData1[index] = row;\n    },\n    removeCulumn2: function (index, row) {\n      row.grade = \"Un Range\";\n      row.gradePoint = 0;\n      row.score = 0;\n      this.culumnData2[index] = row;\n      this.$message({\n        message: \"\\u179B\\u17BB\\u1794 \\u1794\\u17B6\\u1793\\u1787\\u17C4\\u1782\\u1787\\u17D0\\u1799\",\n        type: 'success'\n      });\n    },\n    handleAddCulumn2: function () {\n      this.culumnData2.push({\n        year: \"\",\n        subjectId: \"\",\n        credit: 0,\n        grade: \"Un Range\",\n        gradePoint: 0\n      });\n    },\n    handleEditCulumn2: function (index, row) {\n      var gradeDoc = this.getMentionByScore(row.score);\n      row.grade = gradeDoc.grade;\n      row.gradePoint = gradeDoc.gradePoint;\n      this.culumnData2[index] = row;\n    },\n    removeStateExam: function (index, row) {\n      if (this.stateExam.length > 1) {\n        this.stateExam.splice(index, 1);\n        this.$message({\n          message: \"\\u179B\\u17BB\\u1794 \\u1794\\u17B6\\u1793\\u1787\\u17C4\\u1782\\u1787\\u17D0\\u1799\",\n          type: 'success'\n        });\n      } else {\n        this.stateExam = [{\n          subjectId: \"\",\n          score: 0,\n          grade: \"Un Range\"\n        }];\n      }\n    },\n    handleAddStateExam: function () {\n      this.stateExam.push({\n        subjectId: \"\",\n        score: 0,\n        grade: \"Un Range\"\n      });\n    },\n    handleEditStateExam: function (index, row) {\n      var gradeDoc = this.getMentionByScore(row.score);\n      row.grade = gradeDoc.grade;\n      row.gradePoint = gradeDoc.gradePoint;\n      this.stateExam[index] = row;\n    },\n    subjectOpt: function (query) {\n      var _this11 = this;\n\n      if (!!query) {\n        setTimeout(function () {\n          Meteor.call('querySubjectOption', query, Session.get(\"area\"), function (err, result) {\n            if (!err) {\n              _this11.subjectList = result;\n            } else {\n              console.log(err.message);\n            }\n          });\n        }, 200);\n      } else {\n        Meteor.call('querySubjectOption', \"\", Session.get(\"area\"), function (err, result) {\n          if (!err) {\n            _this11.subjectList = result;\n          } else {\n            console.log(err.message);\n          }\n        });\n      }\n    },\n    popUpInputTranscript: function (data) {\n      var _this12 = this;\n\n      var vm = this;\n      vm.ref = \"inputTranscriptForm\";\n      vm.dialoginputTranscript = true;\n      vm.loadingCurriculumn = true;\n      this.majorOpt();\n      vm.resetForm();\n      Meteor.call(\"querySchStudentById\", data.studentId, function (err, res) {\n        if (res) {\n          _this12.inputTranscriptForm.studentName = res.personal.name;\n          _this12.inputTranscriptForm.studentId = data.studentId;\n          _this12.inputTranscriptForm.majorId = data.majorId;\n          _this12.inputTranscriptForm.registerId = data._id;\n          _this12.inputTranscriptForm.requiredCredit = res.requiredCredit;\n\n          _this12.ciriculumnOpt(data.majorId);\n\n          _this12.inputTranscriptForm.isCompleted = false;\n\n          _this12.ciriculumnOpt(data.majorId);\n\n          vm.inputTranscriptForm.transcriptId = \"\";\n          vm.disabledCuriculumn = false;\n          Meteor.call(\"queryTranscriptByStudentIdMajorId\", res._id, data.majorId, function (err, result) {\n            if (result) {\n              vm.inputTranscriptForm.curiculumnId = result.curiculumnId;\n              vm.inputTranscriptForm.transcriptId = result._id;\n              vm.inputTranscriptForm.requiredCredit = result.requiredCredit;\n              vm.inputTranscriptForm.isCompleted = result.isCompleted;\n              vm.culumnData1 = result.culumnSemester1;\n              vm.culumnData2 = result.culumnSemester2;\n\n              if (result.state.length > 0) {\n                vm.stateExam = result.state;\n              } else {\n                vm.stateExam = [{\n                  subjectId: \"\",\n                  score: 0,\n                  grade: \"Un Range\"\n                }];\n              }\n\n              vm.disabledCuriculumn = true;\n            }\n          });\n          vm.loadingCurriculumn = false;\n        } else {\n          vm.loadingCurriculumn = false;\n        }\n      });\n    },\n    getMention: function () {\n      var _this13 = this;\n\n      Meteor.call(\"querySchMentionByActive\", Session.get(\"area\"), function (err, result) {\n        if (result) {\n          _this13.mentionRange = result.range;\n        }\n      });\n    },\n    getMentionByScore: function (val) {\n      val = parseFloat(val) || 0;\n\n      function checkMention(range) {\n        return range.from <= val && range.to > val;\n      }\n\n      var data = this.mentionRange.find(checkMention);\n\n      if (data === null || data === undefined) {\n        var newData = {};\n        newData.grade = \"Un Range\";\n        newData.gradePoint = 0;\n        return newData;\n      }\n\n      return data;\n    },\n    printTranscript: function (data) {\n      FlowRouter.go('/sch-data/schTranscript/print?studentId=' + data.studentId + '&majorId=' + data.majorId);\n    }\n  },\n  created: function () {\n    this.isSearching = true;\n    this.fetchUser();\n    this.queryData();\n    this.getMention();\n    Meteor.subscribe('Sch_RegisterReact');\n  },\n  computed: {\n    langConfig: function () {\n      var _this14 = this;\n\n      var data = compoLang.filter(function (config) {\n        return config.lang === _this14.langSession;\n      })[0]['register'];\n      return data;\n    }\n  }\n});","map":{"version":3,"sources":["/home/snr/Desktop/Project/spa/imports/vue/ui/schRegister.vue"],"names":["compoLang","module","link","v","Sch_RegisterReact","exportDefault","meteor","langSession","Session","get","disabledRemove","disabledUpdate","newRe","vm","find","fetch","queryData","searchData","skip","currentSize","mounted","$jQuery","off","data","ref","fullscreen","dialoginputTranscript","disableUpdateField","schRegisterData","loading","isSearching","currentPage","count","dialogAddSchRegister","dialogUpdateSchRegister","dialogUpdateSchRegisterToClass","studentList","levelList","programList","classList","majorList","promotionList","subjectList","loadingCurriculumn","yearList","label","value","schRegisterForm","studentId","levelId","majorId","programId","promotionId","term","classId","registerDate","startClassDate","_id","note","inputTranscriptForm","curiculumnId","culumnSemester1","culumnSemester2","studentName","registerId","requiredCredit","transcriptId","isCompleted","termList","rules","required","type","message","trigger","culumnData1","year","subjectId","credit","score","grade","gradePoint","ind","sem","culumnData2","stateExam","curiculumnList","mentionRange","disabledCuriculumn","watch","val","majorOpt","levelOpt","ciriculumnOpt","findCuriculumnById","Meteor","call","err","result","i","push","undefined","classDate","methods","handleSizeChange","handleCurrentChange","_","debounce","limit","q","filter","options","content","countSchRegister","indexMethod","index","fetchUser","applyUserOption","programOpt","selector","promotionOpt","classOpt","studentOpt","query","setTimeout","console","log","saveSchRegister","event","preventDefault","$refs","validate","valid","schRegisterDoc","registerDateName","moment","format","rolesArea","$message","duration","resetFields","updateSchRegister","removeSchRegister","row","rows","$confirm","confirmButtonText","cancelButtonText","then","splice","catch","findSchRegisterById","doc","cancel","resetForm","popupSchRegisterAdd","popupSchRegisterUpdate","studentDoc","popupSchRegisterUpdateToClass","id","j","cul1Dif","cul2Dif","map","obj","saveTranscript","stateList","state","langConfig","removeCulumn1","handleAddCulumn1","handleEditCulumn1","gradeDoc","getMentionByScore","removeCulumn2","handleAddCulumn2","handleEditCulumn2","removeStateExam","length","handleAddStateExam","handleEditStateExam","subjectOpt","popUpInputTranscript","res","personal","name","getMention","range","parseFloat","checkMention","from","to","newData","printTranscript","FlowRouter","go","created","subscribe","computed","config","lang"],"mappings":"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","sourcesContent":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n    import compoLang from '../../../both/i18n/lang/elem-label-sch'\n    import {Sch_RegisterReact} from \"../../collection/schRegister\";\n\n    export default {\n        meteor: {\n            langSession() {\n                return Session.get('lang') || \"en\";\n            },\n            disabledRemove() {\n                return Session.get(\"canRemove\");\n            },\n            disabledUpdate() {\n                return Session.get(\"canUpdate\");\n            },\n            newRe() {\n                let vm = this;\n                Sch_RegisterReact.find({}).fetch();\n                vm.queryData(vm.searchData, vm.skip, vm.currentSize + vm.skip);\n            }\n        },\n        mounted() {\n            this.$jQuery('body').off();\n\n        },\n        data() {\n            return {\n                ref: \"\",\n                fullscreen: true,\n                dialoginputTranscript: false,\n                disableUpdateField: false,\n                schRegisterData: [],\n                loading: false,\n                searchData: '',\n                isSearching: false,\n                currentPage: 1,\n                currentSize: 10,\n                count: 0,\n                dialogAddSchRegister: false,\n                dialogUpdateSchRegister: false,\n                dialogUpdateSchRegisterToClass: false,\n                studentList: [],\n                levelList: [],\n                programList: [],\n                classList: [],\n                majorList: [],\n                promotionList: [],\n                subjectList: [],\n                loadingCurriculumn: true,\n                yearList: [\n                    {label: \"1\", value: 1},\n                    {label: \"2\", value: 2},\n                    {label: \"3\", value: 3},\n                    {label: \"4\", value: 4},\n                ],\n                schRegisterForm: {\n                    studentId: \"\",\n                    levelId: \"\",\n                    majorId: \"\",\n                    programId: \"\",\n                    promotionId: \"\",\n                    term: \"\",\n                    classId: \"\",\n                    registerDate: \"\",\n                    startClassDate: \"\",\n                    _id: \"\",\n                    note: \"\"\n\n                },\n                inputTranscriptForm: {\n                    majorId: \"\",\n                    curiculumnId: \"\",\n                    culumnSemester1: [],\n                    culumnSemester2: [],\n                    studentName: \"\",\n                    studentId: \"\",\n                    registerId: \"\",\n                    requiredCredit: 0,\n                    transcriptId: \"\",\n                    isCompleted: false\n                },\n                termList: [],\n                rules: {\n                    curiculumnId:\n                        [{\n                            required: true,\n                            type: 'string',\n                            message: 'Please choose Curriculumn',\n                            trigger: 'change'\n                        }],\n                    registerDate: [{\n                        type: 'date',\n                        required: true,\n                        message: 'Please input Register Date',\n                        trigger: 'blur'\n                    }],\n                    studentId:\n                        [{\n                            required: true,\n                            type: \"string\",\n                            message: 'Please choose Student',\n                            trigger: 'change'\n                        }],\n                    levelId:\n                        [{\n                            required: true,\n                            type: \"string\",\n                            message: 'Please choose Level',\n                            trigger: 'change'\n                        }],\n                    promotionId:\n                        [{\n                            required: true,\n                            type: \"string\",\n                            message: 'Please choose Promotion',\n                            trigger: 'change'\n                        }],\n                    majorId:\n                        [{\n                            required: true,\n                            type: \"string\",\n                            message: 'Please choose Major',\n                            trigger: 'change'\n                        }],\n                    term:\n                        [{\n                            required: true,\n                            type: \"number\",\n                            message: 'Please choose term',\n                            trigger: 'change'\n                        }],\n                    programId:\n                        [{\n                            required: true,\n                            type: \"string\",\n                            message: 'Please choose Program',\n                            trigger: 'change'\n                        }],\n                },\n                culumnData1: [\n                    {year: \"\", subjectId: \"\", credit: 0, score: 0, grade: \"Un Range\", gradePoint: 0, ind: 1, sem: 1}\n                ],\n                culumnData2: [\n                    {year: \"\", subjectId: \"\", credit: 0, score: 0, grade: \"Un Range\", gradePoint: 0, ind: 1, sem: 2}\n                ],\n                stateExam: [\n                    {subjectId: \"\", score: 0, grade: \"Un Range\", gradePoint: 0}\n                ],\n                curiculumnList: [],\n                mentionRange: [],\n                disabledCuriculumn: false,\n                skip: 0\n            }\n        },\n        watch: {\n            currentSize(val) {\n                this.isSearching = true;\n                this.skip = (this.currentPage - 1) * val;\n                this.queryData(this.searchData, this.skip, val + this.skip);\n            },\n            currentPage(val) {\n                this.isSearching = true;\n                this.skip = (val - 1) * this.currentSize;\n                this.queryData(this.searchData, this.skip, this.currentSize + this.skip);\n            },\n            searchData(val) {\n                this.isSearching = true;\n                this.skip = (this.currentPage - 1) * this.currentSize;\n                this.queryData(val, this.skip, this.currentSize + this.skip);\n            },\n            \"schRegisterForm.programId\"(val) {\n                this.majorOpt(val);\n                if (this.ref !== \"schRegisterFormUpdate\") {\n                    this.schRegisterForm.majorId = \"\";\n                }\n            },\n            \"schRegisterForm.majorId\"(val) {\n                this.levelOpt(val);\n                if (this.ref !== \"schRegisterFormUpdate\") {\n                    this.schRegisterForm.levelId = \"\";\n                    this.ciriculumnOpt(val);\n\n                }\n            },\n\n            \"inputTranscriptForm.curiculumnId\"(val) {\n\n                if (this.inputTranscriptForm.transcriptId === \"\") {\n                    this.findCuriculumnById(val);\n                }\n            },\n            \"schRegisterForm.levelId\"(val) {\n                let vm = this;\n                if (val) {\n                    Meteor.call(\"querySchLevelById\", val, (err, result) => {\n                        if (result) {\n                            vm.termList = [];\n                            for (let i = 1; i <= result.term; i++) {\n                                if (result.term % i === 0) {\n                                    vm.termList.push({label: i + \" months\", value: i});\n                                }\n                            }\n                        }\n                    })\n                } else {\n                    vm.termList = [];\n                }\n            },\n            \"schRegisterForm.classId\"(val) {\n                let vm = this;\n                Meteor.call(\"querySchClassById\", val, (err, result) => {\n                    if (result) {\n                        if (vm.schRegisterForm.startClassDate === \"\" || vm.schRegisterForm.startClassDate === undefined) {\n                            vm.schRegisterForm.startClassDate = result.classDate;\n                        }\n                    }\n                })\n            }\n        },\n        methods: {\n            handleSizeChange(val) {\n                this.currentSize = val;\n            },\n            handleCurrentChange(val) {\n                this.currentPage = val;\n            },\n            queryData: _.debounce(function (val, skip, limit) {\n                Meteor.call('querySchRegister', {\n                    q: val,\n                    filter: this.filter,\n                    options: {skip: skip || 0, limit: limit || 10}\n                }, (err, result) => {\n                    if (!err) {\n                        this.schRegisterData = result.content;\n                        this.count = result.countSchRegister;\n                    }\n                    this.isSearching = false;\n                });\n            }, 300),\n            indexMethod(index) {\n                return index + 1;\n            },\n            fetchUser() {\n                Meteor.call(\"queryUserOption\", (err, result) => {\n                    this.applyUserOption = result;\n                })\n            },\n            programOpt() {\n                let selector = {};\n                Meteor.call(\"queryProgramOption\", selector, (err, result) => {\n                    this.programList = result;\n                })\n            },\n            majorOpt(val) {\n                let selector = {};\n                if (val) {\n                    selector.programId = val;\n                }\n                Meteor.call(\"queryMajorOption\", selector, (err, result) => {\n                    this.majorList = result;\n                })\n            },\n            promotionOpt() {\n                let selector = {};\n                Meteor.call(\"queryPromotionOption\", selector, (err, result) => {\n                    this.promotionList = result;\n                })\n            },\n            classOpt(val) {\n                let selector = {};\n                if (val) {\n                    selector.levelId = val;\n                }\n                Meteor.call(\"queryClassOption\", selector, (err, result) => {\n                    this.classList = result;\n                })\n            },\n            levelOpt(val) {\n                let selector = {};\n                selector.majorId = val;\n                Meteor.call(\"queryLevelOption\", selector, (err, result) => {\n                    this.levelList = result;\n                })\n            },\n            ciriculumnOpt(val) {\n                let selector = {};\n                selector.majorId = val;\n                Meteor.call('queryCiriculumnOption', selector, (err, result) => {\n                    this.curiculumnList = result;\n                })\n            },\n            studentOpt(query) {\n                let vm = this;\n                if (!!query) {\n                    //vm.loading = true;\n                    setTimeout(() => {\n                        //vm.loading = false;\n                        Meteor.call('querySchStudentOption', query, (err, result) => {\n                            if (!err) {\n                                vm.studentList = result;\n                            } else {\n                                console.log(err.message);\n                            }\n                        })\n                    }, 200);\n                } else {\n                    Meteor.call('querySchStudentOption', \"\", (err, result) => {\n                        if (!err) {\n                            vm.studentList = result;\n                        } else {\n                            console.log(err.message);\n                        }\n                    })\n                }\n            },\n            saveSchRegister(event) {\n                event.preventDefault();\n\n                let vm = this;\n                this.$refs[\"schRegisterFormAdd\"].validate((valid) => {\n                    if (valid) {\n                        let schRegisterDoc = {\n                            studentId: vm.schRegisterForm.studentId,\n                            levelId: vm.schRegisterForm.levelId,\n                            programId: vm.schRegisterForm.programId,\n                            majorId: vm.schRegisterForm.majorId,\n                            promotionId: vm.schRegisterForm.promotionId,\n                            term: vm.schRegisterForm.term,\n                            note: vm.schRegisterForm.note,\n                            registerDate: vm.schRegisterForm.registerDate,\n                            registerDateName: moment(vm.schRegisterForm.registerDate).format(\"DD/MM/YYYY\"),\n                            rolesArea: Session.get('area')\n                        };\n                        Meteor.call(\"insertSchRegister\", schRegisterDoc, (err, result) => {\n                            if (!err) {\n                                vm.$message({\n                                    duration: 1000,\n                                    message: `Save Successfully!`,\n                                    type: 'success'\n                                });\n                                vm.dialogAddSchRegister = false;\n\n                                vm.$refs[\"schRegisterFormAdd\"].resetFields();\n                            } else {\n                                vm.$message({\n                                    duration: 1000,\n                                    message: err.message,\n                                    type: 'error'\n                                });\n                            }\n                        })\n                    }\n                })\n\n            },\n            updateSchRegister() {\n                let vm = this;\n                this.$refs[\"schRegisterFormUpdate\"].validate((valid) => {\n                    if (valid) {\n                        let schRegisterDoc = {\n                            _id: vm.schRegisterForm._id,\n                            studentId: vm.schRegisterForm.studentId,\n                            levelId: vm.schRegisterForm.levelId,\n                            programId: vm.schRegisterForm.programId,\n                            majorId: vm.schRegisterForm.majorId,\n                            promotionId: vm.schRegisterForm.promotionId,\n                            term: vm.schRegisterForm.term,\n                            registerDate: vm.schRegisterForm.registerDate,\n                            registerDateName: moment(vm.schRegisterForm.registerDate).format(\"DD/MM/YYYY\"),\n                            classId: vm.schRegisterForm.classId,\n                            note: vm.schRegisterForm.note,\n\n                            startClassDate: vm.schRegisterForm.startClassDate,\n                            rolesArea: Session.get('area')\n                        };\n                        Meteor.call(\"updateSchRegister\", schRegisterDoc, (err, result) => {\n                            if (!err) {\n                                vm.$message({\n                                    duration: 1000,\n                                    message: `\n                        Update\n                        Successfully\n                        !`,\n                                    type: 'success'\n                                });\n                                vm.dialogUpdateSchRegister = false;\n                                vm.dialogUpdateSchRegisterToClass = false;\n\n                                vm.$refs[\"schRegisterFormUpdate\"].resetFields();\n                            } else {\n                                vm.$message({\n                                    duration: 1000,\n                                    message: `\n                        Update\n                        Failed\n                        !`,\n                                    type: 'error'\n                                });\n                            }\n                        })\n                    }\n                })\n\n            },\n            removeSchRegister(index, row, rows) {\n                let vm = this;\n                this.$confirm('This will permanently delete the Item. Continue?', 'Warning', {\n                    confirmButtonText: 'OK',\n                    cancelButtonText: 'Cancel',\n                    type: 'warning'\n                }).then(() => {\n                    Meteor.call(\"removeSchRegister\", row._id, (err, result) => {\n                        if (!err) {\n                            rows.splice(index, 1);\n\n                            vm.$message({\n                                message: `\n                        លុប បានជោគជ័យ`,\n                                type: 'success'\n                            });\n\n\n                        } else {\n                            vm.$message({\n                                type: 'error',\n                                message: 'Delete Fialed'\n                            });\n                        }\n\n                    })\n\n                }).catch(() => {\n                    this.$message({\n                        type: 'info',\n                        message: 'Delete canceled'\n                    });\n                });\n\n\n            },\n            findSchRegisterById(doc) {\n                let vm = this;\n                vm.schRegisterForm = {};\n                Meteor.call(\"querySchRegisterById\", doc.row._id, (err, result) => {\n                    if (result) {\n                        vm.schRegisterForm._id = result._id;\n                        vm.schRegisterForm = result;\n\n                        vm.disableUpdateField = result.classId !== undefined ? true : false;\n                    }\n                })\n            },\n            cancel() {\n                this.$message({\n                    type: 'info',\n                    message: 'Canceled'\n                });\n            },\n            resetForm() {\n                this.schRegisterForm._id = \"\";\n                if (this.$refs[\"schRegisterFormAdd\"]) {\n                    this.$refs[\"schRegisterFormAdd\"].resetFields();\n                }\n\n                if (this.$refs[\"schRegisterFormUpdate\"]) {\n                    this.$refs[\"schRegisterFormUpdate\"].resetFields();\n                }\n\n                this.inputTranscriptForm = {};\n                this.inputTranscriptForm = {\n                    majorId: \"\",\n                    curiculumnId: \"\",\n                    culumnSemester1: [],\n                    culumnSemester2: [],\n                    studentName: \"\",\n                    studentId: \"\",\n                    requiredCredit: \"\",\n                    transcriptId: \"\",\n                    isCompleted: false\n                };\n                this.culumnData1 = [\n                    {year: \"\", subjectId: \"\", credit: 0, score: 0, grade: \"Un Range\", ind: 1, sem: 1}\n                ];\n                this.culumnData2 = [\n                    {year: \"\", subjectId: \"\", credit: 0, score: 0, grade: \"Un Range\", ind: 1, sem: 2}\n                ];\n                this.stateExam = [\n                    {subjectId: \"\", score: 0, grade: \"Un Range\"}\n                ];\n\n            },\n            popupSchRegisterAdd() {\n                this.ref = \"schRegisterFormAdd\";\n\n                this.resetForm();\n                this.studentOpt();\n                this.programOpt();\n                this.promotionOpt();\n\n            },\n            popupSchRegisterUpdate(row) {\n                this.ref = \"schRegisterFormUpdate\";\n                this.resetForm();\n                this.studentOpt(row.studentDoc._id);\n                this.levelOpt();\n                this.majorOpt();\n                this.programOpt();\n                this.promotionOpt();\n\n            },\n            popupSchRegisterUpdateToClass(doc) {\n                this.ref = \"schRegisterFormUpdate\";\n                this.resetForm();\n                this.studentOpt();\n                this.programOpt();\n                this.majorOpt();\n                this.levelOpt();\n                this.promotionOpt();\n                this.classOpt(doc.levelId);\n            },\n            findCuriculumnById(id) {\n                let vm = this;\n                vm.inputTranscriptForm.isCompleted = false;\n                vm.loadingCurriculumn = true;\n                Meteor.call(\"querySchCiriculumnById\", id, (err, result) => {\n                    if (result) {\n                        let i = 1;\n                        let j = 1;\n                        let cul1Dif = 0;\n                        let cul2Dif = 0;\n                        vm.inputTranscriptForm.requiredCredit = result.requiredCredit;\n                        vm.inputTranscriptForm.isCompleted = false;\n\n                        result.culumnSemester1.map((obj) => {\n                            if (cul1Dif !== obj.year) {\n                                i = 1;\n                            }\n                            obj.score = 0;\n                            obj.grade = \"Un Range\";\n                            obj.gradePoint = 0;\n                            obj.ind = i;\n                            obj.sem = 1;\n                            cul1Dif = obj.year;\n                            i++;\n                            return obj;\n                        });\n                        vm.culumnData1 = result.culumnSemester1;\n\n                        result.culumnSemester2.map((obj) => {\n                            if (cul2Dif !== obj.year) {\n                                j = 1;\n                            }\n                            obj.score = 0;\n                            obj.grade = \"Un Range\";\n                            obj.gradePoint = 0;\n                            obj.ind = j;\n                            obj.sem = 2;\n\n                            cul2Dif = obj.year;\n                            j++;\n                            return obj;\n                        });\n                        vm.culumnData2 = result.culumnSemester2;\n                        vm.loadingCurriculumn = false;\n\n                    } else {\n                        vm.loadingCurriculumn = false;\n\n                    }\n\n                })\n            },\n            saveTranscript() {\n                let vm = this;\n                this.$refs[\"inputTranscriptForm\"].validate((valid) => {\n                    if (valid) {\n                        let data = {};\n                        data.studentId = vm.inputTranscriptForm.studentId;\n                        data.majorId = vm.inputTranscriptForm.majorId;\n                        data.registerId = vm.inputTranscriptForm.registerId;\n                        data.curiculumnId = vm.inputTranscriptForm.curiculumnId;\n                        data.culumnSemester1 = vm.culumnData1;\n                        data.culumnSemester2 = vm.culumnData2;\n                        let stateList = [];\n                        this.stateExam.map((obj) => {\n                            if (obj.subjectId) {\n                                stateList.push(obj)\n                            }\n                        });\n                        data.state = stateList;\n                        data.requiredCredit = vm.inputTranscriptForm.requiredCredit;\n                        data.isCompleted = vm.inputTranscriptForm.isCompleted;\n                        data.rolesArea = Session.get('area');\n\n                        Meteor.call(\"inputTranscript\", data, (err, result) => {\n                            if (result !== false) {\n                                vm.$message({\n                                    duration: 1000,\n                                    message: this.langConfig['saveSuccess'],\n                                    type: 'success'\n                                });\n                                vm.dialoginputTranscript = false;\n\n                                vm.$refs[\"inputTranscriptForm\"].resetFields();\n                                vm.resetForm();\n                            } else {\n                                vm.$message({\n                                    duration: 1000,\n                                    message: err.message,\n                                    type: 'error'\n                                });\n                            }\n                        })\n                    }\n                })\n\n            },\n            removeCulumn1(index, row) {\n                row.grade = \"Un Range\";\n                row.gradePoint = 0;\n                row.score = 0;\n                this.culumnData1[index] = row;\n                this.$message({\n                    message: `លុប បានជោគជ័យ`,\n                    type: 'success'\n                });\n            },\n\n            handleAddCulumn1() {\n                this.culumnData1.push(\n                    {year: \"\", subjectId: \"\", credit: 0, grade: \"Un Range\", gradePoint: 0, ind: 1, sem: 1}\n                )\n            },\n            handleEditCulumn1(index, row) {\n                let gradeDoc = this.getMentionByScore(row.score);\n                row.grade = gradeDoc.grade;\n                row.gradePoint = gradeDoc.gradePoint;\n\n                this.culumnData1[index] = row;\n            },\n            removeCulumn2(index, row) {\n                row.grade = \"Un Range\";\n                row.gradePoint = 0;\n                row.score = 0;\n                this.culumnData2[index] = row;\n                this.$message({\n                    message: `លុប បានជោគជ័យ`,\n                    type: 'success'\n                });\n            },\n\n            handleAddCulumn2() {\n                this.culumnData2.push(\n                    {year: \"\", subjectId: \"\", credit: 0, grade: \"Un Range\", gradePoint: 0}\n                )\n            },\n            handleEditCulumn2(index, row) {\n                let gradeDoc = this.getMentionByScore(row.score);\n                row.grade = gradeDoc.grade;\n                row.gradePoint = gradeDoc.gradePoint;\n                this.culumnData2[index] = row;\n            },\n\n            removeStateExam(index, row) {\n                if (this.stateExam.length > 1) {\n                    this.stateExam.splice(index, 1);\n                    this.$message({\n                        message: `លុប បានជោគជ័យ`,\n                        type: 'success'\n                    });\n                } else {\n                    this.stateExam = [\n                        {subjectId: \"\", score: 0, grade: \"Un Range\"}\n                    ];\n                }\n            },\n\n            handleAddStateExam() {\n                this.stateExam.push(\n                    {subjectId: \"\", score: 0, grade: \"Un Range\"}\n                )\n            },\n            handleEditStateExam(index, row) {\n                let gradeDoc = this.getMentionByScore(row.score);\n                row.grade = gradeDoc.grade;\n                row.gradePoint = gradeDoc.gradePoint;\n\n                this.stateExam[index] = row;\n            },\n            subjectOpt(query) {\n                if (!!query) {\n                    setTimeout(() => {\n                        Meteor.call('querySubjectOption', query, Session.get(\"area\"), (err, result) => {\n                            if (!err) {\n                                this.subjectList = result;\n                            } else {\n                                console.log(err.message);\n                            }\n                        })\n                    }, 200);\n                } else {\n                    Meteor.call('querySubjectOption', \"\", Session.get(\"area\"), (err, result) => {\n                        if (!err) {\n                            this.subjectList = result;\n                        } else {\n                            console.log(err.message);\n                        }\n                    })\n                }\n            },\n            popUpInputTranscript(data) {\n                let vm = this;\n                vm.ref = \"inputTranscriptForm\";\n                vm.dialoginputTranscript = true;\n                vm.loadingCurriculumn = true;\n\n                this.majorOpt();\n                vm.resetForm();\n                Meteor.call(\"querySchStudentById\", data.studentId, (err, res) => {\n                    if (res) {\n                        this.inputTranscriptForm.studentName = res.personal.name;\n                        this.inputTranscriptForm.studentId = data.studentId;\n                        this.inputTranscriptForm.majorId = data.majorId;\n                        this.inputTranscriptForm.registerId = data._id;\n                        this.inputTranscriptForm.requiredCredit = res.requiredCredit;\n                        this.ciriculumnOpt(data.majorId);\n\n                        this.inputTranscriptForm.isCompleted = false;\n                        this.ciriculumnOpt(data.majorId);\n                        vm.inputTranscriptForm.transcriptId = \"\";\n                        vm.disabledCuriculumn = false;\n                        Meteor.call(\"queryTranscriptByStudentIdMajorId\", res._id, data.majorId, (err, result) => {\n                            if (result) {\n                                vm.inputTranscriptForm.curiculumnId = result.curiculumnId;\n                                vm.inputTranscriptForm.transcriptId = result._id;\n                                vm.inputTranscriptForm.requiredCredit = result.requiredCredit;\n                                vm.inputTranscriptForm.isCompleted = result.isCompleted;\n\n                                vm.culumnData1 = result.culumnSemester1;\n                                vm.culumnData2 = result.culumnSemester2;\n                                if (result.state.length > 0) {\n                                    vm.stateExam = result.state;\n                                } else {\n                                    vm.stateExam = [\n                                        {subjectId: \"\", score: 0, grade: \"Un Range\"}\n                                    ];\n                                }\n                                vm.disabledCuriculumn = true;\n                            }\n                        });\n                        vm.loadingCurriculumn = false;\n\n                    } else {\n                        vm.loadingCurriculumn = false;\n                    }\n                });\n\n            },\n            getMention() {\n                Meteor.call(\"querySchMentionByActive\", Session.get(\"area\"), (err, result) => {\n                    if (result) {\n                        this.mentionRange = result.range;\n                    }\n                });\n            },\n            getMentionByScore(val) {\n                val = parseFloat(val) || 0;\n\n                function checkMention(range) {\n                    return range.from <= val && range.to > val;\n                }\n\n                let data = this.mentionRange.find(checkMention);\n                if (data === null || data === undefined) {\n                    let newData = {};\n                    newData.grade = \"Un Range\";\n                    newData.gradePoint = 0;\n                    return newData;\n                }\n                return data;\n            },\n            printTranscript(data) {\n                FlowRouter.go('/sch-data/schTranscript/print?studentId=' + data.studentId + '&majorId=' + data.majorId);\n            }\n        },\n        created() {\n            this.isSearching = true;\n            this.fetchUser();\n            this.queryData();\n            this.getMention();\n            Meteor.subscribe('Sch_RegisterReact');\n\n        },\n        computed: {\n            langConfig() {\n                let data = compoLang.filter(config => config.lang === this.langSession)[0]['register'];\n                return data;\n            }\n        }\n    }\n"]},"sourceType":"script","hash":"5ed45c055826d98ac6f05bd68cf8a1e64560b8d3"}
