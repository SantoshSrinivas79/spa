{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/snr/Desktop/Project/spa/imports/vue/ui/posReceivePayment.vue","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"/home/snr/Desktop/Project/spa/imports/vue/ui/posReceivePayment.vue","filename":"/home/snr/Desktop/Project/spa/imports/vue/ui/posReceivePayment.vue","passPerPreset":false,"envName":"development","cwd":"/home/snr/Desktop/Project/spa","root":"/home/snr/Desktop/Project/spa","generatorOpts":{"filename":"/home/snr/Desktop/Project/spa/imports/vue/ui/posReceivePayment.vue","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"/home/snr/Desktop/Project/spa/imports/vue/ui/posReceivePayment.vue"}},"code":"var draggable;\nmodule.link(\"vuedraggable\", {\n  \"default\": function (v) {\n    draggable = v;\n  }\n}, 0);\nvar formatCurrency;\nmodule.link(\"../../../imports/api/methods/roundCurrency\", {\n  formatCurrency: function (v) {\n    formatCurrency = v;\n  }\n}, 1);\nvar formatCurrencyLast;\nmodule.link(\"../../../imports/api/methods/roundCurrency\", {\n  formatCurrencyLast: function (v) {\n    formatCurrencyLast = v;\n  }\n}, 2);\nvar GeneralFunction;\nmodule.link(\"../../../imports/api/methods/generalFunction\", {\n  GeneralFunction: function (v) {\n    GeneralFunction = v;\n  }\n}, 3);\nvar getCurrencySymbolById;\nmodule.link(\"../../../imports/api/methods/roundCurrency\", {\n  getCurrencySymbolById: function (v) {\n    getCurrencySymbolById = v;\n  }\n}, 4);\nvar WB_waterBillingSetup;\nmodule.link(\"../../collection/waterBillingSetup\", {\n  WB_waterBillingSetup: function (v) {\n    WB_waterBillingSetup = v;\n  }\n}, 5);\nvar compoLang;\nmodule.link(\"../../../both/i18n/lang/elem-label\", {\n  \"default\": function (v) {\n    compoLang = v;\n  }\n}, 6);\nvar Pos_ReceivePaymentReact;\nmodule.link(\"../../collection/posReceivePayment\", {\n  Pos_ReceivePaymentReact: function (v) {\n    Pos_ReceivePaymentReact = v;\n  }\n}, 7);\nvar Manage_Module;\nmodule.link(\"../../collection/manageModule\", {\n  Manage_Module: function (v) {\n    Manage_Module = v;\n  }\n}, 8);\nmodule.exportDefault({\n  meteor: {\n    langSession: function () {\n      return Session.get('lang') || \"en\";\n    },\n    disabledRemove: function () {\n      return Session.get(\"canRemove\");\n    },\n    disabledUpdate: function () {\n      return Session.get(\"canUpdate\");\n    },\n    newRe: function () {\n      var vm = this;\n      Pos_ReceivePaymentReact.find({}).fetch();\n      vm.queryData(vm.searchData, vm.skip, vm.currentSize + vm.skip);\n    }\n  },\n  components: {\n    draggable: draggable\n  },\n  data: function () {\n    return {\n      newLoading: true,\n      posReceivePaymentData: [],\n      posReceivePaymentDataDisplay: [],\n      multipleSelection: [],\n      posReceivePaymentId: \"\",\n      loading: false,\n      searchData: '',\n      isSearching: false,\n      currentPage: 1,\n      currentSize: 10,\n      count: 0,\n      dialogAddPosReceivePayment: false,\n      dialogUpdatePosReceivePayment: false,\n      dialogShowPosReceivePayment: false,\n      dialogAddPosReceiveFromSaleOrder: false,\n      typeDiscount: \"\",\n      fullScreen: true,\n      searchByDate: \"\",\n      searchByInvoice: \"\",\n      isOverDue: false,\n      totalPaidInput: 0,\n      posReceivePaymentForm: {\n        totalPaid: 0,\n        amount: 0,\n        receivePaymentDate: moment().toDate(),\n        dueDate: moment().add(1, \"month\").toDate(),\n        note: \"\",\n        totalDiscount: 0,\n        totalNetAmount: 0,\n        balanceUnPaid: 0,\n        address: \"\",\n        isApplyTerm: true,\n        isPaidAll: false,\n        isAllTerm: false,\n        customerId: \"\",\n        locationId: \"\"\n      },\n      rules: {\n        receivePaymentDate: [{\n          type: 'date',\n          required: true,\n          message: 'Please input PosReceivePaymentDate',\n          trigger: 'blur'\n        }],\n        customerId: [{\n          required: true,\n          type: 'string',\n          message: 'Please choose customer',\n          trigger: 'change'\n        }],\n        locationId: [{\n          required: true,\n          type: 'string',\n          message: 'Please choose Location',\n          trigger: 'change'\n        }] // note: [{required: true, type: 'string', message: 'Please input Memo', trigger: 'blur'}],\n\n      },\n      // Options\n      itemOption: [],\n      customerOption: [],\n      customerSaleOrderOption: [],\n      termOption: [],\n      dialog: true,\n      notifications: false,\n      sound: true,\n      widgets: false,\n      labelPosition: \"top\",\n      options: {\n        disabledDate: function (time) {\n          return false;\n        }\n      },\n      disabledDate: false,\n      closeDate: \"\",\n      type: \"\",\n      posReceivePaymentDetail: {},\n      locationOption: [],\n      disabledCustomer: true,\n      validateReceivePayment: false,\n      pickerDateOptions: {\n        shortcuts: [{\n          text: 'Last week',\n          onClick: function (picker) {\n            var end = new Date();\n            var start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: 'Last month',\n          onClick: function (picker) {\n            var end = moment().add(-1, \"month\").endOf(\"month\").toDate();\n            var start = moment().add(-1, \"month\").startOf(\"month\").toDate();\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: 'Last 3 months',\n          onClick: function (picker) {\n            var end = moment().add(-1, \"month\").endOf(\"month\").toDate();\n            var start = moment().add(-4, \"month\").startOf(\"month\").toDate();\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: 'This month',\n          onClick: function (picker) {\n            var end = moment().endOf(\"month\").toDate();\n            var start = moment().startOf(\"month\").toDate();\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: 'Today',\n          onClick: function (picker) {\n            var end = new Date();\n            var start = new Date();\n            picker.$emit('pick', [start, end]);\n          }\n        }]\n      }\n    };\n  },\n  mounted: function () {\n    this.$jQuery('body').off();\n    var vm = this;\n    vm.options = {\n      disabledDate: function (time) {\n        var min = moment(vm.closeDate).add(1, \"days\").toDate().getTime();\n        return time.getTime() < min;\n      }\n    };\n  },\n  watch: {\n    currentSize: function (val) {\n      this.isSearching = true;\n      var skip = (this.currentPage - 1) * val;\n      this.queryData(this.searchData, skip, val + skip);\n    },\n    currentPage: function (val) {\n      this.isSearching = true;\n      var skip = (val - 1) * this.currentSize;\n      this.queryData(this.searchData, skip, this.currentSize + skip);\n    },\n    searchData: function (val) {\n      this.isSearching = true;\n      var skip = (this.currentPage - 1) * this.currentSize;\n      this.queryData(val, skip, this.currentSize + skip);\n    },\n    \"posReceivePaymentForm.receivePaymentDate\": function (val) {\n      /*let vm = this;\n      if (vm.dialogUpdatePosReceivePayment == false) {\n          vm.posReceivePaymentForm.posReceivePaymentDate = val;\n      }\n      if (vm.closeDate && vm.closeDate != \"\" && vm.closeDate != undefined) {\n          vm.options = {\n              disabledDate(time) {\n                  let min = moment(vm.closeDate).add(1, \"days\").toDate().getTime();\n                  return time.getTime() < min;\n              }\n          }\n      } else {\n          vm.options = {\n              disabledDate(time) {\n                  return false;\n              }\n          }\n      }*/\n      var vm = this;\n\n      if (this.dialogAddPosReceivePayment === true) {\n        var ind = 0;\n        vm.posReceivePaymentForm.receivePaymentDate = val;\n        vm.posReceivePaymentData.map(function (obj) {\n          obj.dayOverDue = moment(val).startOf(\"days\").diff(moment(obj.dueDate).startOf(\"days\").toDate(), \"days\") < 0 ? 0 : moment(val).startOf(\"days\").diff(moment(obj.dueDate).startOf(\"days\").toDate(), \"days\");\n          vm.updatePosReceivePaymentDetail(obj, ind);\n          ind++;\n        });\n        vm.searchInvoice();\n      }\n    },\n\n    /*dialogAddPosReceivePayment(val) {\n        if (val) {\n            this._inputMaskPosReceivePayment();\n        }\n    },*/\n    dialogUpdatePosReceivePayment: function (val) {\n      if (val) {\n        this._inputMaskPosReceivePayment();\n      }\n    },\n    \"posReceivePaymentForm.customerId\": function (val) {\n      var vm = this;\n\n      if (vm.dialogAddPosReceiveFromSaleOrder === true) {\n        if (val) {\n          Meteor.call(\"queryPosCustomerById\", val, function (err, result) {\n            if (result) {\n              vm.posReceivePaymentForm.address = result.address;\n              vm.posReceivePaymentForm.termId = result.termId;\n            }\n          });\n          Meteor.call(\"queryPosSaleOrderPartialByCustomerId\", val, vm.posReceivePaymentForm.receivePaymentDate, vm.posReceivePaymentForm.locationId, function (err, result) {\n            if (result) {\n              vm.posReceivePaymentData = result;\n            }\n\n            vm.getTotal();\n          });\n        } else {\n          Meteor.call(\"queryPosSaleOrderPartialByCustomerId\", \"\", vm.posReceivePaymentForm.receivePaymentDate, vm.posReceivePaymentForm.locationId, function (err, result) {\n            if (result) {\n              vm.posReceivePaymentData = result;\n              vm.posReceivePaymentForm.address = \"\";\n              vm.posReceivePaymentForm.termId = \"\";\n            }\n\n            vm.getTotal();\n          });\n        }\n      } else {\n        if (val) {\n          Meteor.call(\"queryPosCustomerById\", val, function (err, result) {\n            if (result) {\n              vm.posReceivePaymentForm.address = result.address;\n              vm.posReceivePaymentForm.termId = result.termId;\n            }\n          });\n          Meteor.call(\"queryPosInvoiceByCustomerId\", val, vm.posReceivePaymentForm.receivePaymentDate, vm.posReceivePaymentForm.locationId, function (err, result) {\n            if (result) {\n              vm.posReceivePaymentData = result;\n            }\n\n            vm.getTotal();\n          });\n        } else {\n          Meteor.call(\"queryPosInvoiceByCustomerId\", \"\", vm.posReceivePaymentForm.receivePaymentDate, vm.posReceivePaymentForm.locationId, function (err, result) {\n            if (result) {\n              vm.posReceivePaymentData = result;\n              vm.posReceivePaymentForm.address = \"\";\n              vm.posReceivePaymentForm.termId = \"\";\n            }\n\n            vm.getTotal();\n          });\n        }\n      }\n    },\n    \"posReceivePaymentForm.isAllTerm\": function (val) {\n      var vm = this;\n      var ind = 0;\n      vm.posReceivePaymentData.map(function (obj) {\n        if (obj.isShow) {\n          obj.isApplyTerm = val;\n\n          if (obj.isPaid === false) {\n            obj.isApplyTerm = false;\n          }\n\n          vm.updatePosReceivePaymentDetail(obj, ind);\n        }\n\n        ind++;\n      });\n    },\n    \"posReceivePaymentForm.isPaidAll\": function (val) {\n      var vm = this;\n      var ind = 0;\n\n      if (val === false) {\n        vm.posReceivePaymentForm.isAllTerm = false;\n      }\n\n      this.posReceivePaymentData.map(function (obj) {\n        if (obj.isShow) {\n          obj.isPaid = val;\n\n          if (obj.isPaid === false) {\n            obj.isApplyTerm = false;\n          }\n\n          vm.updatePosReceivePaymentDetail(obj, ind);\n        }\n\n        ind++;\n      });\n    },\n    searchByDate: function (val) {\n      this.searchDate(val);\n    },\n    isOverDue: function (val) {\n      var vm = this;\n      vm.overDueStatus(val);\n    },\n    \"posReceivePaymentForm.locationId\": function (val) {\n      if (val) {\n        this.disabledCustomer = false;\n        this.posReceivePaymentForm.customerId = \"\";\n      } else {\n        this.disabledCustomer = true;\n      }\n    },\n    \"totalPaidInput\": function (val) {\n      this.totalPaidInput = val || 0;\n    }\n  },\n  methods: {\n    handleSizeChange: function (val) {\n      this.currentSize = val;\n    },\n    handleCurrentChange: function (val) {\n      this.currentPage = val;\n    },\n    _inputMaskPosReceivePayment: function () {\n      /*setTimeout(() => {\n          if ($(\".el-inputAmount\").length) {\n              new this.$_Cleave('.el-inputAmount', {\n                  numeral: true,\n                  numeralThousandsGroupStyle: 'thousand'\n              });\n          }\n           if ($(\".el-inputDR\").length) {\n              new this.$_Cleave('.el-inputDR', {\n                  numeral: true,\n                  numeralThousandsGroupStyle: 'thousand'\n              });\n          }\n           if ($(\".el-inputCR\").length) {\n              new this.$_Cleave('.el-inputCR', {\n                  numeral: true,\n                  numeralThousandsGroupStyle: 'thousand'\n              });\n          }\n        }, 200)*/\n    },\n    queryData: _.debounce(function (val, skip, limit) {\n      var _this = this;\n\n      this.newLoading = true;\n      Meteor.call('queryPosReceivePayment', {\n        q: val,\n        filter: this.filter,\n        rolesArea: Session.get('area'),\n        options: {\n          skip: skip || 0,\n          limit: limit || 10\n        }\n      }, function (err, result) {\n        if (!err) {\n          _this.posReceivePaymentDataDisplay = result.content;\n          _this.count = result.countPosReceivePayment;\n        }\n\n        _this.isSearching = false;\n        _this.newLoading = false;\n      });\n    }, 300),\n    itemOpt: function (query) {\n      var _this2 = this;\n\n      if (!!query) {\n        setTimeout(function () {\n          Meteor.call('queryItemOption', query, function (err, result) {\n            if (!err) {\n              _this2.itemOption = result;\n            } else {\n              console.log(err.message);\n            }\n          });\n        }, 200);\n      } else {\n        Meteor.call('queryItemOption', \"\", function (err, result) {\n          if (!err) {\n            _this2.itemOption = result;\n          } else {\n            console.log(err.message);\n          }\n        });\n      }\n    },\n    locationOpt: function () {\n      var _this3 = this;\n\n      Meteor.call('queryLocationOption', function (err, result) {\n        _this3.locationOption = result;\n      });\n    },\n    customerOpt: function (query) {\n      var _this4 = this;\n\n      if (!!query) {\n        this.loading = true;\n        setTimeout(function () {\n          var lists = [];\n          _this4.loading = false;\n          Meteor.call('queryPosCustomerOptionUnPaid', query, Session.get(\"area\"), function (err, result) {\n            if (!err) {\n              _this4.customerOption = result;\n            } else {\n              console.log(err.message);\n            }\n          });\n        }, 200);\n      } else {\n        Meteor.call('queryPosCustomerOptionUnPaid', \"\", Session.get(\"area\"), function (err, result) {\n          if (!err) {\n            _this4.customerOption = result;\n          } else {\n            console.log(err.message);\n          }\n        });\n      }\n    },\n    customerSaleOrderOpt: function (query) {\n      var _this5 = this;\n\n      if (!!query) {\n        this.loading = true;\n        setTimeout(function () {\n          var lists = [];\n          _this5.loading = false;\n          Meteor.call('queryPosCustomerSaleOrderOptionUnPaid', query, Session.get(\"area\"), function (err, result) {\n            if (!err) {\n              _this5.customerSaleOrderOption = result;\n            } else {\n              console.log(err.message);\n            }\n          });\n        }, 200);\n      } else {\n        Meteor.call('queryPosCustomerSaleOrderOptionUnPaid', \"\", Session.get(\"area\"), function (err, result) {\n          if (!err) {\n            _this5.customerSaleOrderOption = result;\n          } else {\n            console.log(err.message);\n          }\n        });\n      }\n    },\n    termOpt: function () {\n      var _this6 = this;\n\n      var selector = {};\n      Meteor.call('queryPosTermOption', selector, function (err, result) {\n        _this6.termOption = result;\n      });\n    },\n    savePosReceivePayment: function (isCloseDialog, event, isPrint) {\n      var _this7 = this;\n\n      event.preventDefault();\n      var vm = this;\n      this.$refs[\"posReceivePaymentFormAdd\"].validate(function (valid) {\n        if (valid) {\n          var posReceivePaymentDoc = {\n            totalPaid: vm.$_numeral(vm.posReceivePaymentForm.totalPaid).value(),\n            totalNetAmount: vm.$_numeral(vm.posReceivePaymentForm.totalNetAmount).value(),\n            totalDiscount: vm.$_numeral(vm.posReceivePaymentForm.totalDiscount).value(),\n            balanceUnPaid: vm.$_numeral(vm.posReceivePaymentForm.totalNetAmount).value() - vm.$_numeral(vm.posReceivePaymentForm.totalPaid).value(),\n            totalAmount: vm.$_numeral(vm.posReceivePaymentForm.totalNetAmount).value() + vm.$_numeral(vm.posReceivePaymentForm.totalDiscount).value(),\n            receivePaymentDate: moment(vm.posReceivePaymentForm.receivePaymentDate).toDate(),\n            receivePaymentDateName: moment(vm.posReceivePaymentForm.receivePaymentDate).format(\"DD/MM/YYYY\"),\n            note: vm.posReceivePaymentForm.note,\n            address: vm.posReceivePaymentForm.address,\n            rolesArea: Session.get('area'),\n            customerId: vm.posReceivePaymentForm.customerId,\n            locationId: vm.posReceivePaymentForm.locationId\n          };\n          posReceivePaymentDoc.invoice = vm.posReceivePaymentData;\n          Meteor.call(\"insertPosReceivePayment\", posReceivePaymentDoc, function (err, result) {\n            if (!err) {\n              if (isPrint) {\n                FlowRouter.go('/pos-data/posInvoiceReceivePayment/print?inv=' + result);\n              } else {\n                vm.$message({\n                  duration: 1000,\n                  message: _this7.langConfig['saveSuccess'],\n                  type: 'success'\n                });\n              }\n\n              if (isCloseDialog) {\n                _this7.dialogAddPosReceivePayment = false;\n              }\n\n              vm.posReceivePaymentData.forEach(function (obj) {\n                if (obj.isPaid === true) {\n                  Meteor.call(\"updateInvoiceByReceivePayment\", obj, posReceivePaymentDoc.receivePaymentDate, function (err, re) {\n                    if (err) {\n                      console.log(err.message);\n                    }\n                  });\n                }\n              });\n              vm.resetForm();\n            }\n          });\n        }\n      });\n    },\n    savePosReceivePaymentFromSaleOrder: function (isCloseDialog, event, isPrint) {\n      var _this8 = this;\n\n      event.preventDefault();\n      var vm = this;\n      this.$refs[\"posReceivePaymentFormAdd\"].validate(function (valid) {\n        if (valid) {\n          var posReceivePaymentDoc = {\n            totalPaid: vm.$_numeral(vm.posReceivePaymentForm.totalPaid).value(),\n            totalNetAmount: vm.$_numeral(vm.posReceivePaymentForm.totalNetAmount).value(),\n            totalDiscount: vm.$_numeral(vm.posReceivePaymentForm.totalDiscount).value(),\n            balanceUnPaid: vm.$_numeral(vm.posReceivePaymentForm.totalNetAmount).value() - vm.$_numeral(vm.posReceivePaymentForm.totalPaid).value(),\n            totalAmount: vm.$_numeral(vm.posReceivePaymentForm.totalNetAmount).value() + vm.$_numeral(vm.posReceivePaymentForm.totalDiscount).value(),\n            receivePaymentDate: moment(vm.posReceivePaymentForm.receivePaymentDate).toDate(),\n            receivePaymentDateName: moment(vm.posReceivePaymentForm.receivePaymentDate).format(\"DD/MM/YYYY\"),\n            note: vm.posReceivePaymentForm.note,\n            address: vm.posReceivePaymentForm.address,\n            rolesArea: Session.get('area'),\n            customerId: vm.posReceivePaymentForm.customerId,\n            locationId: vm.posReceivePaymentForm.locationId,\n            isSaleOrder: true\n          };\n          posReceivePaymentDoc.invoice = vm.posReceivePaymentData;\n          Meteor.call(\"insertPosReceivePaymentFromSaleOrder\", posReceivePaymentDoc, function (err, result) {\n            if (!err) {\n              if (isPrint) {\n                FlowRouter.go('/pos-data/posInvoiceReceivePaymentFromSaleOrder/print?inv=' + result);\n              } else {\n                vm.$message({\n                  duration: 1000,\n                  message: _this8.langConfig['saveSuccess'],\n                  type: 'success'\n                });\n              }\n\n              if (isCloseDialog) {\n                _this8.dialogAddPosReceiveFromSaleOrder = false;\n              }\n\n              vm.posReceivePaymentData.forEach(function (obj) {\n                if (obj.isPaid === true) {\n                  Meteor.call(\"updateSaleOrderByReceivePayment\", obj, posReceivePaymentDoc.receivePaymentDate, function (err, re) {\n                    if (err) {\n                      console.log(err.message);\n                    }\n                  });\n                }\n              });\n              vm.resetForm();\n            }\n          });\n        }\n      });\n    },\n    removePosReceivePayment: function (index, row, rows) {\n      var vm = this;\n      var companyDoc = WB_waterBillingSetup.findOne({});\n\n      if (companyDoc.integratedPosAccount) {\n        Meteor.call(\"queryLastClosingEntry\", Session.get(\"area\"), function (err, re) {\n          if (re !== undefined) {\n            vm.closeDate = re.closeDate;\n          } else {\n            vm.closeDate = \"\";\n          }\n\n          if (vm.closeDate && vm.closeDate.getTime() >= row.receivePaymentDate.getTime()) {\n            vm.$message({\n              duration: 1000,\n              message: \"Already Closing Entry In Account!!\",\n              type: 'error'\n            });\n            return false;\n          }\n\n          if (row.canRemove === true) {\n            vm.$confirm(vm.langConfig['messageWarning'], vm.langConfig['warning'], {\n              confirmButtonText: 'OK',\n              cancelButtonText: 'Cancel',\n              type: 'warning'\n            }).then(function () {\n              Meteor.call(\"removePosReceivePayment\", row._id, function (err, result) {\n                if (!err) {\n                  rows.splice(index, 1);\n                  vm.$message({\n                    message: \" \" + row.receivePaymentDateName + \" \" + vm.langConfig['removeSuccess'],\n                    type: 'success'\n                  });\n                } else {\n                  vm.$message({\n                    type: 'error',\n                    message: vm.langConfig['removeFail']\n                  });\n                }\n              });\n            }).catch(function () {\n              vm.$message({\n                type: 'info',\n                message: 'Delete canceled'\n              });\n            });\n          } else {\n            vm.$message({\n              type: 'error',\n              message: vm.langConfig['message']\n            });\n          }\n        });\n      } else {\n        if (row.canRemove === true) {\n          vm.$confirm(vm.langConfig['messageWarning'], vm.langConfig['warning'], {\n            confirmButtonText: 'OK',\n            cancelButtonText: 'Cancel',\n            type: 'warning'\n          }).then(function () {\n            Meteor.call(\"removePosReceivePayment\", row._id, function (err, result) {\n              if (!err) {\n                rows.splice(index, 1);\n                vm.$message({\n                  message: \" \" + row.receivePaymentDateName + \" \" + vm.langConfig['removeSuccess'],\n                  type: 'success'\n                });\n              } else {\n                vm.$message({\n                  type: 'error',\n                  message: vm.langConfig['removeFail']\n                });\n              }\n            });\n          }).catch(function () {\n            vm.$message({\n              type: 'info',\n              message: 'Delete canceled'\n            });\n          });\n        } else {\n          vm.$message({\n            type: 'error',\n            message: vm.langConfig['message']\n          });\n        }\n      }\n    },\n    popupPosReceivePaymentAdd: function () {\n      var vm = this;\n      vm.dialogAddPosReceivePayment = true;\n      vm.resetForm();\n      vm.itemOpt();\n      $(\".el-dialog__title\").text(this.langConfig['add']);\n      vm.customerOpt();\n      vm.termOpt();\n      Meteor.call(\"queryLastClosingEntry\", Session.get(\"area\"), function (err, re) {\n        if (re !== undefined) {\n          vm.closeDate = re.closeDate;\n        } else {\n          vm.closeDate = \"\";\n        }\n      });\n    },\n    updatePosReceivePaymentDetail: function (row, index, type) {\n      var _this9 = this;\n\n      var vm = this;\n\n      if (row.isPaid === false) {\n        row.paid = 0;\n        row.isApplyTerm = false;\n      }\n\n      if (row.isApplyTerm) {\n        Meteor.call(\"queryPosTermById\", row.termId, function (err, data) {\n          if (data && data.isDiscount && row.paid === vm.$_numeral(row.netAmount).value()) {\n            if (row.isPaid) {\n              row.discount = 0;\n\n              if (moment(vm.posReceivePaymentForm.receivePaymentDate).diff(row.invoiceDate, \"days\") <= data.daysForDiscount) {\n                row.discount = vm.$_numeral(row.amount).value() * data.value / 100;\n              }\n\n              row.paid = vm.$_numeral(row.amount).value() - vm.$_numeral(row.discount).value();\n              row.netAmount = formatCurrency(vm.$_numeral(row.amount).value() - vm.$_numeral(row.discount).value());\n            } else {\n              row.discount = 0;\n\n              if (moment(vm.posReceivePaymentForm.receivePaymentDate).diff(row.invoiceDate, \"days\") <= data.daysForDiscount) {\n                row.discount = formatCurrency(vm.$_numeral(row.amount).value() * data.value / 100);\n                row.netAmount = formatCurrency(vm.$_numeral(row.amount).value() - row.discount);\n              }\n\n              row.paid = 0;\n            }\n          } else {\n            if (row.isPaid) {\n              row.discount = 0;\n              row.paid = vm.$_numeral(row.amount).value();\n              row.netAmount = formatCurrency(row.amount);\n            } else {\n              row.discount = 0;\n              row.paid = 0;\n              row.netAmount = formatCurrency(row.amount);\n            }\n          }\n\n          _this9.posReceivePaymentData[index] = row;\n          vm.getTotal(type);\n        });\n      } else {\n        if (row.isPaid) {\n          row.discount = 0;\n          row.paid = vm.$_numeral(row.amount).value();\n          row.netAmount = formatCurrency(row.amount);\n        } else {\n          row.discount = 0;\n          row.netAmount = formatCurrency(row.amount);\n          row.paid = 0;\n        }\n\n        this.posReceivePaymentData[index] = row;\n        vm.getTotal();\n      }\n    },\n    updatePosReceivePaymentDetailPaid: function (row, index, type) {\n      if (row.netAmount !== row.paid) {\n        if (row.paid > 0) {\n          row.isPaid = true;\n        } else {\n          row.isPaid = false;\n        }\n\n        row.discount = 0;\n        row.netAmount = row.amount;\n        this.posReceivePaymentData[index] = row;\n      } else {\n        if (row.paid > 0) {\n          row.isPaid = true;\n        } else {\n          row.isPaid = false;\n        }\n\n        this.posReceivePaymentData[index] = row;\n        this.updatePosReceivePaymentDetail(row, index, type);\n      }\n\n      this.getTotal();\n    },\n    cancel: function () {\n      this.resetForm();\n      this.$message({\n        type: 'info',\n        message: 'Canceled'\n      });\n    },\n    resetForm: function () {\n      this.posReceivePaymentData = [];\n      this.posReceivePaymentForm.isPaidAll = false;\n      this.posReceivePaymentForm.isApplyTerm = false;\n\n      if (this.$refs[\"posReceivePaymentFormAdd\"]) {\n        this.$refs[\"posReceivePaymentFormAdd\"].resetFields();\n        this.getTotal();\n        this.refForm = \"\";\n      }\n    },\n    getTotal: function (type) {\n      var vm = this;\n      var totalNetAmount = 0;\n      var totalDiscount = 0;\n      var totalPaid = 0;\n      vm.posReceivePaymentData.forEach(function (obj) {\n        if (obj.isShow) {\n          totalNetAmount += parseFloat(vm.$_numeral(obj.netAmount).value() || 0);\n          totalDiscount += parseFloat(vm.$_numeral(obj.discount).value() || 0);\n          totalPaid += parseFloat(vm.$_numeral(obj.paid).value() || 0);\n        }\n      });\n\n      if (type === undefined || type === \"\") {\n        vm.totalPaidInput = totalPaid;\n      }\n\n      var companyDoc = WB_waterBillingSetup.findOne({});\n      this.currencySymbol = getCurrencySymbolById(companyDoc.baseCurrency);\n      vm.posReceivePaymentForm.totalNetAmount = formatCurrencyLast(totalNetAmount, companyDoc.baseCurrency);\n      vm.posReceivePaymentForm.totalDiscount = formatCurrencyLast(totalDiscount, companyDoc.baseCurrency);\n      vm.posReceivePaymentForm.totalPaid = formatCurrencyLast(totalPaid, companyDoc.baseCurrency);\n      vm.posReceivePaymentForm.balanceUnPaid = formatCurrencyLast(totalNetAmount - totalPaid, companyDoc.baseCurrency);\n    },\n    searchInvoice: function () {\n      var vm = this;\n      var canFind = 0;\n      var ind = 0;\n      vm.posReceivePaymentData.forEach(function (obj) {\n        if ((obj.invoiceNo === vm.searchByInvoice || vm.searchByInvoice === \"\") && (moment(obj.invoiceDate).toDate().getTime() > moment(vm.searchByDate[0]).toDate().getTime() && moment(obj.invoiceDate).toDate().getTime() < moment(vm.searchByDate[1]).toDate().getTime() || vm.searchByDate[0] == null)) {\n          obj.isShow = true;\n          canFind++;\n        } else {\n          obj.isShow = false;\n          obj.isPaid = false;\n          obj.isApplyTerm = false;\n        }\n\n        vm.updatePosReceivePaymentDetail(obj, ind);\n        ind++;\n      });\n\n      if (canFind === 0) {\n        this.$message({\n          type: 'error',\n          message: 'Not Found'\n        });\n      } else {\n        this.$message({\n          type: 'success',\n          message: 'Have ' + canFind + \" Invoices\"\n        });\n      }\n\n      vm.getTotal();\n\n      if (vm.isOverDue) {\n        vm.overDueStatus(vm.isOverDue);\n      }\n    },\n    searchDate: function (val) {\n      var vm = this;\n      var canFind = 0;\n      var ind = 0;\n      vm.posReceivePaymentData.forEach(function (obj) {\n        if ((obj.invoiceNo === vm.searchByInvoice || vm.searchByInvoice === \"\") && moment(obj.invoiceDate).toDate().getTime() > moment(val[0]).toDate().getTime() && moment(obj.invoiceDate).toDate().getTime() < moment(val[1]).toDate().getTime() || val[0] == null) {\n          obj.isShow = true;\n          canFind++;\n        } else {\n          obj.isShow = false;\n          obj.isPaid = false;\n          obj.isApplyTerm = false;\n        }\n\n        vm.updatePosReceivePaymentDetail(obj, ind);\n        ind++;\n      });\n\n      if (canFind == 0) {\n        this.$message({\n          type: 'error',\n          message: 'Not Found'\n        });\n      } else {\n        this.$message({\n          type: 'success',\n          message: 'Have ' + canFind + \" Invoices\"\n        });\n      }\n\n      vm.getTotal();\n\n      if (vm.isOverDue) {\n        vm.overDueStatus(vm.isOverDue);\n      }\n    },\n    overDueStatus: function (val) {\n      var vm = this;\n\n      if (val) {\n        vm.posReceivePaymentData.map(function (obj) {\n          if (obj.isShow === true && obj.dayOverDue <= 0) {\n            obj.isShow = false;\n          }\n\n          return obj;\n        });\n      } else {\n        vm.searchInvoice();\n      }\n    },\n    printReceivePayment: function (data) {\n      if (data.isSaleOrder) {\n        FlowRouter.go('/pos-data/posInvoiceReceivePaymentFromSaleOrder/print?inv=' + data._id);\n      } else {\n        FlowRouter.go('/pos-data/posInvoiceReceivePayment/print?inv=' + data._id);\n      }\n    },\n    inputTotalPaid: function () {\n      var vm = this;\n      var totalPaidInput = vm.totalPaidInput;\n      var ind = 0;\n      vm.posReceivePaymentData.map(function (obj) {\n        if (obj.isShow) {\n          if (totalPaidInput >= 0) {\n            var pay = totalPaidInput > parseFloat(vm.$_numeral(obj.netAmount).value() || 0) ? parseFloat(vm.$_numeral(obj.netAmount).value() || 0) : totalPaidInput;\n            obj.paid = pay;\n            totalPaidInput -= pay;\n            vm.updatePosReceivePaymentDetailPaid(obj, ind, true);\n            ind++;\n          }\n        }\n      });\n    },\n    popupPosReceivePaymentFromSaleOrder: function () {\n      this.resetForm();\n      this.itemOpt();\n      var vm = this;\n      $(\".el-dialog__title\").text(this.langConfig['addReceiveFromSaleOrder']);\n      this.customerSaleOrderOpt();\n      this.termOpt();\n      Meteor.call(\"queryLastClosingEntry\", Session.get(\"area\"), function (err, re) {\n        if (re !== undefined) {\n          vm.closeDate = re.closeDate;\n        } else {\n          vm.closeDate = \"\";\n        }\n      });\n    }\n  },\n  created: function () {\n    this.isSearching = true;\n    this.queryData();\n    this.getTotal();\n    this.locationOpt();\n    Meteor.subscribe('Pos_ReceivePaymentReact');\n    var ma = Manage_Module.findOne();\n    this.validateReceivePayment = ma.validateReceivePayment;\n  },\n  computed: {\n    langConfig: function () {\n      var _this10 = this;\n\n      var data = compoLang.filter(function (config) {\n        return config.lang === _this10.langSession;\n      })[0]['receivePayment'];\n      return data;\n    }\n  }\n});","map":{"version":3,"sources":["/home/snr/Desktop/Project/spa/imports/vue/ui/posReceivePayment.vue"],"names":["draggable","module","link","v","formatCurrency","formatCurrencyLast","GeneralFunction","getCurrencySymbolById","WB_waterBillingSetup","compoLang","Pos_ReceivePaymentReact","Manage_Module","exportDefault","meteor","langSession","Session","get","disabledRemove","disabledUpdate","newRe","vm","find","fetch","queryData","searchData","skip","currentSize","components","data","newLoading","posReceivePaymentData","posReceivePaymentDataDisplay","multipleSelection","posReceivePaymentId","loading","isSearching","currentPage","count","dialogAddPosReceivePayment","dialogUpdatePosReceivePayment","dialogShowPosReceivePayment","dialogAddPosReceiveFromSaleOrder","typeDiscount","fullScreen","searchByDate","searchByInvoice","isOverDue","totalPaidInput","posReceivePaymentForm","totalPaid","amount","receivePaymentDate","moment","toDate","dueDate","add","note","totalDiscount","totalNetAmount","balanceUnPaid","address","isApplyTerm","isPaidAll","isAllTerm","customerId","locationId","rules","type","required","message","trigger","itemOption","customerOption","customerSaleOrderOption","termOption","dialog","notifications","sound","widgets","labelPosition","options","disabledDate","time","closeDate","posReceivePaymentDetail","locationOption","disabledCustomer","validateReceivePayment","pickerDateOptions","shortcuts","text","onClick","picker","end","Date","start","setTime","getTime","$emit","endOf","startOf","mounted","$jQuery","off","min","watch","val","ind","map","obj","dayOverDue","diff","updatePosReceivePaymentDetail","searchInvoice","_inputMaskPosReceivePayment","Meteor","call","err","result","termId","getTotal","isShow","isPaid","searchDate","overDueStatus","methods","handleSizeChange","handleCurrentChange","_","debounce","limit","q","filter","rolesArea","content","countPosReceivePayment","itemOpt","query","setTimeout","console","log","locationOpt","customerOpt","lists","customerSaleOrderOpt","termOpt","selector","savePosReceivePayment","isCloseDialog","event","isPrint","preventDefault","$refs","validate","valid","posReceivePaymentDoc","$_numeral","value","totalAmount","receivePaymentDateName","format","invoice","FlowRouter","go","$message","duration","langConfig","forEach","re","resetForm","savePosReceivePaymentFromSaleOrder","isSaleOrder","removePosReceivePayment","index","row","rows","companyDoc","findOne","integratedPosAccount","undefined","canRemove","$confirm","confirmButtonText","cancelButtonText","then","_id","splice","catch","popupPosReceivePaymentAdd","$","paid","isDiscount","netAmount","discount","invoiceDate","daysForDiscount","updatePosReceivePaymentDetailPaid","cancel","resetFields","refForm","parseFloat","currencySymbol","baseCurrency","canFind","invoiceNo","printReceivePayment","inputTotalPaid","pay","popupPosReceivePaymentFromSaleOrder","created","subscribe","ma","computed","config","lang"],"mappings":"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","sourcesContent":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n    import draggable from 'vuedraggable';\n    import {formatCurrency} from \"../../../imports/api/methods/roundCurrency\";\n    import {formatCurrencyLast} from \"../../../imports/api/methods/roundCurrency\";\n    import {GeneralFunction} from \"../../../imports/api/methods/generalFunction\";\n    import {getCurrencySymbolById} from \"../../../imports/api/methods/roundCurrency\";\n    import {WB_waterBillingSetup} from \"../../collection/waterBillingSetup\";\n    // require('cleave.js/dist/addons/cleave-phone.ac');\n    // require('cleave.js/dist/addons/cleave-phone.{country}');\n\n    import compoLang from '../../../both/i18n/lang/elem-label'\n    import {Pos_ReceivePaymentReact} from \"../../collection/posReceivePayment\";\n    import {Manage_Module} from \"../../collection/manageModule\";\n\n    export default {\n        meteor: {\n            langSession() {\n                return Session.get('lang') || \"en\";\n            },\n            disabledRemove() {\n                return Session.get(\"canRemove\");\n            },\n            disabledUpdate() {\n                return Session.get(\"canUpdate\");\n            },\n            newRe() {\n                let vm = this;\n                Pos_ReceivePaymentReact.find({}).fetch();\n                vm.queryData(vm.searchData, vm.skip, vm.currentSize + vm.skip);\n            }\n        },\n        components: {\n            draggable\n        },\n        data() {\n            return {\n                newLoading: true,\n                posReceivePaymentData: [],\n                posReceivePaymentDataDisplay: [],\n                multipleSelection: [],\n                posReceivePaymentId: \"\",\n                loading: false,\n                searchData: '',\n                isSearching: false,\n                currentPage: 1,\n                currentSize: 10,\n                count: 0,\n                dialogAddPosReceivePayment: false,\n                dialogUpdatePosReceivePayment: false,\n                dialogShowPosReceivePayment: false,\n                dialogAddPosReceiveFromSaleOrder: false,\n                typeDiscount: \"\",\n                fullScreen: true,\n\n                searchByDate: \"\",\n                searchByInvoice: \"\",\n                isOverDue: false,\n                totalPaidInput: 0,\n                posReceivePaymentForm: {\n                    totalPaid: 0,\n                    amount: 0,\n                    receivePaymentDate: moment().toDate(),\n                    dueDate: moment().add(1, \"month\").toDate(),\n\n                    note: \"\",\n\n                    totalDiscount: 0,\n                    totalNetAmount: 0,\n                    balanceUnPaid: 0,\n                    address: \"\",\n\n                    isApplyTerm: true,\n                    isPaidAll: false,\n                    isAllTerm: false,\n                    customerId: \"\",\n                    locationId: \"\"\n\n                },\n                rules: {\n                    receivePaymentDate: [{\n                        type: 'date',\n                        required: true,\n                        message: 'Please input PosReceivePaymentDate',\n                        trigger: 'blur'\n                    }],\n                    customerId: [{\n                        required: true,\n                        type: 'string',\n                        message: 'Please choose customer',\n                        trigger: 'change'\n                    }]\n                    ,\n                    locationId: [{\n                        required: true,\n                        type: 'string',\n                        message: 'Please choose Location',\n                        trigger: 'change'\n                    }],\n                    // note: [{required: true, type: 'string', message: 'Please input Memo', trigger: 'blur'}],\n                },\n\n                // Options\n                itemOption: [],\n                customerOption: [],\n                customerSaleOrderOption: [],\n                termOption: [],\n\n                dialog: true,\n                notifications: false,\n                sound: true,\n                widgets: false,\n                labelPosition: \"top\",\n                options: {\n                    disabledDate(time) {\n                        return false;\n                    }\n                },\n                disabledDate: false,\n                closeDate: \"\",\n                type: \"\",\n                posReceivePaymentDetail: {},\n\n                locationOption: [],\n                disabledCustomer: true,\n                validateReceivePayment: false,\n                pickerDateOptions: {\n                    shortcuts: [{\n                        text: 'Last week',\n                        onClick(picker) {\n                            const end = new Date();\n                            const start = new Date();\n                            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n                            picker.$emit('pick', [start, end]);\n                        }\n                    }, {\n                        text: 'Last month',\n                        onClick(picker) {\n                            const end = moment().add(-1, \"month\").endOf(\"month\").toDate();\n                            const start = moment().add(-1, \"month\").startOf(\"month\").toDate();\n                            picker.$emit('pick', [start, end]);\n                        }\n                    }, {\n                        text: 'Last 3 months',\n                        onClick(picker) {\n                            const end = moment().add(-1, \"month\").endOf(\"month\").toDate();\n                            const start = moment().add(-4, \"month\").startOf(\"month\").toDate();\n                            picker.$emit('pick', [start, end]);\n                        }\n                    }, {\n                        text: 'This month',\n                        onClick(picker) {\n                            const end = moment().endOf(\"month\").toDate();\n                            const start = moment().startOf(\"month\").toDate();\n                            picker.$emit('pick', [start, end]);\n                        }\n                    }, {\n                        text: 'Today',\n                        onClick(picker) {\n                            const end = new Date();\n                            const start = new Date();\n                            picker.$emit('pick', [start, end]);\n                        }\n                    }]\n                },\n            }\n        },\n        mounted() {\n\n            this.$jQuery('body').off();\n\n            let vm = this;\n            vm.options = {\n                disabledDate(time) {\n                    let min = moment(vm.closeDate).add(1, \"days\").toDate().getTime();\n                    return time.getTime() < min;\n                }\n            }\n        },\n        watch: {\n            currentSize(val) {\n                this.isSearching = true;\n                let skip = (this.currentPage - 1) * val;\n                this.queryData(this.searchData, skip, val + skip);\n            },\n            currentPage(val) {\n                this.isSearching = true;\n                let skip = (val - 1) * this.currentSize;\n                this.queryData(this.searchData, skip, this.currentSize + skip);\n            },\n            searchData(val) {\n                this.isSearching = true;\n                let skip = (this.currentPage - 1) * this.currentSize;\n                this.queryData(val, skip, this.currentSize + skip);\n            },\n            \"posReceivePaymentForm.receivePaymentDate\"(val) {\n                /*let vm = this;\n                if (vm.dialogUpdatePosReceivePayment == false) {\n                    vm.posReceivePaymentForm.posReceivePaymentDate = val;\n                }\n                if (vm.closeDate && vm.closeDate != \"\" && vm.closeDate != undefined) {\n                    vm.options = {\n                        disabledDate(time) {\n                            let min = moment(vm.closeDate).add(1, \"days\").toDate().getTime();\n                            return time.getTime() < min;\n                        }\n                    }\n                } else {\n                    vm.options = {\n                        disabledDate(time) {\n                            return false;\n                        }\n                    }\n                }*/\n\n                let vm = this;\n                if (this.dialogAddPosReceivePayment === true) {\n\n                    let ind = 0;\n                    vm.posReceivePaymentForm.receivePaymentDate = val;\n                    vm.posReceivePaymentData.map((obj) => {\n                        obj.dayOverDue = moment(val).startOf(\"days\").diff(moment(obj.dueDate).startOf(\"days\").toDate(), \"days\") < 0 ? 0 : moment(val).startOf(\"days\").diff(moment(obj.dueDate).startOf(\"days\").toDate(), \"days\");\n                        vm.updatePosReceivePaymentDetail(obj, ind);\n                        ind++;\n                    });\n                    vm.searchInvoice();\n                }\n            },\n            /*dialogAddPosReceivePayment(val) {\n                if (val) {\n                    this._inputMaskPosReceivePayment();\n                }\n            },*/\n            dialogUpdatePosReceivePayment(val) {\n                if (val) {\n                    this._inputMaskPosReceivePayment();\n                }\n            },\n            \"posReceivePaymentForm.customerId\"(val) {\n                let vm = this;\n                if (vm.dialogAddPosReceiveFromSaleOrder === true) {\n                    if (val) {\n                        Meteor.call(\"queryPosCustomerById\", val, (err, result) => {\n                            if (result) {\n                                vm.posReceivePaymentForm.address = result.address;\n                                vm.posReceivePaymentForm.termId = result.termId;\n                            }\n                        });\n\n                        Meteor.call(\"queryPosSaleOrderPartialByCustomerId\", val, vm.posReceivePaymentForm.receivePaymentDate, vm.posReceivePaymentForm.locationId, (err, result) => {\n                            if (result) {\n                                vm.posReceivePaymentData = result;\n                            }\n                            vm.getTotal();\n                        })\n                    } else {\n                        Meteor.call(\"queryPosSaleOrderPartialByCustomerId\", \"\", vm.posReceivePaymentForm.receivePaymentDate, vm.posReceivePaymentForm.locationId, (err, result) => {\n                            if (result) {\n                                vm.posReceivePaymentData = result;\n\n                                vm.posReceivePaymentForm.address = \"\";\n                                vm.posReceivePaymentForm.termId = \"\";\n                            }\n                            vm.getTotal();\n                        })\n                    }\n                } else {\n                    if (val) {\n                        Meteor.call(\"queryPosCustomerById\", val, (err, result) => {\n                            if (result) {\n                                vm.posReceivePaymentForm.address = result.address;\n                                vm.posReceivePaymentForm.termId = result.termId;\n                            }\n                        });\n\n                        Meteor.call(\"queryPosInvoiceByCustomerId\", val, vm.posReceivePaymentForm.receivePaymentDate, vm.posReceivePaymentForm.locationId, (err, result) => {\n                            if (result) {\n                                vm.posReceivePaymentData = result;\n                            }\n                            vm.getTotal();\n                        })\n                    } else {\n                        Meteor.call(\"queryPosInvoiceByCustomerId\", \"\", vm.posReceivePaymentForm.receivePaymentDate, vm.posReceivePaymentForm.locationId, (err, result) => {\n                            if (result) {\n                                vm.posReceivePaymentData = result;\n\n                                vm.posReceivePaymentForm.address = \"\";\n                                vm.posReceivePaymentForm.termId = \"\";\n                            }\n                            vm.getTotal();\n                        })\n                    }\n                }\n            },\n            \"posReceivePaymentForm.isAllTerm\"(val) {\n                let vm = this;\n\n                let ind = 0;\n                vm.posReceivePaymentData.map((obj) => {\n                    if (obj.isShow) {\n                        obj.isApplyTerm = val;\n                        if (obj.isPaid === false) {\n                            obj.isApplyTerm = false;\n                        }\n                        vm.updatePosReceivePaymentDetail(obj, ind);\n                    }\n                    ind++;\n                })\n            },\n            \"posReceivePaymentForm.isPaidAll\"(val) {\n                let vm = this;\n                let ind = 0;\n                if (val === false) {\n                    vm.posReceivePaymentForm.isAllTerm = false;\n                }\n                this.posReceivePaymentData.map((obj) => {\n                    if (obj.isShow) {\n                        obj.isPaid = val;\n                        if (obj.isPaid === false) {\n                            obj.isApplyTerm = false;\n                        }\n                        vm.updatePosReceivePaymentDetail(obj, ind);\n                    }\n                    ind++;\n                })\n            },\n            searchByDate(val) {\n                this.searchDate(val);\n            },\n            isOverDue(val) {\n                let vm = this;\n                vm.overDueStatus(val);\n            },\n            \"posReceivePaymentForm.locationId\"(val) {\n                if (val) {\n                    this.disabledCustomer = false;\n                    this.posReceivePaymentForm.customerId = \"\";\n\n                } else {\n                    this.disabledCustomer = true;\n\n                }\n            },\n            \"totalPaidInput\"(val) {\n                this.totalPaidInput = val || 0;\n            }\n        },\n        methods: {\n            handleSizeChange(val) {\n                this.currentSize = val;\n            },\n            handleCurrentChange(val) {\n                this.currentPage = val;\n            },\n            _inputMaskPosReceivePayment() {\n                /*setTimeout(() => {\n                    if ($(\".el-inputAmount\").length) {\n                        new this.$_Cleave('.el-inputAmount', {\n                            numeral: true,\n                            numeralThousandsGroupStyle: 'thousand'\n                        });\n                    }\n\n                    if ($(\".el-inputDR\").length) {\n                        new this.$_Cleave('.el-inputDR', {\n                            numeral: true,\n                            numeralThousandsGroupStyle: 'thousand'\n                        });\n                    }\n\n                    if ($(\".el-inputCR\").length) {\n                        new this.$_Cleave('.el-inputCR', {\n                            numeral: true,\n                            numeralThousandsGroupStyle: 'thousand'\n                        });\n                    }\n\n\n                }, 200)*/\n            },\n            queryData: _.debounce(function (val, skip, limit) {\n                this.newLoading = true;\n                Meteor.call('queryPosReceivePayment', {\n                    q: val,\n                    filter: this.filter,\n                    rolesArea: Session.get('area'),\n                    options: {skip: skip || 0, limit: limit || 10}\n                }, (err, result) => {\n                    if (!err) {\n                        this.posReceivePaymentDataDisplay = result.content;\n                        this.count = result.countPosReceivePayment;\n                    }\n                    this.isSearching = false;\n                    this.newLoading = false;\n                });\n            }, 300),\n            itemOpt(query) {\n                if (!!query) {\n                    setTimeout(() => {\n                        Meteor.call('queryItemOption', query, (err, result) => {\n                            if (!err) {\n                                this.itemOption = result;\n                            } else {\n                                console.log(err.message);\n                            }\n                        })\n                    }, 200);\n                } else {\n                    Meteor.call('queryItemOption', \"\", (err, result) => {\n                        if (!err) {\n                            this.itemOption = result;\n                        } else {\n                            console.log(err.message);\n                        }\n                    })\n                }\n            },\n            locationOpt() {\n                Meteor.call('queryLocationOption', (err, result) => {\n                    this.locationOption = result;\n                })\n            },\n            customerOpt(query) {\n                if (!!query) {\n                    this.loading = true;\n                    setTimeout(() => {\n                        let lists = [];\n                        this.loading = false;\n                        Meteor.call('queryPosCustomerOptionUnPaid', query, Session.get(\"area\"), (err, result) => {\n                            if (!err) {\n                                this.customerOption = result;\n                            } else {\n                                console.log(err.message);\n                            }\n                        })\n                    }, 200);\n                } else {\n                    Meteor.call('queryPosCustomerOptionUnPaid', \"\", Session.get(\"area\"), (err, result) => {\n                        if (!err) {\n                            this.customerOption = result;\n                        } else {\n                            console.log(err.message);\n                        }\n                    })\n                }\n            },\n            customerSaleOrderOpt(query) {\n                if (!!query) {\n                    this.loading = true;\n                    setTimeout(() => {\n                        let lists = [];\n                        this.loading = false;\n                        Meteor.call('queryPosCustomerSaleOrderOptionUnPaid', query, Session.get(\"area\"), (err, result) => {\n                            if (!err) {\n                                this.customerSaleOrderOption = result;\n                            } else {\n                                console.log(err.message);\n                            }\n                        })\n                    }, 200);\n                } else {\n                    Meteor.call('queryPosCustomerSaleOrderOptionUnPaid', \"\", Session.get(\"area\"), (err, result) => {\n                        if (!err) {\n                            this.customerSaleOrderOption = result;\n                        } else {\n                            console.log(err.message);\n                        }\n                    })\n                }\n            },\n            termOpt() {\n                let selector = {};\n                Meteor.call('queryPosTermOption', selector, (err, result) => {\n                    this.termOption = result;\n                })\n            },\n\n            savePosReceivePayment(isCloseDialog, event, isPrint) {\n                event.preventDefault();\n                let vm = this;\n                this.$refs[\"posReceivePaymentFormAdd\"].validate((valid) => {\n                    if (valid) {\n                        let posReceivePaymentDoc = {\n                            totalPaid: vm.$_numeral(vm.posReceivePaymentForm.totalPaid).value(),\n                            totalNetAmount: vm.$_numeral(vm.posReceivePaymentForm.totalNetAmount).value(),\n                            totalDiscount: vm.$_numeral(vm.posReceivePaymentForm.totalDiscount).value(),\n\n                            balanceUnPaid: vm.$_numeral(vm.posReceivePaymentForm.totalNetAmount).value() - vm.$_numeral(vm.posReceivePaymentForm.totalPaid).value(),\n                            totalAmount: vm.$_numeral(vm.posReceivePaymentForm.totalNetAmount).value() + vm.$_numeral(vm.posReceivePaymentForm.totalDiscount).value(),\n\n                            receivePaymentDate: moment(vm.posReceivePaymentForm.receivePaymentDate).toDate(),\n                            receivePaymentDateName: moment(vm.posReceivePaymentForm.receivePaymentDate).format(\"DD/MM/YYYY\"),\n                            note: vm.posReceivePaymentForm.note,\n                            address: vm.posReceivePaymentForm.address,\n\n                            rolesArea: Session.get('area'),\n                            customerId: vm.posReceivePaymentForm.customerId,\n                            locationId: vm.posReceivePaymentForm.locationId,\n                        };\n                        posReceivePaymentDoc.invoice = vm.posReceivePaymentData;\n                        Meteor.call(\"insertPosReceivePayment\", posReceivePaymentDoc, (err, result) => {\n                            if (!err) {\n                                if (isPrint) {\n                                    FlowRouter.go('/pos-data/posInvoiceReceivePayment/print?inv=' + result);\n                                } else {\n                                    vm.$message({\n                                        duration: 1000,\n                                        message: this.langConfig['saveSuccess'],\n                                        type: 'success'\n                                    });\n                                }\n\n\n                                if (isCloseDialog) {\n                                    this.dialogAddPosReceivePayment = false;\n                                }\n\n                                vm.posReceivePaymentData.forEach((obj) => {\n                                    if (obj.isPaid === true) {\n                                        Meteor.call(\"updateInvoiceByReceivePayment\", obj, posReceivePaymentDoc.receivePaymentDate, (err, re) => {\n                                            if (err) {\n                                                console.log(err.message);\n                                            }\n                                        })\n                                    }\n                                })\n\n                                vm.resetForm();\n                            }\n                        })\n                    }\n                })\n\n\n            },\n\n            savePosReceivePaymentFromSaleOrder(isCloseDialog, event, isPrint) {\n                event.preventDefault();\n                let vm = this;\n                this.$refs[\"posReceivePaymentFormAdd\"].validate((valid) => {\n                    if (valid) {\n                        let posReceivePaymentDoc = {\n                            totalPaid: vm.$_numeral(vm.posReceivePaymentForm.totalPaid).value(),\n                            totalNetAmount: vm.$_numeral(vm.posReceivePaymentForm.totalNetAmount).value(),\n                            totalDiscount: vm.$_numeral(vm.posReceivePaymentForm.totalDiscount).value(),\n\n                            balanceUnPaid: vm.$_numeral(vm.posReceivePaymentForm.totalNetAmount).value() - vm.$_numeral(vm.posReceivePaymentForm.totalPaid).value(),\n                            totalAmount: vm.$_numeral(vm.posReceivePaymentForm.totalNetAmount).value() + vm.$_numeral(vm.posReceivePaymentForm.totalDiscount).value(),\n\n                            receivePaymentDate: moment(vm.posReceivePaymentForm.receivePaymentDate).toDate(),\n                            receivePaymentDateName: moment(vm.posReceivePaymentForm.receivePaymentDate).format(\"DD/MM/YYYY\"),\n                            note: vm.posReceivePaymentForm.note,\n                            address: vm.posReceivePaymentForm.address,\n\n                            rolesArea: Session.get('area'),\n                            customerId: vm.posReceivePaymentForm.customerId,\n                            locationId: vm.posReceivePaymentForm.locationId,\n                            isSaleOrder: true\n                        };\n                        posReceivePaymentDoc.invoice = vm.posReceivePaymentData;\n                        Meteor.call(\"insertPosReceivePaymentFromSaleOrder\", posReceivePaymentDoc, (err, result) => {\n                            if (!err) {\n                                if (isPrint) {\n                                    FlowRouter.go('/pos-data/posInvoiceReceivePaymentFromSaleOrder/print?inv=' + result);\n                                } else {\n                                    vm.$message({\n                                        duration: 1000,\n                                        message: this.langConfig['saveSuccess'],\n                                        type: 'success'\n                                    });\n                                }\n\n\n                                if (isCloseDialog) {\n                                    this.dialogAddPosReceiveFromSaleOrder = false;\n                                }\n\n                                vm.posReceivePaymentData.forEach((obj) => {\n                                    if (obj.isPaid === true) {\n                                        Meteor.call(\"updateSaleOrderByReceivePayment\", obj, posReceivePaymentDoc.receivePaymentDate, (err, re) => {\n                                            if (err) {\n                                                console.log(err.message);\n                                            }\n                                        })\n                                    }\n                                })\n\n                                vm.resetForm();\n                            }\n                        })\n                    }\n                })\n\n\n            },\n\n            removePosReceivePayment(index, row, rows) {\n                let vm = this;\n\n\n                let companyDoc = WB_waterBillingSetup.findOne({});\n                if (companyDoc.integratedPosAccount) {\n                    Meteor.call(\"queryLastClosingEntry\", Session.get(\"area\"), function (err, re) {\n                        if (re !== undefined) {\n                            vm.closeDate = re.closeDate;\n                        } else {\n                            vm.closeDate = \"\";\n                        }\n\n                        if (vm.closeDate && vm.closeDate.getTime() >= row.receivePaymentDate.getTime()) {\n                            vm.$message({\n                                duration: 1000,\n                                message: \"Already Closing Entry In Account!!\",\n                                type: 'error'\n                            });\n                            return false;\n                        }\n\n                        if (row.canRemove === true) {\n                            vm.$confirm(vm.langConfig['messageWarning'], vm.langConfig['warning'], {\n                                confirmButtonText: 'OK',\n                                cancelButtonText: 'Cancel',\n                                type: 'warning'\n                            }).then(() => {\n                                Meteor.call(\"removePosReceivePayment\", row._id, (err, result) => {\n                                    if (!err) {\n                                        rows.splice(index, 1);\n                                        vm.$message({\n                                            message: ` ${row.receivePaymentDateName} ` + vm.langConfig['removeSuccess'],\n                                            type: 'success'\n                                        });\n\n                                    } else {\n                                        vm.$message({\n                                            type: 'error',\n                                            message: vm.langConfig['removeFail']\n                                        });\n                                    }\n\n                                })\n                            }).catch(() => {\n                                vm.$message({\n                                    type: 'info',\n                                    message: 'Delete canceled'\n                                });\n                            });\n                        } else {\n                            vm.$message({\n                                type: 'error',\n                                message: vm.langConfig['message']\n                            });\n                        }\n\n\n                    })\n                } else {\n                    if (row.canRemove === true) {\n                        vm.$confirm(vm.langConfig['messageWarning'], vm.langConfig['warning'], {\n                            confirmButtonText: 'OK',\n                            cancelButtonText: 'Cancel',\n                            type: 'warning'\n                        }).then(() => {\n                            Meteor.call(\"removePosReceivePayment\", row._id, (err, result) => {\n                                if (!err) {\n                                    rows.splice(index, 1);\n                                    vm.$message({\n                                        message: ` ${row.receivePaymentDateName} ` + vm.langConfig['removeSuccess'],\n                                        type: 'success'\n                                    });\n\n                                } else {\n                                    vm.$message({\n                                        type: 'error',\n                                        message: vm.langConfig['removeFail']\n                                    });\n                                }\n\n                            })\n                        }).catch(() => {\n                            vm.$message({\n                                type: 'info',\n                                message: 'Delete canceled'\n                            });\n                        });\n                    } else {\n                        vm.$message({\n                            type: 'error',\n                            message: vm.langConfig['message']\n                        });\n                    }\n                }\n\n            },\n            popupPosReceivePaymentAdd() {\n                let vm = this;\n\n                vm.dialogAddPosReceivePayment = true;\n                vm.resetForm();\n                vm.itemOpt();\n                $(\".el-dialog__title\").text(this.langConfig['add']);\n\n                vm.customerOpt();\n                vm.termOpt();\n\n                Meteor.call(\"queryLastClosingEntry\", Session.get(\"area\"), function (err, re) {\n                    if (re !== undefined) {\n                        vm.closeDate = re.closeDate;\n                    } else {\n                        vm.closeDate = \"\";\n                    }\n                })\n                \n\n            },\n            updatePosReceivePaymentDetail(row, index, type) {\n                let vm = this;\n                if (row.isPaid === false) {\n                    row.paid = 0;\n                    row.isApplyTerm = false;\n                }\n                if (row.isApplyTerm) {\n                    Meteor.call(\"queryPosTermById\", row.termId, (err, data) => {\n                        if (data && data.isDiscount && row.paid === vm.$_numeral(row.netAmount).value()) {\n                            if (row.isPaid) {\n                                row.discount = 0;\n                                if (moment(vm.posReceivePaymentForm.receivePaymentDate).diff(row.invoiceDate, \"days\") <= data.daysForDiscount) {\n                                    row.discount = vm.$_numeral(row.amount).value() * data.value / 100;\n                                }\n                                row.paid = vm.$_numeral(row.amount).value() - vm.$_numeral(row.discount).value();\n                                row.netAmount = formatCurrency(vm.$_numeral(row.amount).value() - vm.$_numeral(row.discount).value());\n                            } else {\n                                row.discount = 0;\n                                if (moment(vm.posReceivePaymentForm.receivePaymentDate).diff(row.invoiceDate, \"days\") <= data.daysForDiscount) {\n                                    row.discount = formatCurrency(vm.$_numeral(row.amount).value() * data.value / 100);\n                                    row.netAmount = formatCurrency(vm.$_numeral(row.amount).value() - row.discount);\n\n                                }\n                                row.paid = 0;\n                            }\n                        } else {\n                            if (row.isPaid) {\n                                row.discount = 0;\n                                row.paid = vm.$_numeral(row.amount).value();\n                                row.netAmount = formatCurrency(row.amount);\n                            } else {\n                                row.discount = 0;\n                                row.paid = 0;\n                                row.netAmount = formatCurrency(row.amount);\n                            }\n                        }\n                        this.posReceivePaymentData[index] = row;\n                        vm.getTotal(type);\n                    })\n\n                } else {\n                    if (row.isPaid) {\n                        row.discount = 0;\n                        row.paid = vm.$_numeral(row.amount).value();\n                        row.netAmount = formatCurrency(row.amount);\n                    } else {\n                        row.discount = 0;\n                        row.netAmount = formatCurrency(row.amount);\n                        row.paid = 0;\n                    }\n                    this.posReceivePaymentData[index] = row;\n                    vm.getTotal();\n                }\n            },\n            updatePosReceivePaymentDetailPaid(row, index, type) {\n                if (row.netAmount !== row.paid) {\n                    if (row.paid > 0) {\n                        row.isPaid = true;\n                    } else {\n                        row.isPaid = false;\n                    }\n                    row.discount = 0;\n                    row.netAmount = row.amount;\n                    this.posReceivePaymentData[index] = row;\n                } else {\n                    if (row.paid > 0) {\n                        row.isPaid = true;\n                    } else {\n                        row.isPaid = false;\n                    }\n                    this.posReceivePaymentData[index] = row;\n                    this.updatePosReceivePaymentDetail(row, index, type);\n                }\n                this.getTotal();\n            },\n            cancel() {\n                this.resetForm();\n                this.$message({\n                    type: 'info',\n                    message: 'Canceled'\n                });\n            },\n            resetForm() {\n                this.posReceivePaymentData = [];\n                this.posReceivePaymentForm.isPaidAll = false;\n                this.posReceivePaymentForm.isApplyTerm = false;\n                if (this.$refs[\"posReceivePaymentFormAdd\"]) {\n                    this.$refs[\"posReceivePaymentFormAdd\"].resetFields();\n                    this.getTotal();\n\n                    this.refForm = \"\";\n\n                }\n            },\n            getTotal(type) {\n                let vm = this;\n                let totalNetAmount = 0;\n                let totalDiscount = 0;\n                let totalPaid = 0;\n                vm.posReceivePaymentData.forEach(function (obj) {\n                    if (obj.isShow) {\n                        totalNetAmount += parseFloat(vm.$_numeral(obj.netAmount).value() || 0);\n                        totalDiscount += parseFloat(vm.$_numeral(obj.discount).value() || 0);\n                        totalPaid += parseFloat(vm.$_numeral(obj.paid).value() || 0);\n                    }\n                });\n\n                if (type === undefined || type === \"\") {\n                    vm.totalPaidInput = totalPaid;\n                }\n                let companyDoc = WB_waterBillingSetup.findOne({});\n                this.currencySymbol = getCurrencySymbolById(companyDoc.baseCurrency);\n                vm.posReceivePaymentForm.totalNetAmount = formatCurrencyLast(totalNetAmount, companyDoc.baseCurrency);\n                vm.posReceivePaymentForm.totalDiscount = formatCurrencyLast(totalDiscount, companyDoc.baseCurrency);\n                vm.posReceivePaymentForm.totalPaid = formatCurrencyLast(totalPaid, companyDoc.baseCurrency);\n                vm.posReceivePaymentForm.balanceUnPaid = formatCurrencyLast(totalNetAmount - totalPaid, companyDoc.baseCurrency);\n            },\n            searchInvoice() {\n                let vm = this;\n                let canFind = 0;\n                let ind = 0;\n                vm.posReceivePaymentData.forEach((obj) => {\n                    if ((obj.invoiceNo === vm.searchByInvoice || vm.searchByInvoice === \"\") && ((moment(obj.invoiceDate).toDate().getTime() > moment(vm.searchByDate[0]).toDate().getTime() && moment(obj.invoiceDate).toDate().getTime() < moment(vm.searchByDate[1]).toDate().getTime()) || vm.searchByDate[0] == null)) {\n                        obj.isShow = true;\n                        canFind++;\n                    } else {\n                        obj.isShow = false;\n                        obj.isPaid = false;\n                        obj.isApplyTerm = false;\n                    }\n                    vm.updatePosReceivePaymentDetail(obj, ind);\n                    ind++;\n                });\n                if (canFind === 0) {\n                    this.$message({\n                        type: 'error',\n                        message: 'Not Found'\n                    });\n                } else {\n\n                    this.$message({\n                        type: 'success',\n                        message: 'Have ' + canFind + \" Invoices\"\n                    });\n                }\n                vm.getTotal();\n                if (vm.isOverDue) {\n                    vm.overDueStatus(vm.isOverDue);\n                }\n\n            },\n            searchDate(val) {\n                let vm = this;\n                let canFind = 0;\n                let ind = 0;\n                vm.posReceivePaymentData.forEach((obj) => {\n                    if ((obj.invoiceNo === vm.searchByInvoice || vm.searchByInvoice === \"\") && (moment(obj.invoiceDate).toDate().getTime() > moment(val[0]).toDate().getTime() && moment(obj.invoiceDate).toDate().getTime() < moment(val[1]).toDate().getTime()) || val[0] == null) {\n                        obj.isShow = true;\n                        canFind++;\n                    } else {\n                        obj.isShow = false;\n                        obj.isPaid = false;\n                        obj.isApplyTerm = false;\n                    }\n                    vm.updatePosReceivePaymentDetail(obj, ind);\n                    ind++;\n                });\n                if (canFind == 0) {\n                    this.$message({\n                        type: 'error',\n                        message: 'Not Found'\n                    });\n                } else {\n\n                    this.$message({\n                        type: 'success',\n                        message: 'Have ' + canFind + \" Invoices\"\n                    });\n                }\n                vm.getTotal();\n                if (vm.isOverDue) {\n                    vm.overDueStatus(vm.isOverDue);\n                }\n            },\n            overDueStatus(val) {\n                let vm = this;\n                if (val) {\n                    vm.posReceivePaymentData.map((obj) => {\n                        if (obj.isShow === true && obj.dayOverDue <= 0) {\n                            obj.isShow = false;\n                        }\n                        return obj;\n                    })\n                } else {\n                    vm.searchInvoice();\n                }\n            },\n            printReceivePayment(data) {\n                if (data.isSaleOrder) {\n                    FlowRouter.go('/pos-data/posInvoiceReceivePaymentFromSaleOrder/print?inv=' + data._id);\n                } else {\n\n                    FlowRouter.go('/pos-data/posInvoiceReceivePayment/print?inv=' + data._id);\n                }\n            },\n            inputTotalPaid() {\n                let vm = this;\n                let totalPaidInput = vm.totalPaidInput;\n                let ind = 0;\n                vm.posReceivePaymentData.map(function (obj) {\n                    if (obj.isShow) {\n                        if (totalPaidInput >= 0) {\n                            let pay = totalPaidInput > (parseFloat(vm.$_numeral(obj.netAmount).value() || 0)) ? (parseFloat(vm.$_numeral(obj.netAmount).value() || 0)) : totalPaidInput;\n                            obj.paid = pay;\n                            totalPaidInput -= pay;\n                            vm.updatePosReceivePaymentDetailPaid(obj, ind, true);\n                            ind++;\n                        }\n\n                    }\n                });\n\n            },\n            popupPosReceivePaymentFromSaleOrder() {\n                this.resetForm();\n                this.itemOpt();\n                let vm = this;\n                $(\".el-dialog__title\").text(this.langConfig['addReceiveFromSaleOrder']);\n\n                this.customerSaleOrderOpt();\n                this.termOpt();\n\n                Meteor.call(\"queryLastClosingEntry\", Session.get(\"area\"), function (err, re) {\n                    if (re !== undefined) {\n                        vm.closeDate = re.closeDate;\n                    } else {\n                        vm.closeDate = \"\";\n                    }\n                })\n            }\n        },\n        created() {\n            this.isSearching = true;\n            this.queryData();\n            this.getTotal();\n            this.locationOpt();\n            Meteor.subscribe('Pos_ReceivePaymentReact');\n            let ma = Manage_Module.findOne();\n            this.validateReceivePayment = ma.validateReceivePayment;\n        },\n        computed: {\n            langConfig() {\n                let data = compoLang.filter(config => config.lang === this.langSession)[0]['receivePayment'];\n                return data;\n            }\n        }\n    }\n\n\n"]},"sourceType":"script","hash":"5b890960576007f84893c0fc8b36efcdfab7488e"}
