{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/snr/Desktop/Project/spa/imports/vue/ui/posProduct.vue","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"/home/snr/Desktop/Project/spa/imports/vue/ui/posProduct.vue","filename":"/home/snr/Desktop/Project/spa/imports/vue/ui/posProduct.vue","passPerPreset":false,"envName":"development","cwd":"/home/snr/Desktop/Project/spa","root":"/home/snr/Desktop/Project/spa","generatorOpts":{"filename":"/home/snr/Desktop/Project/spa/imports/vue/ui/posProduct.vue","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"/home/snr/Desktop/Project/spa/imports/vue/ui/posProduct.vue"}},"code":"var compoLang;\nmodule.link(\"../../../both/i18n/lang/elem-label\", {\n  \"default\": function (v) {\n    compoLang = v;\n  }\n}, 0);\nvar Pos_ProductReact;\nmodule.link(\"../../collection/posProduct\", {\n  Pos_ProductReact: function (v) {\n    Pos_ProductReact = v;\n  }\n}, 1);\nvar Images;\nmodule.link(\"../../collection/fileImages\", {\n  Images: function (v) {\n    Images = v;\n  }\n}, 2);\nvar Manage_Module;\nmodule.link(\"../../collection/manageModule\", {\n  Manage_Module: function (v) {\n    Manage_Module = v;\n  }\n}, 3);\nmodule.exportDefault({\n  meteor: {\n    langSession: function () {\n      return Session.get('lang') || \"en\";\n    },\n    disabledRemove: function () {\n      return Session.get(\"canRemove\");\n    },\n    disabledUpdate: function () {\n      return Session.get(\"canUpdate\");\n    },\n    newRe: function () {\n      var vm = this;\n      Pos_ProductReact.find({}).fetch();\n      vm.queryData(vm.searchData, vm.skip, vm.currentSize + vm.skip);\n    },\n    isCoffee: function () {\n      var ma = Manage_Module.findOne();\n\n      if (ma && ma.feature) {\n        return ma.feature.indexOf(\"Coffee\") > -1 ? true : false;\n      }\n\n      return false;\n    }\n  },\n  mounted: function () {\n    this.$jQuery('body').off();\n  },\n  data: function () {\n    return {\n      newLoading: true,\n      dialogImageUrl: \"\",\n      dialogVisible: false,\n      isloadingImage: false,\n      thumbImgCroppa: null,\n      imgUrl: \"\",\n      imgUrlUpdate: \"\",\n      refForm: \"\",\n      posProductData: [],\n      loading: false,\n      searchData: '',\n      isSearching: false,\n      currentPage: 1,\n      currentSize: 10,\n      count: 0,\n      dialogAddPosProduct: false,\n      dialogUpdatePosProduct: false,\n      posProductForm: {\n        name: \"\",\n        khName: \"\",\n        code: \"\",\n        description: \"\",\n        categoryId: \"\",\n        productType: \"Inventory\",\n        isTaxable: false,\n        qtyOnHand: 0,\n        whPrice: 0,\n        rePrice: 0,\n        cost: 0,\n        _id: \"\",\n        minimumStock: \"\",\n        barcode: \"\",\n        unitId: \"\"\n      },\n      rules: {\n        name: [{\n          required: true,\n          message: 'Please input name',\n          trigger: 'blur'\n        }],\n        unitId: [{\n          required: true,\n          message: 'Please input Unit',\n          trigger: 'change'\n        }],\n        categoryId: [{\n          required: true,\n          message: 'Please input Category',\n          trigger: 'change'\n        }],\n        code: [{\n          required: true,\n          message: 'Please input code',\n          trigger: 'blur'\n        }]\n      },\n      categoryDataOption: [],\n      unitDataOption: [],\n      productpTypeOption: [{\n        label: \"Inventory\",\n        value: \"Inventory\"\n      }, // {label: \"Non Inventory\", value: \"Non Inventory\"},\n      {\n        label: \"Service\",\n        value: \"Service\"\n      }],\n      skip: 0\n    };\n  },\n  watch: {\n    currentSize: function (val) {\n      this.isSearching = true;\n      this.skip = (this.currentPage - 1) * val;\n      this.queryData(this.searchData, this.skip, val + this.skip);\n    },\n    currentPage: function (val) {\n      this.isSearching = true;\n      this.skip = (val - 1) * this.currentSize;\n      this.queryData(this.searchData, this.skip, this.currentSize + this.skip);\n    },\n    searchData: function (val) {\n      this.isSearching = true;\n      this.skip = (this.currentPage - 1) * this.currentSize;\n      this.queryData(val, this.skip, this.currentSize + this.skip);\n    },\n    \"posProductForm.categoryId\": function (val) {\n      var vm = this;\n\n      if (this.refForm === \"posProductFormAdd\") {\n        Meteor.call(\"getProductCodeByCateogry\", val, function (err, result) {\n          if (!err) {\n            vm.posProductForm.code = result;\n          }\n        });\n      }\n    },\n    'thumbImgCroppa.loading': function (val) {\n      if (!val) {\n        this.generateThumbImgUrl();\n      }\n    }\n  },\n  methods: {\n    handleSizeChange: function (val) {\n      this.currentSize = val;\n    },\n    handleCurrentChange: function (val) {\n      this.currentPage = val;\n    },\n    queryData: _.debounce(function (val, skip, limit) {\n      var _this = this;\n\n      this.newLoading = true;\n      Meteor.call('queryPosProduct', {\n        q: val,\n        filter: this.filter,\n        options: {\n          skip: skip || 0,\n          limit: limit || 10\n        }\n      }, function (err, result) {\n        if (!err) {\n          _this.posProductData = result.content;\n          _this.count = result.countPosProduct;\n        }\n\n        _this.isSearching = false;\n        _this.newLoading = false;\n      });\n    }, 300),\n    queryCategoryDataOption: function () {\n      var selector = {};\n      var vm = this;\n      Meteor.call(\"queryCategoryOption\", selector, function (err, result) {\n        if (result) {\n          vm.categoryDataOption = result;\n        }\n      });\n    },\n    queryUnitDataOption: function () {\n      var selector = {};\n      var vm = this;\n      Meteor.call(\"queryPosUnitOption\", selector, function (err, result) {\n        if (result) {\n          vm.unitDataOption = result;\n        }\n      });\n    },\n    savePosProduct: function (event) {\n      event.preventDefault();\n      var vm = this;\n      this.$refs[\"posProductFormAdd\"].validate(function (valid) {\n        if (valid) {\n          var imageId = \"\";\n          var imagePath = \"\";\n\n          if (vm.thumbImgCroppa && vm.thumbImgCroppa.hasImage() && vm.imgUrl) {\n            var upload = Images.insert({\n              file: vm.imgUrl,\n              streams: 'dynamic',\n              chunkSize: 'dynamic'\n            }, false);\n            upload.on('start', function (error, result) {\n              if (error) {\n                console.log(error.message);\n              }\n            });\n            upload.on('end', function (error, fileObj) {\n              if (error) {\n                console.log(error.message);\n              } else {\n                imageId = fileObj._id;\n                imagePath = fileObj._downloadRoute + \"/\" + fileObj._collectionName + \"/\" + fileObj._id + \"/original/\" + fileObj._id + fileObj.extensionWithDot;\n                var posProductDoc = {\n                  code: vm.posProductForm.code,\n                  name: vm.posProductForm.name,\n                  khName: vm.posProductForm.khName,\n                  productType: vm.posProductForm.productType,\n                  categoryId: vm.posProductForm.categoryId,\n                  whPrice: vm.posProductForm.whPrice,\n                  rePrice: vm.posProductForm.rePrice,\n                  cost: vm.posProductForm.cost,\n                  qtyOnHand: vm.posProductForm.qtyOnHand,\n                  isTaxable: vm.posProductForm.isTaxable,\n                  description: vm.posProductForm.description,\n                  minimumStock: vm.posProductForm.minimumStock,\n                  unitId: vm.posProductForm.unitId,\n                  barcode: vm.posProductForm.barcode,\n                  imageId: imageId,\n                  imagePath: imagePath\n                };\n                Meteor.call(\"insertPosProduct\", posProductDoc, function (err, result) {\n                  if (!err) {\n                    vm.$message({\n                      duration: 1000,\n                      message: \"Save Successfully!\",\n                      type: 'success'\n                    });\n                    vm.dialogAddPosProduct = false;\n                    vm.queryCategoryDataOption();\n\n                    if (vm.$refs[\"posProductFormAdd\"]) {\n                      vm.$refs[\"posProductFormAdd\"].resetFields();\n                    }\n                  } else {\n                    vm.$message({\n                      duration: 1000,\n                      message: err.message,\n                      type: 'error'\n                    });\n                  }\n                });\n              }\n            });\n            upload.start();\n          } else {\n            var posProductDoc = {\n              code: vm.posProductForm.code,\n              name: vm.posProductForm.name,\n              khName: vm.posProductForm.khName,\n              productType: vm.posProductForm.productType,\n              categoryId: vm.posProductForm.categoryId,\n              whPrice: vm.posProductForm.whPrice,\n              rePrice: vm.posProductForm.rePrice,\n              cost: vm.posProductForm.cost,\n              qtyOnHand: vm.posProductForm.qtyOnHand,\n              isTaxable: vm.posProductForm.isTaxable,\n              description: vm.posProductForm.description,\n              minimumStock: vm.posProductForm.minimumStock,\n              barcode: vm.posProductForm.barcode,\n              unitId: vm.posProductForm.unitId\n            };\n            Meteor.call(\"insertPosProduct\", posProductDoc, function (err, result) {\n              if (!err) {\n                vm.$message({\n                  duration: 1000,\n                  message: \"Save Successfully!\",\n                  type: 'success'\n                });\n                vm.dialogAddPosProduct = false;\n                vm.queryCategoryDataOption();\n\n                if (vm.$refs[\"posProductFormAdd\"]) {\n                  vm.$refs[\"posProductFormAdd\"].resetFields();\n                }\n              } else {\n                vm.$message({\n                  duration: 1000,\n                  message: err.message,\n                  type: 'error'\n                });\n              }\n            });\n          }\n        }\n      });\n    },\n    updatePosProduct: function () {\n      var vm = this;\n      this.$refs[\"posProductFormUpdate\"].validate(function (valid) {\n        if (valid) {\n          if (vm.thumbImgCroppa && vm.thumbImgCroppa.hasImage() && vm.imgUrl) {\n            var upload = Images.insert({\n              file: vm.imgUrl,\n              streams: 'dynamic',\n              chunkSize: 'dynamic'\n            }, false);\n            upload.on('start', function (error, result) {\n              if (error) {\n                console.log(error.message);\n              }\n            });\n            upload.on('end', function (error, fileObj) {\n              if (error) {\n                console.log(error.message);\n              } else {\n                var imageId = fileObj._id;\n                var imagePath = fileObj._downloadRoute + \"/\" + fileObj._collectionName + \"/\" + fileObj._id + \"/original/\" + fileObj._id + fileObj.extensionWithDot;\n                var posProductDoc = {\n                  _id: vm.posProductForm._id,\n                  code: vm.posProductForm.code,\n                  name: vm.posProductForm.name,\n                  khName: vm.posProductForm.khName,\n                  productType: vm.posProductForm.productType,\n                  categoryId: vm.posProductForm.categoryId,\n                  whPrice: vm.posProductForm.whPrice,\n                  rePrice: vm.posProductForm.rePrice,\n                  cost: vm.posProductForm.cost,\n                  qtyOnHand: vm.posProductForm.qtyOnHand,\n                  isTaxable: vm.posProductForm.isTaxable,\n                  description: vm.posProductForm.description,\n                  minimumStock: vm.posProductForm.minimumStock,\n                  unitId: vm.posProductForm.unitId,\n                  barcode: vm.posProductForm.barcode,\n                  imageId: imageId,\n                  imagePath: imagePath\n                };\n                Meteor.call(\"updatePosProduct\", posProductDoc, function (err, result) {\n                  if (!err) {\n                    vm.$message({\n                      duration: 1000,\n                      message: \"\\n                        Update\\n                        Successfully\\n                        !\",\n                      type: 'success'\n                    });\n                    vm.dialogUpdatePosProduct = false;\n                    vm.queryCategoryDataOption();\n\n                    if (vm.$refs[\"posProductFormUpdate\"]) {\n                      vm.$refs[\"posProductFormUpdate\"].resetFields();\n                    }\n                  } else {\n                    vm.$message({\n                      duration: 1000,\n                      message: \"\\n                        Update\\n                        Failed\\n                        !\",\n                      type: 'error'\n                    });\n                  }\n                });\n              }\n            });\n            upload.start();\n          } else {\n            var posProductDoc = {\n              _id: vm.posProductForm._id,\n              code: vm.posProductForm.code,\n              name: vm.posProductForm.name,\n              khName: vm.posProductForm.khName,\n              productType: vm.posProductForm.productType,\n              categoryId: vm.posProductForm.categoryId,\n              whPrice: vm.posProductForm.whPrice,\n              rePrice: vm.posProductForm.rePrice,\n              cost: vm.posProductForm.cost,\n              qtyOnHand: vm.posProductForm.qtyOnHand,\n              isTaxable: vm.posProductForm.isTaxable,\n              description: vm.posProductForm.description,\n              barcode: vm.posProductForm.barcode,\n              minimumStock: vm.posProductForm.minimumStock,\n              unitId: vm.posProductForm.unitId\n            };\n            Meteor.call(\"updatePosProduct\", posProductDoc, function (err, result) {\n              if (!err) {\n                vm.$message({\n                  duration: 1000,\n                  message: \"\\n                        Update\\n                        Successfully\\n                        !\",\n                  type: 'success'\n                });\n                vm.dialogUpdatePosProduct = false;\n                vm.queryCategoryDataOption();\n\n                if (vm.$refs[\"posProductFormUpdate\"]) {\n                  vm.$refs[\"posProductFormUpdate\"].resetFields();\n                }\n              } else {\n                vm.$message({\n                  duration: 1000,\n                  message: \"\\n                        Update\\n                        Failed\\n                        !\",\n                  type: 'error'\n                });\n              }\n            });\n          }\n        }\n      });\n    },\n    removePosProduct: function (index, row, rows) {\n      var _this2 = this;\n\n      var vm = this;\n      this.$confirm('This will permanently delete the Item. Continue?', 'Warning', {\n        confirmButtonText: 'OK',\n        cancelButtonText: 'Cancel',\n        type: 'warning'\n      }).then(function () {\n        Meteor.call(\"removePosProduct\", row._id, row.imageId, function (err, result) {\n          if (!err) {\n            rows.splice(index, 1);\n            vm.$message({\n              message: \"\\n                        \\u179B\\u17BB\\u1794 \" + row.code + \" : \" + row.name + \" \\u1794\\u17B6\\u1793\\u1787\\u17C4\\u1782\\u1787\\u17D0\\u1799\",\n              type: 'success'\n            });\n            vm.queryCategoryDataOption();\n          } else {\n            vm.$message({\n              type: 'error',\n              message: 'Delete Fialed'\n            });\n          }\n        });\n      }).catch(function () {\n        _this2.$message({\n          type: 'info',\n          message: 'Delete canceled'\n        });\n      });\n    },\n    findPosProductById: function (doc) {\n      var _this3 = this;\n\n      var vm = this;\n      vm.posProductForm = {};\n      Meteor.call(\"queryPosProductById\", doc.row._id, function (err, result) {\n        if (result) {\n          vm.posProductForm._id = result._id;\n          vm.posProductForm = result;\n          vm.imgUrlUpdate = result.imagePath || \"\";\n\n          _this3.queryCategoryDataOption();\n        }\n      });\n    },\n    cancel: function () {\n      this.$message({\n        type: 'info',\n        message: 'Canceled'\n      });\n    },\n    resetForm: function () {\n      this.posProductForm._id = \"\";\n      this.refForm = \"\";\n      this.queryCategoryDataOption();\n\n      if (this.$refs[\"posProductFormAdd\"]) {\n        this.$refs[\"posProductFormAdd\"].resetFields();\n      }\n\n      if (this.$refs[\"posProductFormUpdate\"]) {\n        this.$refs[\"posProductFormUpdate\"].resetFields();\n      }\n    },\n    popUpAdd: function () {\n      this.refForm = \"posProductFormAdd\";\n    },\n    popUpUpdate: function () {\n      this.refForm = \"posProductFormUpdate\";\n    },\n    generateThumbImgUrl: function () {\n      this.isloadingImage = true;\n      var url = this.thumbImgCroppa && this.thumbImgCroppa.getChosenFile();\n      this.isloadingImage = false; // let url = this.thumbImgCroppa && this.thumbImgCroppa.generateDataUrl();\n\n      if (!url) {\n        return;\n      }\n\n      this.imgUrl = url;\n    },\n    handleThumbImgCroppaZoom: function () {\n      this.generateThumbImgUrl();\n    },\n    handleThumbImgCroppaMove: function () {\n      this.generateThumbImgUrl();\n    },\n    handleThumbImgRemove: function () {\n      this.imgUrl = null;\n    },\n    handlePictureCardPreview: function (url) {\n      this.dialogImageUrl = url;\n      this.dialogVisible = true;\n    }\n  },\n  created: function () {\n    this.isSearching = true;\n    this.queryCategoryDataOption();\n    this.queryUnitDataOption();\n    this.queryData();\n    Meteor.subscribe('Pos_ProductReact');\n  },\n  computed: {\n    langConfig: function () {\n      var _this4 = this;\n\n      var data = compoLang.filter(function (config) {\n        return config.lang === _this4.langSession;\n      })[0]['product'];\n      return data;\n    }\n  }\n});","map":{"version":3,"sources":["/home/snr/Desktop/Project/spa/imports/vue/ui/posProduct.vue"],"names":["compoLang","module","link","v","Pos_ProductReact","Images","Manage_Module","exportDefault","meteor","langSession","Session","get","disabledRemove","disabledUpdate","newRe","vm","find","fetch","queryData","searchData","skip","currentSize","isCoffee","ma","findOne","feature","indexOf","mounted","$jQuery","off","data","newLoading","dialogImageUrl","dialogVisible","isloadingImage","thumbImgCroppa","imgUrl","imgUrlUpdate","refForm","posProductData","loading","isSearching","currentPage","count","dialogAddPosProduct","dialogUpdatePosProduct","posProductForm","name","khName","code","description","categoryId","productType","isTaxable","qtyOnHand","whPrice","rePrice","cost","_id","minimumStock","barcode","unitId","rules","required","message","trigger","categoryDataOption","unitDataOption","productpTypeOption","label","value","watch","val","Meteor","call","err","result","generateThumbImgUrl","methods","handleSizeChange","handleCurrentChange","_","debounce","limit","q","filter","options","content","countPosProduct","queryCategoryDataOption","selector","queryUnitDataOption","savePosProduct","event","preventDefault","$refs","validate","valid","imageId","imagePath","hasImage","upload","insert","file","streams","chunkSize","on","error","console","log","fileObj","_downloadRoute","_collectionName","extensionWithDot","posProductDoc","$message","duration","type","resetFields","start","updatePosProduct","removePosProduct","index","row","rows","$confirm","confirmButtonText","cancelButtonText","then","splice","catch","findPosProductById","doc","cancel","resetForm","popUpAdd","popUpUpdate","url","getChosenFile","handleThumbImgCroppaZoom","handleThumbImgCroppaMove","handleThumbImgRemove","handlePictureCardPreview","created","subscribe","computed","langConfig","config","lang"],"mappings":"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","sourcesContent":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n    import compoLang from '../../../both/i18n/lang/elem-label'\n    import {Pos_ProductReact} from \"../../collection/posProduct\";\n    import {Images} from \"../../collection/fileImages\";\n    import {Manage_Module} from \"../../collection/manageModule\";\n\n    export default {\n        meteor: {\n            langSession() {\n                return Session.get('lang') || \"en\";\n            },\n            disabledRemove() {\n                return Session.get(\"canRemove\");\n            },\n            disabledUpdate() {\n                return Session.get(\"canUpdate\");\n            },\n            newRe() {\n                let vm = this;\n                Pos_ProductReact.find({}).fetch();\n                vm.queryData(vm.searchData, vm.skip, vm.currentSize + vm.skip);\n            },\n            isCoffee() {\n                let ma = Manage_Module.findOne();\n                if (ma && ma.feature) {\n                    return (ma.feature.indexOf(\"Coffee\") > -1 ? true : false);\n                }\n\n                return false;\n            }\n        },\n        mounted() {\n            this.$jQuery('body').off();\n\n        },\n        data() {\n            return {\n                newLoading: true,\n                dialogImageUrl: \"\",\n                dialogVisible: false,\n                isloadingImage: false,\n                thumbImgCroppa: null,\n                imgUrl: \"\",\n                imgUrlUpdate: \"\",\n                refForm: \"\",\n                posProductData: [],\n                loading: false,\n                searchData: '',\n                isSearching: false,\n                currentPage: 1,\n                currentSize: 10,\n                count: 0,\n                dialogAddPosProduct: false,\n                dialogUpdatePosProduct: false,\n\n                posProductForm: {\n                    name: \"\",\n                    khName: \"\",\n                    code: \"\",\n                    description: \"\",\n                    categoryId: \"\",\n                    productType: \"Inventory\",\n                    isTaxable: false,\n                    qtyOnHand: 0,\n                    whPrice: 0,\n                    rePrice: 0,\n                    cost: 0,\n                    _id: \"\",\n                    minimumStock: \"\",\n                    barcode: \"\",\n                    unitId: \"\"\n                },\n                rules: {\n                    name: [{required: true, message: 'Please input name', trigger: 'blur'}],\n                    unitId: [{required: true, message: 'Please input Unit', trigger: 'change'}],\n                    categoryId: [{required: true, message: 'Please input Category', trigger: 'change'}],\n                    code: [{required: true, message: 'Please input code', trigger: 'blur'}],\n                },\n                categoryDataOption: [],\n                unitDataOption: [],\n                productpTypeOption: [\n                    {label: \"Inventory\", value: \"Inventory\"},\n                    // {label: \"Non Inventory\", value: \"Non Inventory\"},\n                    {label: \"Service\", value: \"Service\"},\n                    // {label: \"Bundle\", value: \"Bundle\"}\n                ],\n                skip: 0\n            }\n        },\n        watch: {\n            currentSize(val) {\n                this.isSearching = true;\n                this.skip = (this.currentPage - 1) * val;\n                this.queryData(this.searchData, this.skip, val + this.skip);\n            },\n            currentPage(val) {\n                this.isSearching = true;\n                this.skip = (val - 1) * this.currentSize;\n                this.queryData(this.searchData, this.skip, this.currentSize + this.skip);\n            },\n            searchData(val) {\n                this.isSearching = true;\n                this.skip = (this.currentPage - 1) * this.currentSize;\n                this.queryData(val, this.skip, this.currentSize + this.skip);\n            },\n            \"posProductForm.categoryId\"(val) {\n                let vm = this;\n                if (this.refForm === \"posProductFormAdd\") {\n                    Meteor.call(\"getProductCodeByCateogry\", val, (err, result) => {\n                        if (!err) {\n                            vm.posProductForm.code = result;\n                        }\n                    })\n                }\n            },\n            'thumbImgCroppa.loading'(val) {\n                if (!val) {\n                    this.generateThumbImgUrl();\n                }\n            }\n        },\n        methods: {\n            handleSizeChange(val) {\n                this.currentSize = val;\n            },\n            handleCurrentChange(val) {\n                this.currentPage = val;\n            },\n            queryData: _.debounce(function (val, skip, limit) {\n                this.newLoading = true;\n                Meteor.call('queryPosProduct', {\n                    q: val,\n                    filter: this.filter,\n                    options: {skip: skip || 0, limit: limit || 10}\n                }, (err, result) => {\n                    if (!err) {\n                        this.posProductData = result.content;\n                        this.count = result.countPosProduct;\n                    }\n                    this.isSearching = false;\n                    this.newLoading = false;\n                });\n            }, 300),\n\n            queryCategoryDataOption() {\n                let selector = {};\n                let vm = this;\n                Meteor.call(\"queryCategoryOption\", selector, (err, result) => {\n                    if (result) {\n                        vm.categoryDataOption = result;\n                    }\n                })\n            },\n            queryUnitDataOption() {\n                let selector = {};\n                let vm = this;\n                Meteor.call(\"queryPosUnitOption\", selector, (err, result) => {\n                    if (result) {\n                        vm.unitDataOption = result;\n                    }\n                })\n            },\n            savePosProduct(event) {\n                event.preventDefault();\n                let vm = this;\n                this.$refs[\"posProductFormAdd\"].validate((valid) => {\n                    if (valid) {\n\n                        let imageId = \"\";\n                        let imagePath = \"\";\n                        if (vm.thumbImgCroppa && vm.thumbImgCroppa.hasImage() && vm.imgUrl) {\n                            const upload = Images.insert({\n                                file: vm.imgUrl,\n                                streams: 'dynamic',\n                                chunkSize: 'dynamic'\n                            }, false);\n\n                            upload.on('start', function (error, result) {\n                                if (error) {\n                                    console.log(error.message);\n                                }\n                            })\n\n                            upload.on('end', function (error, fileObj) {\n                                if (error) {\n                                    console.log(error.message);\n                                } else {\n                                    imageId = fileObj._id;\n                                    imagePath = fileObj._downloadRoute + \"/\" + fileObj._collectionName + \"/\" + fileObj._id + \"/original/\" + fileObj._id + fileObj.extensionWithDot;\n\n                                    let posProductDoc = {\n                                        code: vm.posProductForm.code,\n                                        name: vm.posProductForm.name,\n                                        khName: vm.posProductForm.khName,\n                                        productType: vm.posProductForm.productType,\n                                        categoryId: vm.posProductForm.categoryId,\n                                        whPrice: vm.posProductForm.whPrice,\n                                        rePrice: vm.posProductForm.rePrice,\n                                        cost: vm.posProductForm.cost,\n                                        qtyOnHand: vm.posProductForm.qtyOnHand,\n                                        isTaxable: vm.posProductForm.isTaxable,\n                                        description: vm.posProductForm.description,\n                                        minimumStock: vm.posProductForm.minimumStock,\n                                        unitId: vm.posProductForm.unitId,\n                                        barcode: vm.posProductForm.barcode,\n                                        imageId: imageId,\n                                        imagePath: imagePath\n\n                                    };\n\n                                    Meteor.call(\"insertPosProduct\", posProductDoc, (err, result) => {\n                                        if (!err) {\n                                            vm.$message({\n                                                duration: 1000,\n                                                message: `Save Successfully!`,\n                                                type: 'success'\n                                            });\n                                            vm.dialogAddPosProduct = false;\n                                            vm.queryCategoryDataOption();\n                                            if (vm.$refs[\"posProductFormAdd\"]) {\n                                                vm.$refs[\"posProductFormAdd\"].resetFields();\n                                            }\n                                        } else {\n                                            vm.$message({\n                                                duration: 1000,\n                                                message: err.message,\n                                                type: 'error'\n                                            });\n                                        }\n                                    })\n\n                                }\n                            })\n\n                            upload.start();\n                        } else {\n                            let posProductDoc = {\n                                code: vm.posProductForm.code,\n                                name: vm.posProductForm.name,\n                                khName: vm.posProductForm.khName,\n                                productType: vm.posProductForm.productType,\n                                categoryId: vm.posProductForm.categoryId,\n                                whPrice: vm.posProductForm.whPrice,\n                                rePrice: vm.posProductForm.rePrice,\n                                cost: vm.posProductForm.cost,\n                                qtyOnHand: vm.posProductForm.qtyOnHand,\n                                isTaxable: vm.posProductForm.isTaxable,\n                                description: vm.posProductForm.description,\n                                minimumStock: vm.posProductForm.minimumStock,\n                                barcode: vm.posProductForm.barcode,\n                                unitId: vm.posProductForm.unitId\n\n                            };\n\n                            Meteor.call(\"insertPosProduct\", posProductDoc, (err, result) => {\n                                if (!err) {\n                                    vm.$message({\n                                        duration: 1000,\n                                        message: `Save Successfully!`,\n                                        type: 'success'\n                                    });\n                                    vm.dialogAddPosProduct = false;\n                                    vm.queryCategoryDataOption();\n                                    if (vm.$refs[\"posProductFormAdd\"]) {\n                                        vm.$refs[\"posProductFormAdd\"].resetFields();\n                                    }\n                                } else {\n                                    vm.$message({\n                                        duration: 1000,\n                                        message: err.message,\n                                        type: 'error'\n                                    });\n                                }\n                            })\n                        }\n                    }\n                })\n\n            },\n            updatePosProduct() {\n                let vm = this;\n                this.$refs[\"posProductFormUpdate\"].validate((valid) => {\n                    if (valid) {\n                        if (vm.thumbImgCroppa && vm.thumbImgCroppa.hasImage() && vm.imgUrl) {\n                            const upload = Images.insert({\n                                file: vm.imgUrl,\n                                streams: 'dynamic',\n                                chunkSize: 'dynamic'\n                            }, false);\n\n                            upload.on('start', function (error, result) {\n                                if (error) {\n                                    console.log(error.message);\n                                }\n                            })\n\n                            upload.on('end', function (error, fileObj) {\n                                if (error) {\n                                    console.log(error.message);\n                                } else {\n                                    let imageId = fileObj._id;\n                                    let imagePath = fileObj._downloadRoute + \"/\" + fileObj._collectionName + \"/\" + fileObj._id + \"/original/\" + fileObj._id + fileObj.extensionWithDot;\n\n                                    let posProductDoc = {\n                                        _id: vm.posProductForm._id,\n                                        code: vm.posProductForm.code,\n                                        name: vm.posProductForm.name,\n                                        khName: vm.posProductForm.khName,\n                                        productType: vm.posProductForm.productType,\n                                        categoryId: vm.posProductForm.categoryId,\n                                        whPrice: vm.posProductForm.whPrice,\n                                        rePrice: vm.posProductForm.rePrice,\n                                        cost: vm.posProductForm.cost,\n                                        qtyOnHand: vm.posProductForm.qtyOnHand,\n                                        isTaxable: vm.posProductForm.isTaxable,\n                                        description: vm.posProductForm.description,\n                                        minimumStock: vm.posProductForm.minimumStock,\n                                        unitId: vm.posProductForm.unitId,\n                                        barcode: vm.posProductForm.barcode,\n\n                                        imageId: imageId,\n                                        imagePath: imagePath\n                                    };\n\n                                    Meteor.call(\"updatePosProduct\", posProductDoc, (err, result) => {\n                                        if (!err) {\n                                            vm.$message({\n                                                duration: 1000,\n                                                message: `\n                        Update\n                        Successfully\n                        !`,\n                                                type: 'success'\n                                            });\n                                            vm.dialogUpdatePosProduct = false;\n                                            vm.queryCategoryDataOption();\n                                            if (vm.$refs[\"posProductFormUpdate\"]) {\n                                                vm.$refs[\"posProductFormUpdate\"].resetFields();\n                                            }\n                                        } else {\n                                            vm.$message({\n                                                duration: 1000,\n                                                message: `\n                        Update\n                        Failed\n                        !`,\n                                                type: 'error'\n                                            });\n                                        }\n                                    })\n\n                                }\n                            })\n\n                            upload.start();\n\n                        } else {\n\n\n                            let posProductDoc = {\n                                _id: vm.posProductForm._id,\n                                code: vm.posProductForm.code,\n                                name: vm.posProductForm.name,\n                                khName: vm.posProductForm.khName,\n                                productType: vm.posProductForm.productType,\n                                categoryId: vm.posProductForm.categoryId,\n                                whPrice: vm.posProductForm.whPrice,\n                                rePrice: vm.posProductForm.rePrice,\n                                cost: vm.posProductForm.cost,\n                                qtyOnHand: vm.posProductForm.qtyOnHand,\n                                isTaxable: vm.posProductForm.isTaxable,\n                                description: vm.posProductForm.description,\n                                barcode: vm.posProductForm.barcode,\n                                minimumStock: vm.posProductForm.minimumStock,\n                                unitId: vm.posProductForm.unitId\n                            };\n\n                            Meteor.call(\"updatePosProduct\", posProductDoc, (err, result) => {\n                                if (!err) {\n                                    vm.$message({\n                                        duration: 1000,\n                                        message: `\n                        Update\n                        Successfully\n                        !`,\n                                        type: 'success'\n                                    });\n                                    vm.dialogUpdatePosProduct = false;\n                                    vm.queryCategoryDataOption();\n                                    if (vm.$refs[\"posProductFormUpdate\"]) {\n                                        vm.$refs[\"posProductFormUpdate\"].resetFields();\n                                    }\n                                } else {\n                                    vm.$message({\n                                        duration: 1000,\n                                        message: `\n                        Update\n                        Failed\n                        !`,\n                                        type: 'error'\n                                    });\n                                }\n                            })\n                        }\n                    }\n                })\n\n            },\n            removePosProduct(index, row, rows) {\n                let vm = this;\n                this.$confirm('This will permanently delete the Item. Continue?', 'Warning', {\n                    confirmButtonText: 'OK',\n                    cancelButtonText: 'Cancel',\n                    type: 'warning'\n                }).then(() => {\n                    Meteor.call(\"removePosProduct\", row._id, row.imageId, (err, result) => {\n                        if (!err) {\n                            rows.splice(index, 1);\n\n                            vm.$message({\n                                message: `\n                        លុប ${row.code} : ${row.name} បានជោគជ័យ`,\n                                type: 'success'\n                            });\n\n                            vm.queryCategoryDataOption();\n                        } else {\n                            vm.$message({\n                                type: 'error',\n                                message: 'Delete Fialed'\n                            });\n                        }\n\n                    })\n\n                }).catch(() => {\n                    this.$message({\n                        type: 'info',\n                        message: 'Delete canceled'\n                    });\n                });\n\n\n            },\n            findPosProductById(doc) {\n                let vm = this;\n                vm.posProductForm = {};\n\n                Meteor.call(\"queryPosProductById\", doc.row._id, (err, result) => {\n                    if (result) {\n                        vm.posProductForm._id = result._id;\n                        vm.posProductForm = result;\n                        vm.imgUrlUpdate = result.imagePath || \"\";\n                        this.queryCategoryDataOption();\n                    }\n                })\n            },\n            cancel() {\n                this.$message({\n                    type: 'info',\n                    message: 'Canceled'\n                });\n            },\n            resetForm() {\n                this.posProductForm._id = \"\";\n                this.refForm = \"\";\n                this.queryCategoryDataOption();\n                if (this.$refs[\"posProductFormAdd\"]) {\n                    this.$refs[\"posProductFormAdd\"].resetFields();\n                }\n\n                if (this.$refs[\"posProductFormUpdate\"]) {\n                    this.$refs[\"posProductFormUpdate\"].resetFields();\n                }\n\n            },\n            popUpAdd() {\n                this.refForm = \"posProductFormAdd\";\n            },\n            popUpUpdate() {\n                this.refForm = \"posProductFormUpdate\";\n            },\n            generateThumbImgUrl: function () {\n                this.isloadingImage = true;\n                let url = this.thumbImgCroppa && this.thumbImgCroppa.getChosenFile();\n                this.isloadingImage = false;\n                // let url = this.thumbImgCroppa && this.thumbImgCroppa.generateDataUrl();\n                if (!url) {\n                    return\n                }\n                this.imgUrl = url\n            },\n            handleThumbImgCroppaZoom() {\n                this.generateThumbImgUrl();\n            },\n            handleThumbImgCroppaMove() {\n                this.generateThumbImgUrl();\n            },\n            handleThumbImgRemove() {\n                this.imgUrl = null\n            },\n            handlePictureCardPreview(url) {\n                this.dialogImageUrl = url;\n                this.dialogVisible = true;\n            }\n        },\n        created() {\n            this.isSearching = true;\n            this.queryCategoryDataOption();\n            this.queryUnitDataOption();\n            this.queryData();\n            Meteor.subscribe('Pos_ProductReact');\n\n        },\n        computed: {\n            langConfig() {\n                let data = compoLang.filter(config => config.lang === this.langSession)[0]['product'];\n                return data;\n            }\n        }\n    }\n"]},"sourceType":"script","hash":"d3b45872960977766659c2551527bbde62deb0b0"}
